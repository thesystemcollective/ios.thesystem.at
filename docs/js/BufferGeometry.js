const t=[];for(let i=0;i<256;i++)t[i]=(i<16?"0":"")+i.toString(16);let i=1234567;const s={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const i=4294967295*Math.random()|0,s=4294967295*Math.random()|0,e=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(t[255&i]+t[i>>8&255]+t[i>>16&255]+t[i>>24&255]+"-"+t[255&s]+t[s>>8&255]+"-"+t[s>>16&15|64]+t[s>>24&255]+"-"+t[63&e|128]+t[e>>8&255]+"-"+t[e>>16&255]+t[e>>24&255]+t[255&r]+t[r>>8&255]+t[r>>16&255]+t[r>>24&255]).toUpperCase()},clamp:function(t,i,s){return Math.max(i,Math.min(s,t))},euclideanModulo:function(t,i){return(t%i+i)%i},mapLinear:function(t,i,s,e,r){return e+(t-i)*(r-e)/(s-i)},lerp:function(t,i,s){return(1-s)*t+s*i},smoothstep:function(t,i,s){return t<=i?0:t>=s?1:(t=(t-i)/(s-i))*t*(3-2*t)},smootherstep:function(t,i,s){return t<=i?0:t>=s?1:(t=(t-i)/(s-i))*t*t*(t*(6*t-15)+10)},randInt:function(t,i){return t+Math.floor(Math.random()*(i-t+1))},randFloat:function(t,i){return t+Math.random()*(i-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(i=t%2147483647),i=16807*i%2147483647,(i-1)/2147483646},degToRad:function(t){return t*s.DEG2RAD},radToDeg:function(t){return t*s.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,i,s,e,r){const n=Math.cos,h=Math.sin,a=n(s/2),o=h(s/2),l=n((i+e)/2),u=h((i+e)/2),c=n((i-e)/2),d=h((i-e)/2),m=n((e-i)/2),p=h((e-i)/2);switch(r){case"XYX":t.set(a*u,o*c,o*d,a*l);break;case"YZY":t.set(o*d,a*u,o*c,a*l);break;case"ZXZ":t.set(o*c,o*d,a*u,a*l);break;case"XZX":t.set(a*u,o*p,o*m,a*l);break;case"YXY":t.set(o*m,a*u,o*p,a*l);break;case"ZYZ":t.set(o*p,o*m,a*u,a*l)}}};class e{constructor(t=0,i=0,s=0,e=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=i,this._z=s,this._w=e}static slerp(t,i,s,e){return s.copy(t).slerp(i,e)}static slerpFlat(t,i,s,e,r,n,h){let a=s[e+0],o=s[e+1],l=s[e+2],u=s[e+3];const c=r[n+0],d=r[n+1],m=r[n+2],p=r[n+3];if(u!==p||a!==c||o!==d||l!==m){let t=1-h;const i=a*c+o*d+l*m+u*p,s=i>=0?1:-1,e=1-i*i;if(e>Number.EPSILON){const r=Math.sqrt(e),n=Math.atan2(r,i*s);t=Math.sin(t*n)/r,h=Math.sin(h*n)/r}const r=h*s;if(a=a*t+c*r,o=o*t+d*r,l=l*t+m*r,u=u*t+p*r,t===1-h){const t=1/Math.sqrt(a*a+o*o+l*l+u*u);a*=t,o*=t,l*=t,u*=t}}t[i]=a,t[i+1]=o,t[i+2]=l,t[i+3]=u}static multiplyQuaternionsFlat(t,i,s,e,r,n){const h=s[e],a=s[e+1],o=s[e+2],l=s[e+3],u=r[n],c=r[n+1],d=r[n+2],m=r[n+3];return t[i]=h*m+l*u+a*d-o*c,t[i+1]=a*m+l*c+o*u-h*d,t[i+2]=o*m+l*d+h*c-a*u,t[i+3]=l*m-h*u-a*c-o*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,s,e){return this._x=t,this._y=i,this._z=s,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const s=t._x,e=t._y,r=t._z,n=t._order,h=Math.cos,a=Math.sin,o=h(s/2),l=h(e/2),u=h(r/2),c=a(s/2),d=a(e/2),m=a(r/2);switch(n){case"XYZ":this._x=c*l*u+o*d*m,this._y=o*d*u-c*l*m,this._z=o*l*m+c*d*u,this._w=o*l*u-c*d*m;break;case"YXZ":this._x=c*l*u+o*d*m,this._y=o*d*u-c*l*m,this._z=o*l*m-c*d*u,this._w=o*l*u+c*d*m;break;case"ZXY":this._x=c*l*u-o*d*m,this._y=o*d*u+c*l*m,this._z=o*l*m+c*d*u,this._w=o*l*u-c*d*m;break;case"ZYX":this._x=c*l*u-o*d*m,this._y=o*d*u+c*l*m,this._z=o*l*m-c*d*u,this._w=o*l*u+c*d*m;break;case"YZX":this._x=c*l*u+o*d*m,this._y=o*d*u+c*l*m,this._z=o*l*m-c*d*u,this._w=o*l*u-c*d*m;break;case"XZY":this._x=c*l*u-o*d*m,this._y=o*d*u-c*l*m,this._z=o*l*m+c*d*u,this._w=o*l*u+c*d*m}return!1!==i&&this._onChangeCallback(),this}setFromAxisAngle(t,i){const s=i/2,e=Math.sin(s);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(t){const i=t.elements,s=i[0],e=i[4],r=i[8],n=i[1],h=i[5],a=i[9],o=i[2],l=i[6],u=i[10],c=s+h+u;if(c>0){const t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-o)*t,this._z=(n-e)*t}else if(s>h&&s>u){const t=2*Math.sqrt(1+s-h-u);this._w=(l-a)/t,this._x=.25*t,this._y=(e+n)/t,this._z=(r+o)/t}else if(h>u){const t=2*Math.sqrt(1+h-s-u);this._w=(r-o)/t,this._x=(e+n)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+u-s-h);this._w=(n-e)/t,this._x=(r+o)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let s=t.dot(i)+1;return s<1e-6?(s=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=s):(this._x=0,this._y=-t.z,this._z=t.y,this._w=s)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=s),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(s.clamp(this.dot(t),-1,1)))}rotateTowards(t,i){const s=this.angleTo(t);if(0===s)return this;const e=Math.min(1,i/s);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,i){return void 0!==i?this.multiplyQuaternions(t,i):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){const s=t._x,e=t._y,r=t._z,n=t._w,h=i._x,a=i._y,o=i._z,l=i._w;return this._x=s*l+n*h+e*o-r*a,this._y=e*l+n*a+r*h-s*o,this._z=r*l+n*o+s*a-e*h,this._w=n*l-s*h-e*a-r*o,this._onChangeCallback(),this}slerp(t,i){if(0===i)return this;if(1===i)return this.copy(t);const s=this._x,e=this._y,r=this._z,n=this._w;let h=n*t._w+s*t._x+e*t._y+r*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=n,this._x=s,this._y=e,this._z=r,this;const a=1-h*h;if(a<=Number.EPSILON){const t=1-i;return this._w=t*n+i*this._w,this._x=t*s+i*this._x,this._y=t*e+i*this._y,this._z=t*r+i*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,h),u=Math.sin((1-i)*l)/o,c=Math.sin(i*l)/o;return this._w=n*u+this._w*c,this._x=s*u+this._x*c,this._y=e*u+this._y*c,this._z=r*u+this._z*c,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i){return void 0===i&&(i=0),this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class r{constructor(t=0,i=0,s=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=i,this.z=s}set(t,i,s){return void 0===s&&(s=this.z),this.x=t,this.y=i,this.z=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,i){return void 0!==i?this.addVectors(t,i):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t,i){return void 0!==i?this.subVectors(t,i):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t,i){return void 0!==i?this.multiplyVectors(t,i):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return!t||t.isEuler,this.applyQuaternion(h.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion(h.setFromAxisAngle(t,i))}applyMatrix3(t){const i=this.x,s=this.y,e=this.z,r=t.elements;return this.x=r[0]*i+r[3]*s+r[6]*e,this.y=r[1]*i+r[4]*s+r[7]*e,this.z=r[2]*i+r[5]*s+r[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const i=this.x,s=this.y,e=this.z,r=t.elements,n=1/(r[3]*i+r[7]*s+r[11]*e+r[15]);return this.x=(r[0]*i+r[4]*s+r[8]*e+r[12])*n,this.y=(r[1]*i+r[5]*s+r[9]*e+r[13])*n,this.z=(r[2]*i+r[6]*s+r[10]*e+r[14])*n,this}applyQuaternion(t){const i=this.x,s=this.y,e=this.z,r=t.x,n=t.y,h=t.z,a=t.w,o=a*i+n*e-h*s,l=a*s+h*i-r*e,u=a*e+r*s-n*i,c=-r*i-n*s-h*e;return this.x=o*a+c*-r+l*-h-u*-n,this.y=l*a+c*-n+u*-r-o*-h,this.z=u*a+c*-h+o*-n-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const i=this.x,s=this.y,e=this.z,r=t.elements;return this.x=r[0]*i+r[4]*s+r[8]*e,this.y=r[1]*i+r[5]*s+r[9]*e,this.z=r[2]*i+r[6]*s+r[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this.z=t.z+(i.z-t.z)*s,this}cross(t,i){return void 0!==i?this.crossVectors(t,i):this.crossVectors(this,t)}crossVectors(t,i){const s=t.x,e=t.y,r=t.z,n=i.x,h=i.y,a=i.z;return this.x=e*a-r*h,this.y=r*n-s*a,this.z=s*h-e*n,this}projectOnVector(t){const i=t.lengthSq();if(0===i)return this.set(0,0,0);const s=t.dot(this)/i;return this.copy(t).multiplyScalar(s)}projectOnPlane(t){return n.copy(this).projectOnVector(t),this.sub(n)}reflect(t){return this.sub(n.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===i)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(s.clamp(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,s=this.y-t.y,e=this.z-t.z;return i*i+s*s+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,s){const e=Math.sin(i)*t;return this.x=e*Math.sin(s),this.y=Math.cos(i)*t,this.z=e*Math.cos(s),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,s){return this.x=t*Math.sin(i),this.y=s,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){const i=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=s,this.z=e,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,4*i)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,3*i)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i){return void 0===i&&(i=0),this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i,s){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const n=new r,h=new e;class a{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,i,s,e,r,n,h,a,o,l,u,c,d,m,p,y){const x=this.elements;return x[0]=t,x[4]=i,x[8]=s,x[12]=e,x[1]=r,x[5]=n,x[9]=h,x[13]=a,x[2]=o,x[6]=l,x[10]=u,x[14]=c,x[3]=d,x[7]=m,x[11]=p,x[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new a).fromArray(this.elements)}copy(t){const i=this.elements,s=t.elements;return i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3],i[4]=s[4],i[5]=s[5],i[6]=s[6],i[7]=s[7],i[8]=s[8],i[9]=s[9],i[10]=s[10],i[11]=s[11],i[12]=s[12],i[13]=s[13],i[14]=s[14],i[15]=s[15],this}copyPosition(t){const i=this.elements,s=t.elements;return i[12]=s[12],i[13]=s[13],i[14]=s[14],this}extractBasis(t,i,s){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(t,i,s){return this.set(t.x,i.x,s.x,0,t.y,i.y,s.y,0,t.z,i.z,s.z,0,0,0,0,1),this}extractRotation(t){const i=this.elements,s=t.elements,e=1/o.setFromMatrixColumn(t,0).length(),r=1/o.setFromMatrixColumn(t,1).length(),n=1/o.setFromMatrixColumn(t,2).length();return i[0]=s[0]*e,i[1]=s[1]*e,i[2]=s[2]*e,i[3]=0,i[4]=s[4]*r,i[5]=s[5]*r,i[6]=s[6]*r,i[7]=0,i[8]=s[8]*n,i[9]=s[9]*n,i[10]=s[10]*n,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(t){!t||t.isEuler;const i=this.elements,s=t.x,e=t.y,r=t.z,n=Math.cos(s),h=Math.sin(s),a=Math.cos(e),o=Math.sin(e),l=Math.cos(r),u=Math.sin(r);if("XYZ"===t.order){const t=n*l,s=n*u,e=h*l,r=h*u;i[0]=a*l,i[4]=-a*u,i[8]=o,i[1]=s+e*o,i[5]=t-r*o,i[9]=-h*a,i[2]=r-t*o,i[6]=e+s*o,i[10]=n*a}else if("YXZ"===t.order){const t=a*l,s=a*u,e=o*l,r=o*u;i[0]=t+r*h,i[4]=e*h-s,i[8]=n*o,i[1]=n*u,i[5]=n*l,i[9]=-h,i[2]=s*h-e,i[6]=r+t*h,i[10]=n*a}else if("ZXY"===t.order){const t=a*l,s=a*u,e=o*l,r=o*u;i[0]=t-r*h,i[4]=-n*u,i[8]=e+s*h,i[1]=s+e*h,i[5]=n*l,i[9]=r-t*h,i[2]=-n*o,i[6]=h,i[10]=n*a}else if("ZYX"===t.order){const t=n*l,s=n*u,e=h*l,r=h*u;i[0]=a*l,i[4]=e*o-s,i[8]=t*o+r,i[1]=a*u,i[5]=r*o+t,i[9]=s*o-e,i[2]=-o,i[6]=h*a,i[10]=n*a}else if("YZX"===t.order){const t=n*a,s=n*o,e=h*a,r=h*o;i[0]=a*l,i[4]=r-t*u,i[8]=e*u+s,i[1]=u,i[5]=n*l,i[9]=-h*l,i[2]=-o*l,i[6]=s*u+e,i[10]=t-r*u}else if("XZY"===t.order){const t=n*a,s=n*o,e=h*a,r=h*o;i[0]=a*l,i[4]=-u,i[8]=o*l,i[1]=t*u+r,i[5]=n*l,i[9]=s*u-e,i[2]=e*u-s,i[6]=h*l,i[10]=r*u+t}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(t){return this.compose(u,t,c)}lookAt(t,i,s){const e=this.elements;return p.subVectors(t,i),0===p.lengthSq()&&(p.z=1),p.normalize(),d.crossVectors(s,p),0===d.lengthSq()&&(1===Math.abs(s.z)?p.x+=1e-4:p.z+=1e-4,p.normalize(),d.crossVectors(s,p)),d.normalize(),m.crossVectors(p,d),e[0]=d.x,e[4]=m.x,e[8]=p.x,e[1]=d.y,e[5]=m.y,e[9]=p.y,e[2]=d.z,e[6]=m.z,e[10]=p.z,this}multiply(t,i){return void 0!==i?this.multiplyMatrices(t,i):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const s=t.elements,e=i.elements,r=this.elements,n=s[0],h=s[4],a=s[8],o=s[12],l=s[1],u=s[5],c=s[9],d=s[13],m=s[2],p=s[6],y=s[10],x=s[14],g=s[3],f=s[7],M=s[11],b=s[15],z=e[0],w=e[4],_=e[8],v=e[12],S=e[1],A=e[5],k=e[9],O=e[13],N=e[2],C=e[6],B=e[10],F=e[14],T=e[3],U=e[7],q=e[11],V=e[15];return r[0]=n*z+h*S+a*N+o*T,r[4]=n*w+h*A+a*C+o*U,r[8]=n*_+h*k+a*B+o*q,r[12]=n*v+h*O+a*F+o*V,r[1]=l*z+u*S+c*N+d*T,r[5]=l*w+u*A+c*C+d*U,r[9]=l*_+u*k+c*B+d*q,r[13]=l*v+u*O+c*F+d*V,r[2]=m*z+p*S+y*N+x*T,r[6]=m*w+p*A+y*C+x*U,r[10]=m*_+p*k+y*B+x*q,r[14]=m*v+p*O+y*F+x*V,r[3]=g*z+f*S+M*N+b*T,r[7]=g*w+f*A+M*C+b*U,r[11]=g*_+f*k+M*B+b*q,r[15]=g*v+f*O+M*F+b*V,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}determinant(){const t=this.elements,i=t[0],s=t[4],e=t[8],r=t[12],n=t[1],h=t[5],a=t[9],o=t[13],l=t[2],u=t[6],c=t[10],d=t[14];return t[3]*(+r*a*u-e*o*u-r*h*c+s*o*c+e*h*d-s*a*d)+t[7]*(+i*a*d-i*o*c+r*n*c-e*n*d+e*o*l-r*a*l)+t[11]*(+i*o*u-i*h*d-r*n*u+s*n*d+r*h*l-s*o*l)+t[15]*(-e*h*l-i*a*u+i*h*c+e*n*u-s*n*c+s*a*l)}transpose(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}setPosition(t,i,s){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=i,e[14]=s),this}getInverse(t,i){const s=this.elements,e=t.elements,r=e[0],n=e[1],h=e[2],a=e[3],o=e[4],l=e[5],u=e[6],c=e[7],d=e[8],m=e[9],p=e[10],y=e[11],x=e[12],g=e[13],f=e[14],M=e[15],b=m*f*c-g*p*c+g*u*y-l*f*y-m*u*M+l*p*M,z=x*p*c-d*f*c-x*u*y+o*f*y+d*u*M-o*p*M,w=d*g*c-x*m*c+x*l*y-o*g*y-d*l*M+o*m*M,_=x*m*u-d*g*u-x*l*p+o*g*p+d*l*f-o*m*f,v=r*b+n*z+h*w+a*_;if(0===v)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/v;return s[0]=b*S,s[1]=(g*p*a-m*f*a-g*h*y+n*f*y+m*h*M-n*p*M)*S,s[2]=(l*f*a-g*u*a+g*h*c-n*f*c-l*h*M+n*u*M)*S,s[3]=(m*u*a-l*p*a-m*h*c+n*p*c+l*h*y-n*u*y)*S,s[4]=z*S,s[5]=(d*f*a-x*p*a+x*h*y-r*f*y-d*h*M+r*p*M)*S,s[6]=(x*u*a-o*f*a-x*h*c+r*f*c+o*h*M-r*u*M)*S,s[7]=(o*p*a-d*u*a+d*h*c-r*p*c-o*h*y+r*u*y)*S,s[8]=w*S,s[9]=(x*m*a-d*g*a-x*n*y+r*g*y+d*n*M-r*m*M)*S,s[10]=(o*g*a-x*l*a+x*n*c-r*g*c-o*n*M+r*l*M)*S,s[11]=(d*l*a-o*m*a-d*n*c+r*m*c+o*n*y-r*l*y)*S,s[12]=_*S,s[13]=(d*g*h-x*m*h+x*n*p-r*g*p-d*n*f+r*m*f)*S,s[14]=(x*l*h-o*g*h-x*n*u+r*g*u+o*n*f-r*l*f)*S,s[15]=(o*m*h-d*l*h+d*n*u-r*m*u-o*n*p+r*l*p)*S,this}scale(t){const i=this.elements,s=t.x,e=t.y,r=t.z;return i[0]*=s,i[4]*=e,i[8]*=r,i[1]*=s,i[5]*=e,i[9]*=r,i[2]*=s,i[6]*=e,i[10]*=r,i[3]*=s,i[7]*=e,i[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,s,e))}makeTranslation(t,i,s){return this.set(1,0,0,t,0,1,0,i,0,0,1,s,0,0,0,1),this}makeRotationX(t){const i=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,i,-s,0,0,s,i,0,0,0,0,1),this}makeRotationY(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,0,s,0,0,1,0,0,-s,0,i,0,0,0,0,1),this}makeRotationZ(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,-s,0,0,s,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,i){const s=Math.cos(i),e=Math.sin(i),r=1-s,n=t.x,h=t.y,a=t.z,o=r*n,l=r*h;return this.set(o*n+s,o*h-e*a,o*a+e*h,0,o*h+e*a,l*h+s,l*a-e*n,0,o*a-e*h,l*a+e*n,r*a*a+s,0,0,0,0,1),this}makeScale(t,i,s){return this.set(t,0,0,0,0,i,0,0,0,0,s,0,0,0,0,1),this}makeShear(t,i,s){return this.set(1,i,s,0,t,1,s,0,t,i,1,0,0,0,0,1),this}compose(t,i,s){const e=this.elements,r=i._x,n=i._y,h=i._z,a=i._w,o=r+r,l=n+n,u=h+h,c=r*o,d=r*l,m=r*u,p=n*l,y=n*u,x=h*u,g=a*o,f=a*l,M=a*u,b=s.x,z=s.y,w=s.z;return e[0]=(1-(p+x))*b,e[1]=(d+M)*b,e[2]=(m-f)*b,e[3]=0,e[4]=(d-M)*z,e[5]=(1-(c+x))*z,e[6]=(y+g)*z,e[7]=0,e[8]=(m+f)*w,e[9]=(y-g)*w,e[10]=(1-(c+p))*w,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,i,s){const e=this.elements;let r=o.set(e[0],e[1],e[2]).length();const n=o.set(e[4],e[5],e[6]).length(),h=o.set(e[8],e[9],e[10]).length();this.determinant()<0&&(r=-r),t.x=e[12],t.y=e[13],t.z=e[14],l.copy(this);const a=1/r,u=1/n,c=1/h;return l.elements[0]*=a,l.elements[1]*=a,l.elements[2]*=a,l.elements[4]*=u,l.elements[5]*=u,l.elements[6]*=u,l.elements[8]*=c,l.elements[9]*=c,l.elements[10]*=c,i.setFromRotationMatrix(l),s.x=r,s.y=n,s.z=h,this}makePerspective(t,i,s,e,r,n){const h=this.elements,a=2*r/(i-t),o=2*r/(s-e),l=(i+t)/(i-t),u=(s+e)/(s-e),c=-(n+r)/(n-r),d=-2*n*r/(n-r);return h[0]=a,h[4]=0,h[8]=l,h[12]=0,h[1]=0,h[5]=o,h[9]=u,h[13]=0,h[2]=0,h[6]=0,h[10]=c,h[14]=d,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,i,s,e,r,n){const h=this.elements,a=1/(i-t),o=1/(s-e),l=1/(n-r),u=(i+t)*a,c=(s+e)*o,d=(n+r)*l;return h[0]=2*a,h[4]=0,h[8]=0,h[12]=-u,h[1]=0,h[5]=2*o,h[9]=0,h[13]=-c,h[2]=0,h[6]=0,h[10]=-2*l,h[14]=-d,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const i=this.elements,s=t.elements;for(let t=0;t<16;t++)if(i[t]!==s[t])return!1;return!0}fromArray(t,i){void 0===i&&(i=0);for(let s=0;s<16;s++)this.elements[s]=t[s+i];return this}toArray(t,i){void 0===t&&(t=[]),void 0===i&&(i=0);const s=this.elements;return t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=s[3],t[i+4]=s[4],t[i+5]=s[5],t[i+6]=s[6],t[i+7]=s[7],t[i+8]=s[8],t[i+9]=s[9],t[i+10]=s[10],t[i+11]=s[11],t[i+12]=s[12],t[i+13]=s[13],t[i+14]=s[14],t[i+15]=s[15],t}}const o=new r,l=new a,u=new r(0,0,0),c=new r(1,1,1),d=new r,m=new r,p=new r;function y(){}Object.assign(y.prototype,{addEventListener:function(t,i){void 0===this._listeners&&(this._listeners={});const s=this._listeners;void 0===s[t]&&(s[t]=[]),-1===s[t].indexOf(i)&&s[t].push(i)},hasEventListener:function(t,i){if(void 0===this._listeners)return!1;const s=this._listeners;return void 0!==s[t]&&-1!==s[t].indexOf(i)},removeEventListener:function(t,i){if(void 0===this._listeners)return;const s=this._listeners[t];if(void 0!==s){const t=s.indexOf(i);-1!==t&&s.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const i=this._listeners[t.type];if(void 0!==i){t.target=this;const s=i.slice(0);for(let i=0,e=s.length;i<e;i++)s[i].call(this,t)}}});class x{constructor(t=0,i=0,s=0,e=x.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=i,this._z=s,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,s,e){return this._x=t,this._y=i,this._z=s,this._order=e||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i,e){const r=s.clamp,n=t.elements,h=n[0],a=n[4],o=n[8],l=n[1],u=n[5],c=n[9],d=n[2],m=n[6],p=n[10];switch(i=i||this._order){case"XYZ":this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-a,h)):(this._x=Math.atan2(m,u),this._z=0);break;case"YXZ":this._x=Math.asin(-r(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-d,h),this._z=0);break;case"ZXY":this._x=Math.asin(r(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,h));break;case"ZYX":this._y=Math.asin(-r(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(m,p),this._z=Math.atan2(l,h)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-d,h)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,u),this._y=Math.atan2(o,h)):(this._x=Math.atan2(-c,p),this._y=0)}return this._order=i,!1!==e&&this._onChangeCallback(),this}setFromQuaternion(t,i,s){return g.makeRotationFromQuaternion(t),this.setFromRotationMatrix(g,i,s)}setFromVector3(t,i){return this.set(t.x,t.y,t.z,i||this._order)}reorder(t){return f.setFromEuler(this),this.setFromQuaternion(f,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new r(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}x.DefaultOrder="XYZ",x.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const g=new a,f=new e;class M{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}class b{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1]}set(t,i,s,e,r,n,h,a,o){const l=this.elements;return l[0]=t,l[1]=e,l[2]=h,l[3]=i,l[4]=r,l[5]=a,l[6]=s,l[7]=n,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const i=this.elements,s=t.elements;return i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3],i[4]=s[4],i[5]=s[5],i[6]=s[6],i[7]=s[7],i[8]=s[8],this}extractBasis(t,i,s){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const s=t.elements,e=i.elements,r=this.elements,n=s[0],h=s[3],a=s[6],o=s[1],l=s[4],u=s[7],c=s[2],d=s[5],m=s[8],p=e[0],y=e[3],x=e[6],g=e[1],f=e[4],M=e[7],b=e[2],z=e[5],w=e[8];return r[0]=n*p+h*g+a*b,r[3]=n*y+h*f+a*z,r[6]=n*x+h*M+a*w,r[1]=o*p+l*g+u*b,r[4]=o*y+l*f+u*z,r[7]=o*x+l*M+u*w,r[2]=c*p+d*g+m*b,r[5]=c*y+d*f+m*z,r[8]=c*x+d*M+m*w,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}determinant(){const t=this.elements,i=t[0],s=t[1],e=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8];return i*n*l-i*h*o-s*r*l+s*h*a+e*r*o-e*n*a}getInverse(t,i){const s=t.elements,e=this.elements,r=s[0],n=s[1],h=s[2],a=s[3],o=s[4],l=s[5],u=s[6],c=s[7],d=s[8],m=d*o-l*c,p=l*u-d*a,y=c*a-o*u,x=r*m+n*p+h*y;if(0===x)return this.set(0,0,0,0,0,0,0,0,0);const g=1/x;return e[0]=m*g,e[1]=(h*c-d*n)*g,e[2]=(l*n-h*o)*g,e[3]=p*g,e[4]=(d*r-h*u)*g,e[5]=(h*a-l*r)*g,e[6]=y*g,e[7]=(n*u-c*r)*g,e[8]=(o*r-n*a)*g,this}transpose(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).getInverse(this).transpose()}transposeIntoArray(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this}setUvTransform(t,i,s,e,r,n,h){const a=Math.cos(r),o=Math.sin(r);this.set(s*a,s*o,-s*(a*n+o*h)+n+t,-e*o,e*a,-e*(-o*n+a*h)+h+i,0,0,1)}scale(t,i){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=i,s[4]*=i,s[7]*=i,this}rotate(t){const i=Math.cos(t),s=Math.sin(t),e=this.elements,r=e[0],n=e[3],h=e[6],a=e[1],o=e[4],l=e[7];return e[0]=i*r+s*a,e[3]=i*n+s*o,e[6]=i*h+s*l,e[1]=-s*r+i*a,e[4]=-s*n+i*o,e[7]=-s*h+i*l,this}translate(t,i){const s=this.elements;return s[0]+=t*s[2],s[3]+=t*s[5],s[6]+=t*s[8],s[1]+=i*s[2],s[4]+=i*s[5],s[7]+=i*s[8],this}equals(t){const i=this.elements,s=t.elements;for(let t=0;t<9;t++)if(i[t]!==s[t])return!1;return!0}fromArray(t,i){void 0===i&&(i=0);for(let s=0;s<9;s++)this.elements[s]=t[s+i];return this}toArray(t,i){void 0===t&&(t=[]),void 0===i&&(i=0);const s=this.elements;return t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=s[3],t[i+4]=s[4],t[i+5]=s[5],t[i+6]=s[6],t[i+7]=s[7],t[i+8]=s[8],t}}let z=0;const w=new r,_=new e,v=new a,S=new r,A=new r,k=new r,O=new e,N=new r(1,0,0),C=new r(0,1,0),B=new r(0,0,1),F={type:"added"},T={type:"removed"};function U(){Object.defineProperty(this,"id",{value:z++}),this.uuid=s.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=U.DefaultUp.clone();const t=new r,i=new x,n=new e,h=new r(1,1,1);i._onChange((function(){n.setFromEuler(i,!1)})),n._onChange((function(){i.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:h},modelViewMatrix:{value:new a},normalMatrix:{value:new b}}),this.matrix=new a,this.matrixWorld=new a,this.matrixAutoUpdate=U.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new M,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}U.DefaultUp=new r(0,1,0),U.DefaultMatrixAutoUpdate=!0,U.prototype=Object.assign(Object.create(y.prototype),{constructor:U,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,i){this.quaternion.setFromAxisAngle(t,i)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,i){return _.setFromAxisAngle(t,i),this.quaternion.multiply(_),this},rotateOnWorldAxis:function(t,i){return _.setFromAxisAngle(t,i),this.quaternion.premultiply(_),this},rotateX:function(t){return this.rotateOnAxis(N,t)},rotateY:function(t){return this.rotateOnAxis(C,t)},rotateZ:function(t){return this.rotateOnAxis(B,t)},translateOnAxis:function(t,i){return w.copy(t).applyQuaternion(this.quaternion),this.position.add(w.multiplyScalar(i)),this},translateX:function(t){return this.translateOnAxis(N,t)},translateY:function(t){return this.translateOnAxis(C,t)},translateZ:function(t){return this.translateOnAxis(B,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(v.getInverse(this.matrixWorld))},lookAt:function(t,i,s){t.isVector3?S.copy(t):S.set(t,i,s);const e=this.parent;this.updateWorldMatrix(!0,!1),A.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?v.lookAt(A,S,this.up):v.lookAt(S,A,this.up),this.quaternion.setFromRotationMatrix(v),e&&(v.extractRotation(e.matrixWorld),_.setFromRotationMatrix(v),this.quaternion.premultiply(_.inverse()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(F)),this},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const i=this.children.indexOf(t);return-1!==i&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(T)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),v.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),v.multiply(t.parent.matrixWorld)),t.applyMatrix4(v),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,i){if(this[t]===i)return this;for(let s=0,e=this.children.length;s<e;s++){const e=this.children[s].getObjectByProperty(t,i);if(void 0!==e)return e}},getWorldPosition:function(t){return void 0===t&&(t=new r),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(t=new e),this.updateMatrixWorld(!0),this.matrixWorld.decompose(A,t,k),t},getWorldScale:function(t){return void 0===t&&(t=new r),this.updateMatrixWorld(!0),this.matrixWorld.decompose(A,O,t),t},getWorldDirection:function(t){void 0===t&&(t=new r),this.updateMatrixWorld(!0);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].traverseVisible(t)},traverseAncestors:function(t){const i=this.parent;null!==i&&(t(i),i.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].updateMatrixWorld(t)},updateWorldMatrix:function(t,i){const s=this.parent;if(!0===t&&null!==s&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===i){const t=this.children;for(let i=0,s=t.length;i<s;i++)t[i].updateWorldMatrix(!1,!0)}},toJSON:function(t){const i=void 0===t||"string"==typeof t,s={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},s.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const e={};function r(i,s){return void 0===i[s.uuid]&&(i[s.uuid]=s.toJSON(t)),s.uuid}if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),!0===this.castShadow&&(e.castShadow=!0),!0===this.receiveShadow&&(e.receiveShadow=!0),!1===this.visible&&(e.visible=!1),!1===this.frustumCulled&&(e.frustumCulled=!1),0!==this.renderOrder&&(e.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),e.layers=this.layers.mask,e.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(e.matrixAutoUpdate=!1),this.isInstancedMesh&&(e.type="InstancedMesh",e.count=this.count,e.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){e.geometry=r(t.geometries,this.geometry);const i=this.geometry.parameters;if(void 0!==i&&void 0!==i.shapes){const s=i.shapes;if(Array.isArray(s))for(let i=0,e=s.length;i<e;i++){const e=s[i];r(t.shapes,e)}else r(t.shapes,s)}}if(void 0!==this.material)if(Array.isArray(this.material)){const i=[];for(let s=0,e=this.material.length;s<e;s++)i.push(r(t.materials,this.material[s]));e.material=i}else e.material=r(t.materials,this.material);if(this.children.length>0){e.children=[];for(let i=0;i<this.children.length;i++)e.children.push(this.children[i].toJSON(t).object)}if(i){const i=n(t.geometries),e=n(t.materials),r=n(t.textures),h=n(t.images),a=n(t.shapes);i.length>0&&(s.geometries=i),e.length>0&&(s.materials=e),r.length>0&&(s.textures=r),h.length>0&&(s.images=h),a.length>0&&(s.shapes=a)}return s.object=e,s;function n(t){const i=[];for(const s in t){const e=t[s];delete e.metadata,i.push(e)}return i}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,i){if(void 0===i&&(i=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===i)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}});class q{constructor(t,i){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new r(1/0,1/0,1/0),this.max=void 0!==i?i:new r(-1/0,-1/0,-1/0)}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){let i=1/0,s=1/0,e=1/0,r=-1/0,n=-1/0,h=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],l=t[a+1],u=t[a+2];o<i&&(i=o),l<s&&(s=l),u<e&&(e=u),o>r&&(r=o),l>n&&(n=l),u>h&&(h=u)}return this.min.set(i,s,e),this.max.set(r,n,h),this}setFromBufferAttribute(t){let i=1/0,s=1/0,e=1/0,r=-1/0,n=-1/0,h=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),l=t.getY(a),u=t.getZ(a);o<i&&(i=o),l<s&&(s=l),u<e&&(e=u),o>r&&(r=o),l>n&&(n=l),u>h&&(h=u)}return this.min.set(i,s,e),this.max.set(r,n,h),this}setFromPoints(t){this.makeEmpty();for(let i=0,s=t.length;i<s;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const s=W.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(s),this.max.copy(t).add(s),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(t=new r),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(t=new r),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const i=t.geometry;void 0!==i&&(null===i.boundingBox&&i.computeBoundingBox(),R.copy(i.boundingBox),R.applyMatrix4(t.matrixWorld),this.union(R));const s=t.children;for(let t=0,i=s.length;t<i;t++)this.expandByObject(s[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return void 0===i&&(i=new r),i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,W),W.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,s;return t.normal.x>0?(i=t.normal.x*this.min.x,s=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,s=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,s+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,s+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,s+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,s+=t.normal.z*this.min.z),i<=-t.constant&&s>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(E),L.subVectors(this.max,E),Z.subVectors(t.a,E),I.subVectors(t.b,E),X.subVectors(t.c,E),D.subVectors(I,Z),Y.subVectors(X,I),j.subVectors(Z,X);let i=[0,-D.z,D.y,0,-Y.z,Y.y,0,-j.z,j.y,D.z,0,-D.x,Y.z,0,-Y.x,j.z,0,-j.x,-D.y,D.x,0,-Y.y,Y.x,0,-j.y,j.x,0];return!!V(i,Z,I,X,L)&&(i=[1,0,0,0,1,0,0,0,1],!!V(i,Z,I,X,L)&&(G.crossVectors(D,Y),i=[G.x,G.y,G.z],V(i,Z,I,X,L)))}clampPoint(t,i){return void 0===i&&(i=new r),i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return W.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(W).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(P[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),P[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),P[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),P[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),P[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),P[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),P[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),P[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(P)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function V(t,i,s,e,r){for(let n=0,h=t.length-3;n<=h;n+=3){J.fromArray(t,n);const h=r.x*Math.abs(J.x)+r.y*Math.abs(J.y)+r.z*Math.abs(J.z),a=i.dot(J),o=s.dot(J),l=e.dot(J);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>h)return!1}return!0}const P=[new r,new r,new r,new r,new r,new r,new r,new r],W=new r,R=new q,Z=new r,I=new r,X=new r,D=new r,Y=new r,j=new r,E=new r,L=new r,G=new r,J=new r,H=new q;class Q{constructor(t,i){this.center=void 0!==t?t:new r,this.radius=void 0!==i?i:-1}set(t,i){return this.center.copy(t),this.radius=i,this}setFromPoints(t,i){const s=this.center;void 0!==i?s.copy(i):H.setFromPoints(t).getCenter(s);let e=0;for(let i=0,r=t.length;i<r;i++)e=Math.max(e,s.distanceToSquared(t[i]));return this.radius=Math.sqrt(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,i){const s=this.center.distanceToSquared(t);return void 0===i&&(i=new r),i.copy(t),s>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(t){return void 0===t&&(t=new q),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const $=new r,K=new r,tt=new r,it=new r,st=new r,et=new r,rt=new r;class nt{constructor(t,i){this.origin=void 0!==t?t:new r,this.direction=void 0!==i?i:new r(0,0,-1)}set(t,i){return this.origin.copy(t),this.direction.copy(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,i){return void 0===i&&(i=new r),i.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,$)),this}closestPointToPoint(t,i){void 0===i&&(i=new r),i.subVectors(t,this.origin);const s=i.dot(this.direction);return s<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(s).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const i=$.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):($.copy(this.direction).multiplyScalar(i).add(this.origin),$.distanceToSquared(t))}distanceSqToSegment(t,i,s,e){K.copy(t).add(i).multiplyScalar(.5),tt.copy(i).sub(t).normalize(),it.copy(this.origin).sub(K);const r=.5*t.distanceTo(i),n=-this.direction.dot(tt),h=it.dot(this.direction),a=-it.dot(tt),o=it.lengthSq(),l=Math.abs(1-n*n);let u,c,d,m;if(l>0)if(u=n*a-h,c=n*h-a,m=r*l,u>=0)if(c>=-m)if(c<=m){const t=1/l;u*=t,c*=t,d=u*(u+n*c+2*h)+c*(n*u+c+2*a)+o}else c=r,u=Math.max(0,-(n*c+h)),d=-u*u+c*(c+2*a)+o;else c=-r,u=Math.max(0,-(n*c+h)),d=-u*u+c*(c+2*a)+o;else c<=-m?(u=Math.max(0,-(-n*r+h)),c=u>0?-r:Math.min(Math.max(-r,-a),r),d=-u*u+c*(c+2*a)+o):c<=m?(u=0,c=Math.min(Math.max(-r,-a),r),d=c*(c+2*a)+o):(u=Math.max(0,-(n*r+h)),c=u>0?r:Math.min(Math.max(-r,-a),r),d=-u*u+c*(c+2*a)+o);else c=n>0?-r:r,u=Math.max(0,-(n*c+h)),d=-u*u+c*(c+2*a)+o;return s&&s.copy(this.direction).multiplyScalar(u).add(this.origin),e&&e.copy(tt).multiplyScalar(c).add(K),d}intersectSphere(t,i){$.subVectors(t.center,this.origin);const s=$.dot(this.direction),e=$.dot($)-s*s,r=t.radius*t.radius;if(e>r)return null;const n=Math.sqrt(r-e),h=s-n,a=s+n;return h<0&&a<0?null:h<0?this.at(a,i):this.at(h,i)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const i=t.normal.dot(this.direction);if(0===i)return 0===t.distanceToPoint(this.origin)?0:null;const s=-(this.origin.dot(t.normal)+t.constant)/i;return s>=0?s:null}intersectPlane(t,i){const s=this.distanceToPlane(t);return null===s?null:this.at(s,i)}intersectsPlane(t){const i=t.distanceToPoint(this.origin);if(0===i)return!0;return t.normal.dot(this.direction)*i<0}intersectBox(t,i){let s,e,r,n,h,a;const o=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,c=this.origin;return o>=0?(s=(t.min.x-c.x)*o,e=(t.max.x-c.x)*o):(s=(t.max.x-c.x)*o,e=(t.min.x-c.x)*o),l>=0?(r=(t.min.y-c.y)*l,n=(t.max.y-c.y)*l):(r=(t.max.y-c.y)*l,n=(t.min.y-c.y)*l),s>n||r>e?null:((r>s||s!=s)&&(s=r),(n<e||e!=e)&&(e=n),u>=0?(h=(t.min.z-c.z)*u,a=(t.max.z-c.z)*u):(h=(t.max.z-c.z)*u,a=(t.min.z-c.z)*u),s>a||h>e?null:((h>s||s!=s)&&(s=h),(a<e||e!=e)&&(e=a),e<0?null:this.at(s>=0?s:e,i)))}intersectsBox(t){return null!==this.intersectBox(t,$)}intersectTriangle(t,i,s,e,r){st.subVectors(i,t),et.subVectors(s,t),rt.crossVectors(st,et);let n,h=this.direction.dot(rt);if(h>0){if(e)return null;n=1}else{if(!(h<0))return null;n=-1,h=-h}it.subVectors(this.origin,t);const a=n*this.direction.dot(et.crossVectors(it,et));if(a<0)return null;const o=n*this.direction.dot(st.cross(it));if(o<0)return null;if(a+o>h)return null;const l=-n*it.dot(rt);return l<0?null:this.at(l/h,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}const ht=1,at=2,ot=0;let lt=0;function ut(){Object.defineProperty(this,"id",{value:lt++}),this.uuid=s.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}ut.prototype=Object.assign(Object.create(y.prototype),{constructor:ut,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const i in t){const s=t[i];if(void 0===s)continue;if("shading"===i){this.flatShading=1===s;continue}const e=this[i];void 0!==e&&(e&&e.isColor?e.set(s):e&&e.isVector3&&s&&s.isVector3?e.copy(s):this[i]=s)}},toJSON:function(t){const i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{}});const s={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function e(t){const i=[];for(const s in t){const e=t[s];delete e.metadata,i.push(e)}return i}if(s.uuid=this.uuid,s.type=this.type,""!==this.name&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),void 0!==this.roughness&&(s.roughness=this.roughness),void 0!==this.metalness&&(s.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(s.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),void 0!==this.shininess&&(s.shininess=this.shininess),void 0!==this.clearcoat&&(s.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(t).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(t).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(t).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(t).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(t).uuid,s.reflectivity=this.reflectivity,s.refractionRatio=this.refractionRatio,void 0!==this.combine&&(s.combine=this.combine),void 0!==this.envMapIntensity&&(s.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(s.size=this.size),void 0!==this.sizeAttenuation&&(s.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(s.blending=this.blending),!0===this.flatShading&&(s.flatShading=this.flatShading),0!==this.side&&(s.side=this.side),this.vertexColors&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),!0===this.transparent&&(s.transparent=this.transparent),s.depthFunc=this.depthFunc,s.depthTest=this.depthTest,s.depthWrite=this.depthWrite,s.stencilWrite=this.stencilWrite,s.stencilWriteMask=this.stencilWriteMask,s.stencilFunc=this.stencilFunc,s.stencilRef=this.stencilRef,s.stencilFuncMask=this.stencilFuncMask,s.stencilFail=this.stencilFail,s.stencilZFail=this.stencilZFail,s.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(s.rotation=this.rotation),!0===this.polygonOffset&&(s.polygonOffset=!0),0!==this.polygonOffsetFactor&&(s.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(s.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(s.linewidth=this.linewidth),void 0!==this.dashSize&&(s.dashSize=this.dashSize),void 0!==this.gapSize&&(s.gapSize=this.gapSize),void 0!==this.scale&&(s.scale=this.scale),!0===this.dithering&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(s.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(s.wireframe=this.wireframe),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(s.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(s.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(s.morphTargets=!0),!0===this.morphNormals&&(s.morphNormals=!0),!0===this.skinning&&(s.skinning=!0),!1===this.visible&&(s.visible=!1),!1===this.toneMapped&&(s.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(s.userData=this.userData),i){const i=e(t.textures),r=e(t.images);i.length>0&&(s.textures=i),r.length>0&&(s.images=r)}return s},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let s=null;if(null!==i){const t=i.length;s=new Array(t);for(let e=0;e!==t;++e)s[e]=i[e].clone()}return this.clippingPlanes=s,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(ut.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const ct={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},dt={h:0,s:0,l:0},mt={h:0,s:0,l:0};function pt(t,i,s){return s<0&&(s+=1),s>1&&(s-=1),s<1/6?t+6*(i-t)*s:s<.5?i:s<2/3?t+6*(i-t)*(2/3-s):t}function yt(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function xt(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class gt{constructor(t,i,s){return Object.defineProperty(this,"isColor",{value:!0}),void 0===i&&void 0===s?this.set(t):this.setRGB(t,i,s)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,i,s){return this.r=t,this.g=i,this.b=s,this}setHSL(t,i,e){if(t=s.euclideanModulo(t,1),i=s.clamp(i,0,1),e=s.clamp(e,0,1),0===i)this.r=this.g=this.b=e;else{const s=e<=.5?e*(1+i):e+i-e*i,r=2*e-s;this.r=pt(r,s,t+1/3),this.g=pt(r,s,t),this.b=pt(r,s,t-1/3)}return this}setStyle(t){let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;const s=i[1],e=i[2];switch(s){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(e))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,t[5],this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(e))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,t[5],this;break;case"hsl":case"hsla":if(t=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(e)){const i=parseFloat(t[1])/360,s=parseInt(t[2],10)/100,e=parseInt(t[3],10)/100;return t[5],this.setHSL(i,s,e)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){const t=i[1],s=t.length;if(3===s)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===s)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const i=ct[t];return void 0!==i&&this.setHex(i),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,i){return void 0===i&&(i=2),this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}copyLinearToGamma(t,i){void 0===i&&(i=2);const s=i>0?1/i:1;return this.r=Math.pow(t.r,s),this.g=Math.pow(t.g,s),this.b=Math.pow(t.b,s),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=yt(t.r),this.g=yt(t.g),this.b=yt(t.b),this}copyLinearToSRGB(t){return this.r=xt(t.r),this.g=xt(t.g),this.b=xt(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(t={h:0,s:0,l:0});const i=this.r,s=this.g,e=this.b,r=Math.max(i,s,e),n=Math.min(i,s,e);let h,a;const o=(n+r)/2;if(n===r)h=0,a=0;else{const t=r-n;switch(a=o<=.5?t/(r+n):t/(2-r-n),r){case i:h=(s-e)/t+(s<e?6:0);break;case s:h=(e-i)/t+2;break;case e:h=(i-s)/t+4}h/=6}return t.h=h,t.s=a,t.l=o,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,i,s){return this.getHSL(dt),dt.h+=t,dt.s+=i,dt.l+=s,this.setHSL(dt.h,dt.s,dt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,i){return this.r=t.r+i.r,this.g=t.g+i.g,this.b=t.b+i.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,i){return this.r+=(t.r-this.r)*i,this.g+=(t.g-this.g)*i,this.b+=(t.b-this.b)*i,this}lerpHSL(t,i){this.getHSL(dt),t.getHSL(mt);const e=s.lerp(dt.h,mt.h,i),r=s.lerp(dt.s,mt.s,i),n=s.lerp(dt.l,mt.l,i);return this.setHSL(e,r,n),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,i){return void 0===i&&(i=0),this.r=t[i],this.g=t[i+1],this.b=t[i+2],this}toArray(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this.r,t[i+1]=this.g,t[i+2]=this.b,t}fromBufferAttribute(t,i){return this.r=t.getX(i),this.g=t.getY(i),this.b=t.getZ(i),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}gt.NAMES=ct,gt.prototype.r=1,gt.prototype.g=1,gt.prototype.b=1;class ft{constructor(t=0,i=0,s=0,e=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=i,this.z=s,this.w=e}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,i,s,e){return this.x=t,this.y=i,this.z=s,this.w=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;case 3:this.w=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,i){return void 0!==i?this.addVectors(t,i):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this.w=t.w+i.w,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this.w+=t.w*i,this}sub(t,i){return void 0!==i?this.subVectors(t,i):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this.w=t.w-i.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const i=this.x,s=this.y,e=this.z,r=this.w,n=t.elements;return this.x=n[0]*i+n[4]*s+n[8]*e+n[12]*r,this.y=n[1]*i+n[5]*s+n[9]*e+n[13]*r,this.z=n[2]*i+n[6]*s+n[10]*e+n[14]*r,this.w=n[3]*i+n[7]*s+n[11]*e+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const i=Math.sqrt(1-t.w*t.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/i,this.y=t.y/i,this.z=t.z/i),this}setAxisAngleFromRotationMatrix(t){let i,s,e,r;const n=.01,h=.1,a=t.elements,o=a[0],l=a[4],u=a[8],c=a[1],d=a[5],m=a[9],p=a[2],y=a[6],x=a[10];if(Math.abs(l-c)<n&&Math.abs(u-p)<n&&Math.abs(m-y)<n){if(Math.abs(l+c)<h&&Math.abs(u+p)<h&&Math.abs(m+y)<h&&Math.abs(o+d+x-3)<h)return this.set(1,0,0,0),this;i=Math.PI;const t=(o+1)/2,a=(d+1)/2,g=(x+1)/2,f=(l+c)/4,M=(u+p)/4,b=(m+y)/4;return t>a&&t>g?t<n?(s=0,e=.707106781,r=.707106781):(s=Math.sqrt(t),e=f/s,r=M/s):a>g?a<n?(s=.707106781,e=0,r=.707106781):(e=Math.sqrt(a),s=f/e,r=b/e):g<n?(s=.707106781,e=.707106781,r=0):(r=Math.sqrt(g),s=M/r,e=b/r),this.set(s,e,r,i),this}let g=Math.sqrt((y-m)*(y-m)+(u-p)*(u-p)+(c-l)*(c-l));return Math.abs(g)<.001&&(g=1),this.x=(y-m)/g,this.y=(u-p)/g,this.z=(c-l)/g,this.w=Math.acos((o+d+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this.w=Math.max(t.w,Math.min(i.w,this.w)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this.w=Math.max(t,Math.min(i,this.w)),this}clampLength(t,i){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this.w+=(t.w-this.w)*i,this}lerpVectors(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this.z=t.z+(i.z-t.z)*s,this.w=t.w+(i.w-t.w)*s,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,i){return void 0===i&&(i=0),this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}toArray(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}fromBufferAttribute(t,i,s){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this.w=t.getW(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class Mt{constructor(t=0,i=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=i}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,i){return this.x=t,this.y=i,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,i){return void 0!==i?this.addVectors(t,i):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}sub(t,i){return void 0!==i?this.subVectors(t,i):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const i=this.x,s=this.y,e=t.elements;return this.x=e[0]*i+e[3]*s+e[6],this.y=e[1]*i+e[4]*s+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this}clampLength(t,i){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,s=this.y-t.y;return i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}lerpVectors(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,i){return void 0===i&&(i=0),this.x=t[i],this.y=t[i+1],this}toArray(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this.x,t[i+1]=this.y,t}fromBufferAttribute(t,i,s){return this.x=t.getX(i),this.y=t.getY(i),this}rotateAround(t,i){const s=Math.cos(i),e=Math.sin(i),r=this.x-t.x,n=this.y-t.y;return this.x=r*s-n*e+t.x,this.y=r*e+n*s+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}const bt=new r,zt=new Mt;function wt(t,i,s){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=i,this.count=void 0!==t?t.length/i:0,this.normalized=!0===s,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function _t(t,i,s){wt.call(this,new Int8Array(t),i,s)}function vt(t,i,s){wt.call(this,new Uint8Array(t),i,s)}function St(t,i,s){wt.call(this,new Uint8ClampedArray(t),i,s)}function At(t,i,s){wt.call(this,new Int16Array(t),i,s)}function kt(t,i,s){wt.call(this,new Uint16Array(t),i,s)}function Ot(t,i,s){wt.call(this,new Int32Array(t),i,s)}function Nt(t,i,s){wt.call(this,new Uint32Array(t),i,s)}function Ct(t,i,s){wt.call(this,new Float32Array(t),i,s)}function Bt(t,i,s){wt.call(this,new Float64Array(t),i,s)}Object.defineProperty(wt.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(wt.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,i,s){t*=this.itemSize,s*=i.itemSize;for(let e=0,r=this.itemSize;e<r;e++)this.array[t+e]=i.array[s+e];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const i=this.array;let s=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new gt),i[s++]=r.r,i[s++]=r.g,i[s++]=r.b}return this},copyVector2sArray:function(t){const i=this.array;let s=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new Mt),i[s++]=r.x,i[s++]=r.y}return this},copyVector3sArray:function(t){const i=this.array;let s=0;for(let e=0,n=t.length;e<n;e++){let n=t[e];void 0===n&&(n=new r),i[s++]=n.x,i[s++]=n.y,i[s++]=n.z}return this},copyVector4sArray:function(t){const i=this.array;let s=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new ft),i[s++]=r.x,i[s++]=r.y,i[s++]=r.z,i[s++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let i=0,s=this.count;i<s;i++)zt.fromBufferAttribute(this,i),zt.applyMatrix3(t),this.setXY(i,zt.x,zt.y);else if(3===this.itemSize)for(let i=0,s=this.count;i<s;i++)bt.fromBufferAttribute(this,i),bt.applyMatrix3(t),this.setXYZ(i,bt.x,bt.y,bt.z);return this},applyMatrix4:function(t){for(let i=0,s=this.count;i<s;i++)bt.x=this.getX(i),bt.y=this.getY(i),bt.z=this.getZ(i),bt.applyMatrix4(t),this.setXYZ(i,bt.x,bt.y,bt.z);return this},applyNormalMatrix:function(t){for(let i=0,s=this.count;i<s;i++)bt.x=this.getX(i),bt.y=this.getY(i),bt.z=this.getZ(i),bt.applyNormalMatrix(t),this.setXYZ(i,bt.x,bt.y,bt.z);return this},transformDirection:function(t){for(let i=0,s=this.count;i<s;i++)bt.x=this.getX(i),bt.y=this.getY(i),bt.z=this.getZ(i),bt.transformDirection(t),this.setXYZ(i,bt.x,bt.y,bt.z);return this},set:function(t,i){return void 0===i&&(i=0),this.array.set(t,i),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,i){return this.array[t*this.itemSize]=i,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,i){return this.array[t*this.itemSize+1]=i,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,i){return this.array[t*this.itemSize+2]=i,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,i){return this.array[t*this.itemSize+3]=i,this},setXY:function(t,i,s){return t*=this.itemSize,this.array[t+0]=i,this.array[t+1]=s,this},setXYZ:function(t,i,s,e){return t*=this.itemSize,this.array[t+0]=i,this.array[t+1]=s,this.array[t+2]=e,this},setXYZW:function(t,i,s,e,r){return t*=this.itemSize,this.array[t+0]=i,this.array[t+1]=s,this.array[t+2]=e,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),_t.prototype=Object.create(wt.prototype),_t.prototype.constructor=_t,vt.prototype=Object.create(wt.prototype),vt.prototype.constructor=vt,St.prototype=Object.create(wt.prototype),St.prototype.constructor=St,At.prototype=Object.create(wt.prototype),At.prototype.constructor=At,kt.prototype=Object.create(wt.prototype),kt.prototype.constructor=kt,Ot.prototype=Object.create(wt.prototype),Ot.prototype.constructor=Ot,Nt.prototype=Object.create(wt.prototype),Nt.prototype.constructor=Nt,Ct.prototype=Object.create(wt.prototype),Ct.prototype.constructor=Ct,Bt.prototype=Object.create(wt.prototype),Bt.prototype.constructor=Bt;class Ft{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const i=[];let s,e,r=void 0;const n=t.faces;for(e=0;e<n.length;e++){const t=n[e];t.materialIndex!==r&&(r=t.materialIndex,void 0!==s&&(s.count=3*e-s.start,i.push(s)),s={start:3*e,materialIndex:r})}void 0!==s&&(s.count=3*e-s.start,i.push(s)),this.groups=i}fromGeometry(t){const i=t.faces,s=t.vertices,e=t.faceVertexUvs,r=e[0]&&e[0].length>0,n=e[1]&&e[1].length>0,h=t.morphTargets,a=h.length;let o;if(a>0){o=[];for(let t=0;t<a;t++)o[t]={name:h[t].name,data:[]};this.morphTargets.position=o}const l=t.morphNormals,u=l.length;let c;if(u>0){c=[];for(let t=0;t<u;t++)c[t]={name:l[t].name,data:[]};this.morphTargets.normal=c}const d=t.skinIndices,m=t.skinWeights,p=d.length===s.length,y=m.length===s.length;s.length>0&&i.length;for(let t=0;t<i.length;t++){const x=i[t];this.vertices.push(s[x.a],s[x.b],s[x.c]);const g=x.vertexNormals;if(3===g.length)this.normals.push(g[0],g[1],g[2]);else{const t=x.normal;this.normals.push(t,t,t)}const f=x.vertexColors;if(3===f.length)this.colors.push(f[0],f[1],f[2]);else{const t=x.color;this.colors.push(t,t,t)}if(!0===r){const i=e[0][t];void 0!==i?this.uvs.push(i[0],i[1],i[2]):this.uvs.push(new Mt,new Mt,new Mt)}if(!0===n){const i=e[1][t];void 0!==i?this.uvs2.push(i[0],i[1],i[2]):this.uvs2.push(new Mt,new Mt,new Mt)}for(let t=0;t<a;t++){const i=h[t].vertices;o[t].data.push(i[x.a],i[x.b],i[x.c])}for(let i=0;i<u;i++){const s=l[i].vertexNormals[t];c[i].data.push(s.a,s.b,s.c)}p&&this.skinIndices.push(d[x.a],d[x.b],d[x.c]),y&&this.skinWeights.push(m[x.a],m[x.b],m[x.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}}let Tt=1;const Ut=new a,qt=new U,Vt=new r,Pt=new q,Wt=new q,Rt=new r;function Zt(){Object.defineProperty(this,"id",{value:Tt+=2}),this.uuid=s.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Zt.prototype=Object.assign(Object.create(y.prototype),{constructor:Zt,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(function(t){if(0===t.length)return-1/0;let i=t[0];for(let s=1,e=t.length;s<e;++s)t[s]>i&&(i=t[s]);return i}(t)>65535?Nt:kt)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,i){return this.attributes[t]=i,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,i,s){this.groups.push({start:t,count:i,materialIndex:void 0!==s?s:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,i){this.drawRange.start=t,this.drawRange.count=i},applyMatrix4:function(t){const i=this.attributes.position;void 0!==i&&(i.applyMatrix4(t),i.needsUpdate=!0);const s=this.attributes.normal;if(void 0!==s){const i=(new b).getNormalMatrix(t);s.applyNormalMatrix(i),s.needsUpdate=!0}const e=this.attributes.tangent;return void 0!==e&&(e.transformDirection(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Ut.makeRotationX(t),this.applyMatrix4(Ut),this},rotateY:function(t){return Ut.makeRotationY(t),this.applyMatrix4(Ut),this},rotateZ:function(t){return Ut.makeRotationZ(t),this.applyMatrix4(Ut),this},translate:function(t,i,s){return Ut.makeTranslation(t,i,s),this.applyMatrix4(Ut),this},scale:function(t,i,s){return Ut.makeScale(t,i,s),this.applyMatrix4(Ut),this},lookAt:function(t){return qt.lookAt(t),qt.updateMatrix(),this.applyMatrix4(qt.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Vt).negate(),this.translate(Vt.x,Vt.y,Vt.z),this},setFromObject:function(t){const i=t.geometry;if(t.isPoints||t.isLine){const t=new Ct(3*i.vertices.length,3),s=new Ct(3*i.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(i.vertices)),this.setAttribute("color",s.copyColorsArray(i.colors)),i.lineDistances&&i.lineDistances.length===i.vertices.length){const t=new Ct(i.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(i.lineDistances))}null!==i.boundingSphere&&(this.boundingSphere=i.boundingSphere.clone()),null!==i.boundingBox&&(this.boundingBox=i.boundingBox.clone())}else t.isMesh&&i&&i.isGeometry&&this.fromGeometry(i);return this},setFromPoints:function(t){const i=[];for(let s=0,e=t.length;s<e;s++){const e=t[s];i.push(e.x,e.y,e.z||0)}return this.setAttribute("position",new Ct(i,3)),this},updateFromObject:function(t){let i=t.geometry;if(t.isMesh){let t=i.__directGeometry;if(!0===i.elementsNeedUpdate&&(t=void 0,i.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(i);t.verticesNeedUpdate=i.verticesNeedUpdate,t.normalsNeedUpdate=i.normalsNeedUpdate,t.colorsNeedUpdate=i.colorsNeedUpdate,t.uvsNeedUpdate=i.uvsNeedUpdate,t.groupsNeedUpdate=i.groupsNeedUpdate,i.verticesNeedUpdate=!1,i.normalsNeedUpdate=!1,i.colorsNeedUpdate=!1,i.uvsNeedUpdate=!1,i.groupsNeedUpdate=!1,i=t}if(!0===i.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(i.vertices),t.needsUpdate=!0),i.verticesNeedUpdate=!1}if(!0===i.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(i.normals),t.needsUpdate=!0),i.normalsNeedUpdate=!1}if(!0===i.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(i.colors),t.needsUpdate=!0),i.colorsNeedUpdate=!1}if(i.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(i.uvs),t.needsUpdate=!0),i.uvsNeedUpdate=!1}if(i.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(i.lineDistances),t.needsUpdate=!0),i.lineDistancesNeedUpdate=!1}return i.groupsNeedUpdate&&(i.computeGroups(t.geometry),this.groups=i.groups,i.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Ft).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const i=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new wt(i,3).copyVector3sArray(t.vertices)),t.normals.length>0){const i=new Float32Array(3*t.normals.length);this.setAttribute("normal",new wt(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const i=new Float32Array(3*t.colors.length);this.setAttribute("color",new wt(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const i=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new wt(i,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const i=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new wt(i,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const i in t.morphTargets){const s=[],e=t.morphTargets[i];for(let t=0,i=e.length;t<i;t++){const i=e[t],r=new Ct(3*i.data.length,3);r.name=i.name,s.push(r.copyVector3sArray(i.data))}this.morphAttributes[i]=s}if(t.skinIndices.length>0){const i=new Ct(4*t.skinIndices.length,4);this.setAttribute("skinIndex",i.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const i=new Ct(4*t.skinWeights.length,4);this.setAttribute("skinWeight",i.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new q);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingBox.set(new r(-1/0,-1/0,-1/0),new r(1/0,1/0,1/0));else{if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),i)for(let t=0,s=i.length;t<s;t++){const s=i[t];Pt.setFromBufferAttribute(s),this.morphTargetsRelative?(Rt.addVectors(this.boundingBox.min,Pt.min),this.boundingBox.expandByPoint(Rt),Rt.addVectors(this.boundingBox.max,Pt.max),this.boundingBox.expandByPoint(Rt)):(this.boundingBox.expandByPoint(Pt.min),this.boundingBox.expandByPoint(Pt.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Q);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingSphere.set(new r,1/0);else if(t){const s=this.boundingSphere.center;if(Pt.setFromBufferAttribute(t),i)for(let t=0,s=i.length;t<s;t++){const s=i[t];Wt.setFromBufferAttribute(s),this.morphTargetsRelative?(Rt.addVectors(Pt.min,Wt.min),Pt.expandByPoint(Rt),Rt.addVectors(Pt.max,Wt.max),Pt.expandByPoint(Rt)):(Pt.expandByPoint(Wt.min),Pt.expandByPoint(Wt.max))}Pt.getCenter(s);let e=0;for(let i=0,r=t.count;i<r;i++)Rt.fromBufferAttribute(t,i),e=Math.max(e,s.distanceToSquared(Rt));if(i)for(let r=0,n=i.length;r<n;r++){const n=i[r],h=this.morphTargetsRelative;for(let i=0,r=n.count;i<r;i++)Rt.fromBufferAttribute(n,i),h&&(Vt.fromBufferAttribute(t,i),Rt.add(Vt)),e=Math.max(e,s.distanceToSquared(Rt))}this.boundingSphere.radius=Math.sqrt(e),isNaN(this.boundingSphere.radius)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,i=this.getAttribute("position");if(void 0!==i){let s=this.getAttribute("normal");if(void 0===s)s=new wt(new Float32Array(3*i.count),3),this.setAttribute("normal",s);else for(let t=0,i=s.count;t<i;t++)s.setXYZ(t,0,0,0);const e=new r,n=new r,h=new r,a=new r,o=new r,l=new r,u=new r,c=new r;if(t)for(let r=0,d=t.count;r<d;r+=3){const d=t.getX(r+0),m=t.getX(r+1),p=t.getX(r+2);e.fromBufferAttribute(i,d),n.fromBufferAttribute(i,m),h.fromBufferAttribute(i,p),u.subVectors(h,n),c.subVectors(e,n),u.cross(c),a.fromBufferAttribute(s,d),o.fromBufferAttribute(s,m),l.fromBufferAttribute(s,p),a.add(u),o.add(u),l.add(u),s.setXYZ(d,a.x,a.y,a.z),s.setXYZ(m,o.x,o.y,o.z),s.setXYZ(p,l.x,l.y,l.z)}else for(let t=0,r=i.count;t<r;t+=3)e.fromBufferAttribute(i,t+0),n.fromBufferAttribute(i,t+1),h.fromBufferAttribute(i,t+2),u.subVectors(h,n),c.subVectors(e,n),u.cross(c),s.setXYZ(t+0,u.x,u.y,u.z),s.setXYZ(t+1,u.x,u.y,u.z),s.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),s.needsUpdate=!0}},merge:function(t,i){if(!t||!t.isBufferGeometry)return;void 0===i&&(i=0);const s=this.attributes;for(const e in s){if(void 0===t.attributes[e])continue;const r=s[e].array,n=t.attributes[e],h=n.array,a=n.itemSize*i,o=Math.min(h.length,r.length-a);for(let t=0,i=a;t<o;t++,i++)r[i]=h[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let i=0,s=t.count;i<s;i++)Rt.fromBufferAttribute(t,i),Rt.normalize(),t.setXYZ(i,Rt.x,Rt.y,Rt.z)},toNonIndexed:function(){function t(t,i){const s=t.array,e=t.itemSize,r=t.normalized,n=new s.constructor(i.length*e);let h=0,a=0;for(let t=0,r=i.length;t<r;t++){h=i[t]*e;for(let t=0;t<e;t++)n[a++]=s[h++]}return new wt(n,e,r)}if(null===this.index)return this;const i=new Zt,s=this.index.array,e=this.attributes;for(const r in e){const n=t(e[r],s);i.setAttribute(r,n)}const r=this.morphAttributes;for(const e in r){const n=[],h=r[e];for(let i=0,e=h.length;i<e;i++){const e=t(h[i],s);n.push(e)}i.morphAttributes[e]=n}i.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let t=0,s=n.length;t<s;t++){const s=n[t];i.addGroup(s.start,s.count,s.materialIndex)}return i},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const i=this.parameters;for(const s in i)void 0!==i[s]&&(t[s]=i[s]);return t}t.data={attributes:{}};const i=this.index;null!==i&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const s=this.attributes;for(const i in s){const e=s[i],r=e.toJSON(t.data);""!==e.name&&(r.name=e.name),t.data.attributes[i]=r}const e={};let r=!1;for(const i in this.morphAttributes){const s=this.morphAttributes[i],n=[];for(let i=0,e=s.length;i<e;i++){const e=s[i],r=e.toJSON(t.data);""!==e.name&&(r.name=e.name),n.push(r)}n.length>0&&(e[i]=n,r=!0)}r&&(t.data.morphAttributes=e,t.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(t.data.groups=JSON.parse(JSON.stringify(n)));const h=this.boundingSphere;return null!==h&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t},clone:function(){return(new Zt).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const s=t.index;null!==s&&this.setIndex(s.clone(i));const e=t.attributes;for(const t in e){const s=e[t];this.setAttribute(t,s.clone(i))}const r=t.morphAttributes;for(const t in r){const s=[],e=r[t];for(let t=0,r=e.length;t<r;t++)s.push(e[t].clone(i));this.morphAttributes[t]=s}this.morphTargetsRelative=t.morphTargetsRelative;const n=t.groups;for(let t=0,i=n.length;t<i;t++){const i=n[t];this.addGroup(i.start,i.count,i.materialIndex)}const h=t.boundingBox;null!==h&&(this.boundingBox=h.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});export{Zt as B,gt as C,at as D,y as E,Ct as F,a as M,U as O,nt as R,Q as S,r as V,ut as a,b,ot as c,Mt as d,ht as e,q as f,s as g,wt as h};

import{p as e,g as t}from"./main.js";import{AnimationMixer as n}from"./three.module.js";export{loadReticle}from"./loadReticle.js";import{G as r}from"./GLTFLoader.js";export{G as GLTFLoader,s as spawnModel}from"./GLTFLoader.js";const i=({camera:e,renderer:t})=>()=>{e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight)};let o=null,a=!1;const d=e=>async(t,n)=>{const{camera:r,clock:i,mixer:s,renderer:d,reticle:c,scene:l,stats:m}=e;if(n){const e=d.xr.getSession();if(!1===a){const t=await e.requestReferenceSpace("viewer"),n=await e.requestHitTestSource({space:t});o=n,e.addEventListener("end",()=>{a=!1,o=null}),a=!0}if(o){const e=d.xr.getReferenceSpace(),t=n.getHitTestResults(o);if(t.length){if(c){const n=t[0];c.visible=!0,c.matrix.fromArray(n.getPose(e).transform.matrix)}}else c&&(c.visible=!1)}}s&&s.update(i.getDelta()),d.render(l,r)},c=async(i,o)=>{if(!i)throw new Error("loadModel needs { file } argument to be set.");o.show(e);const s=await((e,n,r)=>new Promise((i,o)=>{const s=`${t}/${n}`,a=(e=>t=>{if(t.total>0){const n=Math.ceil(t.loaded/t.total*100);e.setContent(`${n}% ${t.loaded}/${t.total}`)}t.loaded>=t.total&&e.hide()})(r);e.load(s,i,a,o)}))(new r,i,o),a=s.scene;let d=null;return s.animations&&s.animations.length&&(d=new n(a),s.animations.forEach(e=>d.clipAction(e).play())),{model:a,mixer:d}},l=async({camera:e,hemisphereLight:t,scene:n})=>{const{CameraHelper:r}=await import("./CameraHelper.js"),{default:i}=await import("./stats.module.js"),o=new r(e);if(n.add(o),t){const{HemisphereLightHelper:e}=await import("./HemisphereLightHelper.js"),r=new e(t);n.add(r)}const s=new i;return document.body.appendChild(s.dom),s};class m{constructor({renderer:e,scene:t}){const n=document.getElementById("three-gui");n.style.display="block";document.getElementById("exit-button").addEventListener("click",this.exitButtonClickListener.bind({renderer:e,scene:t,gui:n}))}exitButtonClickListener(){(async({renderer:e,scene:t})=>{if("xr"in e){const t=e.xr.getSession();t&&t.end()}var n;(n=t).remove.apply(n,n.children);const r=document.getElementById("three-canvas");if(r){const e=r.parentNode;"three-container"===e.id?e.removeChild(r):e.parentNode.removeChild(e)}})(this),this.gui.style.display="none"}}export{m as HUD,l as debugView,c as loadModel,i as onWindowResize,d as render};

{"version":3,"file":"BufferGeometry.js","sources":["../../node_modules/three/src/math/Vector2.js","../../node_modules/three/src/math/Box3.js","../../node_modules/three/src/math/Sphere.js","../../node_modules/three/src/math/Vector4.js","../../node_modules/three/src/core/BufferAttribute.js","../../node_modules/three/src/core/DirectGeometry.js","../../node_modules/three/src/utils.js","../../node_modules/three/src/core/BufferGeometry.js"],"sourcesContent":["class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tObject.defineProperty( this, 'isVector2', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { Vector2 };\n","import { Vector3 } from './Vector3.js';\n\nclass Box3 {\n\n\tconstructor( min, max ) {\n\n\t\tObject.defineProperty( this, 'isBox3', { value: true } );\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _points = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\nconst _vector = new Vector3();\n\nconst _box = new Box3();\n\n// triangle centered vertices\n\nconst _v0 = new Vector3();\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = new Vector3();\nconst _f1 = new Vector3();\nconst _f2 = new Vector3();\n\nconst _center = new Vector3();\nconst _extents = new Vector3();\nconst _triangleNormal = new Vector3();\nconst _testAxis = new Vector3();\n\n\nexport { Box3 };\n","import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _box = new Box3();\n\nclass Sphere {\n\n\tconstructor( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n}\n\n\nexport { Sphere };\n","class Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tObject.defineProperty( this, 'isVector4', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { Vector4 };\n","import { Vector4 } from '../math/Vector4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nimport { StaticDrawUsage } from '../constants.js';\n\nconst _vector = new Vector3();\nconst _vector2 = new Vector2();\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n//\n\nexport {\n\tFloat64BufferAttribute,\n\tFloat32BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n","import { Vector2 } from '../math/Vector2.js';\n\nclass DirectGeometry {\n\n\tconstructor() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tcomputeGroups( geometry ) {\n\n\t\tconst groups = [];\n\n\t\tlet group, i;\n\t\tlet materialIndex = undefined;\n\n\t\tconst faces = geometry.faces;\n\n\t\tfor ( i = 0; i < faces.length; i ++ ) {\n\n\t\t\tconst face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t}\n\n\tfromGeometry( geometry ) {\n\n\t\tconst faces = geometry.faces;\n\t\tconst vertices = geometry.vertices;\n\t\tconst faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tconst hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tconst hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tconst morphTargets = geometry.morphTargets;\n\t\tconst morphTargetsLength = morphTargets.length;\n\n\t\tlet morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( let i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tconst morphNormals = geometry.morphNormals;\n\t\tconst morphNormalsLength = morphNormals.length;\n\n\t\tlet morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( let i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tconst skinIndices = geometry.skinIndices;\n\t\tconst skinWeights = geometry.skinWeights;\n\n\t\tconst hasSkinIndices = skinIndices.length === vertices.length;\n\t\tconst hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < faces.length; i ++ ) {\n\n\t\t\tconst face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tconst vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tconst normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tconst vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tconst color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tconst vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tconst vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( let j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( let j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tconst morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { DirectGeometry };\n","function arrayMin( array ) {\n\n\tif ( array.length === 0 ) return Infinity;\n\n\tlet min = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] < min ) min = array[ i ];\n\n\t}\n\n\treturn min;\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nexport { arrayMin, arrayMax };\n","import { Vector3 } from '../math/Vector3.js';\nimport { Box3 } from '../math/Box3.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { BufferAttribute, Float32BufferAttribute, Uint16BufferAttribute, Uint32BufferAttribute } from './BufferAttribute.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { DirectGeometry } from './DirectGeometry.js';\nimport { Object3D } from './Object3D.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { arrayMax } from '../utils.js';\n\nlet _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nconst _m1 = new Matrix4();\nconst _obj = new Object3D();\nconst _offset = new Vector3();\nconst _box = new Box3();\nconst _boxMorphTargets = new Box3();\nconst _vector = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tconst positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tconst colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tconst lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tlet geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tlet direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tconst attribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tconst attribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tconst positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tconst normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tconst colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tconst uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tconst uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( const name in geometry.morphTargets ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( let i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\n\t\t\t\tconst attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tconst skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tconst skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.min, _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.max, _box.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( _box.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( _box.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( normals, i );\n\n\t\t\t_vector.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { BufferGeometry };\n"],"names":["Vector2","[object Object]","x","y","Object","defineProperty","this","value","width","height","scalar","index","Error","constructor","v","w","undefined","addVectors","s","a","b","subVectors","multiplyScalar","m","e","elements","Math","min","max","minVal","maxVal","length","divideScalar","floor","ceil","round","sqrt","abs","atan2","PI","distanceToSquared","dx","dy","normalize","alpha","v1","v2","array","offset","attribute","getX","getY","center","angle","c","cos","sin","random","Box3","Vector3","Infinity","copy","minX","minY","minZ","maxX","maxY","maxZ","i","l","z","set","count","getZ","points","makeEmpty","il","expandByPoint","size","halfSize","_vector","sub","add","object","expandByObject","box","target","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box","applyMatrix4","matrixWorld","union","children","sphere","clampPoint","radius","plane","normal","constant","triangle","getCenter","_center","_extents","_v0","_v1","_v2","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","crossVectors","clamp","getSize","matrix","_points","setFromPoints","equals","v0","extents","j","_testAxis","fromArray","r","p0","dot","p1","p2","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","Vector4","q","acos","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","_vector2","BufferAttribute","itemSize","normalized","Array","isArray","TypeError","name","usage","StaticDrawUsage","updateRange","version","Int8BufferAttribute","call","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","prototype","assign","isBufferAttribute","onUploadCallback","setUsage","source","copyAt","index1","index2","copyArray","copyColorsArray","colors","color","Color","g","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","applyMatrix3","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","transformDirection","setX","setY","setZ","setW","setXYZW","onUpload","callback","clone","toJSON","type","slice","create","DirectGeometry","vertices","normals","uvs","uvs2","groups","morphTargets","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","group","materialIndex","faces","face","start","push","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","data","position","morphNormals","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexNormals","vertexColors","vertexUvs","morphTarget","morphNormal","computeGroups","arrayMax","_bufferGeometryId","_m1","Matrix4","_obj","Object3D","_offset","_boxMorphTargets","BufferGeometry","uuid","MathUtils","generateUUID","attributes","morphAttributes","morphTargetsRelative","drawRange","userData","EventDispatcher","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","normalMatrix","Matrix3","getNormalMatrix","tangent","computeBoundingSphere","rotateX","makeRotationX","rotateY","makeRotationY","rotateZ","makeRotationZ","translate","makeTranslation","scale","makeScale","lookAt","updateMatrix","negate","setFromObject","isPoints","isLine","positions","lineDistances","isMesh","isGeometry","fromGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","uv","lineDistancesNeedUpdate","lineDistance","fromDirectGeometry","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","computeFaceNormals","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","vA","vB","vC","cross","normalizeNormals","merge","key","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","indices","array2","geometry2","newAttribute","morphArray","metadata","generator","keys","parameters","attributeData","hasMorphAttributes","attributeArray","JSON","parse","stringify","toArray","dispose","dispatchEvent"],"mappings":"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"}
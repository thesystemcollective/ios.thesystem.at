{"version":3,"file":"GLTFLoader.js","sources":["../../node_modules/three/src/materials/LineBasicMaterial.js","../../node_modules/three/src/materials/MeshStandardMaterial.js","../../node_modules/three/src/materials/MeshPhysicalMaterial.js","../../node_modules/three/src/materials/PointsMaterial.js","../../node_modules/three/src/objects/Bone.js","../../node_modules/three/src/lights/LightShadow.js","../../node_modules/three/src/lights/DirectionalLightShadow.js","../../node_modules/three/src/lights/DirectionalLight.js","../../node_modules/three/src/lights/PointLightShadow.js","../../node_modules/three/src/lights/PointLight.js","../../node_modules/three/src/lights/SpotLightShadow.js","../../node_modules/three/src/lights/SpotLight.js","../../node_modules/three/src/loaders/FileLoader.js","../../node_modules/three/src/loaders/ImageBitmapLoader.js","../../node_modules/three/src/loaders/LoaderUtils.js","../../node_modules/three/src/objects/Line.js","../../node_modules/three/src/objects/LineLoop.js","../../node_modules/three/src/objects/LineSegments.js","../../node_modules/three/src/objects/Points.js","../../node_modules/three/src/objects/Skeleton.js","../../node_modules/three/src/objects/SkinnedMesh.js","../../node_modules/three/src/textures/CanvasTexture.js","../../src/lib/three/GLTFLoader.js"],"sourcesContent":["import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n\nexport { LineBasicMaterial };\n","import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 1.0;\n\tthis.metalness = 0.0;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.vertexTangents = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.vertexTangents = source.vertexTangents;\n\n\treturn this;\n\n};\n\n\nexport { MeshStandardMaterial };\n","import { Vector2 } from '../math/Vector2.js';\nimport { MeshStandardMaterial } from './MeshStandardMaterial.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.clearcoat = 0.0;\n\tthis.clearcoatMap = null;\n\tthis.clearcoatRoughness = 0.0;\n\tthis.clearcoatRoughnessMap = null;\n\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\tthis.clearcoatNormalMap = null;\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.sheen = null; // null will disable sheen bsdf\n\n\tthis.transmission = 0.0;\n\tthis.transmissionMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.clearcoat = source.clearcoat;\n\tthis.clearcoatMap = source.clearcoatMap;\n\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\tthis.reflectivity = source.reflectivity;\n\n\tif ( source.sheen ) {\n\n\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t} else {\n\n\t\tthis.sheen = null;\n\n\t}\n\n\tthis.transmission = source.transmission;\n\tthis.transmissionMap = source.transmissionMap;\n\n\treturn this;\n\n};\n\nexport { MeshPhysicalMaterial };\n","import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n\nexport { PointsMaterial };\n","import { Object3D } from '../core/Object3D.js';\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n\nexport { Bone };\n","import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.normalBias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.mapPass = null;\n\tthis.matrix = new Matrix4();\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis._frustum = new Frustum();\n\tthis._frameExtents = new Vector2( 1, 1 );\n\n\tthis._viewportCount = 1;\n\n\tthis._viewports = [\n\n\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t];\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\t_projScreenMatrix: new Matrix4(),\n\n\t_lightPositionWorld: new Vector3(),\n\n\t_lookTarget: new Vector3(),\n\n\tgetViewportCount: function () {\n\n\t\treturn this._viewportCount;\n\n\t},\n\n\tgetFrustum: function () {\n\n\t\treturn this._frustum;\n\n\t},\n\n\tupdateMatrices: function ( light ) {\n\n\t\tconst shadowCamera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t},\n\n\tgetViewport: function ( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t},\n\n\tgetFrameExtents: function () {\n\n\t\treturn this._frameExtents;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n\nexport { LightShadow };\n","import { LightShadow } from './LightShadow.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\n\nfunction DirectionalLightShadow() {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow,\n\n\tisDirectionalLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n\nexport { DirectionalLightShadow };\n","import { Light } from './Light.js';\nimport { DirectionalLightShadow } from './DirectionalLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { DirectionalLight };\n","import { LightShadow } from './LightShadow.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\n\nfunction PointLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\tthis._frameExtents = new Vector2( 4, 2 );\n\n\tthis._viewportCount = 6;\n\n\tthis._viewports = [\n\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t// following orientation:\n\t\t//\n\t\t//  xzXZ\n\t\t//   y Y\n\t\t//\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\n\t\t// positive X\n\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t// negative X\n\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t// positive Z\n\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t// negative Z\n\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t// positive Y\n\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t// negative Y\n\t\tnew Vector4( 1, 0, 1, 1 )\n\t];\n\n\tthis._cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tthis._cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n}\n\nPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: PointLightShadow,\n\n\tisPointLightShadow: true,\n\n\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\tif ( viewportIndex === undefined ) viewportIndex = 0;\n\n\t\tconst camera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.copy( camera.position );\n\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t}\n\n} );\n\n\nexport { PointLightShadow };\n","import { Light } from './Light.js';\nimport { PointLightShadow } from './PointLightShadow.js';\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new PointLightShadow();\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { PointLight };\n","import { LightShadow } from './LightShadow.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n\nexport { SpotLightShadow };\n","import { Light } from './Light.js';\nimport { SpotLightShadow } from './SpotLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { SpotLight };\n","import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nconst loading = {};\n\nfunction FileLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FileLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { FileLoader };\n","import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tLoader.call( this, manager );\n\n\tthis.options = { premultiplyAlpha: 'none' };\n\n}\n\nImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageBitmapLoader,\n\n\tisImageBitmapLoader: true,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n} );\n\nexport { ImageBitmapLoader };\n","const LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\nexport { LoaderUtils };\n","import { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _start = new Vector3();\nconst _end = new Vector3();\nconst _inverseMatrix = new Matrix4();\nconst _ray = new Ray();\nconst _sphere = new Sphere();\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial();\n\n\tthis.updateMorphTargets();\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst lineDistances = geometry.lineDistances;\n\n\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\tfor ( let i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst indices = index.array;\n\n\t\t\t\tfor ( let i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = indices[ i ];\n\t\t\t\t\tconst b = indices[ i + 1 ];\n\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\tconst distSq = _ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\tconst distSq = _ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst nbVertices = vertices.length;\n\n\t\t\tfor ( let i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\tconst distSq = _ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { Line };\n","import { Line } from './Line.js';\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n\nexport { LineLoop };\n","import { Line } from './Line.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _start = new Vector3();\nconst _end = new Vector3();\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconst vertices = geometry.vertices;\n\t\t\tconst lineDistances = geometry.lineDistances;\n\n\t\t\tfor ( let i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t_start.copy( vertices[ i ] );\n\t\t\t\t_end.copy( vertices[ i + 1 ] );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { LineSegments };\n","import { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PointsMaterial } from '../materials/PointsMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\nconst _inverseMatrix = new Matrix4();\nconst _ray = new Ray();\nconst _sphere = new Sphere();\nconst _position = new Vector3();\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial();\n\n\tthis.updateMorphTargets();\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst indices = index.array;\n\n\t\t\t\tfor ( let i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = indices[ i ];\n\n\t\t\t\t\t_position.fromArray( positions, a * 3 );\n\n\t\t\t\t\ttestPoint( _position, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t_position.fromArray( positions, i * 3 );\n\n\t\t\t\t\ttestPoint( _position, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst vertices = geometry.vertices;\n\n\t\t\tfor ( let i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\ttestPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nexport { Points };\n","import { Matrix4 } from '../math/Matrix4.js';\n\nconst _offsetMatrix = new Matrix4();\nconst _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\tthis.frame = - 1;\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== undefined ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tdispose: function ( ) {\n\n\t\tif ( this.boneTexture ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = undefined;\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { Skeleton };\n","import { Mesh } from './Mesh.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tMesh.prototype.copy.call( this, source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tboneTransform: ( function () {\n\n\t\tconst basePosition = new Vector3();\n\n\t\tconst skinIndex = new Vector4();\n\t\tconst skinWeight = new Vector4();\n\n\t\tconst vector = new Vector3();\n\t\tconst matrix = new Matrix4();\n\n\t\treturn function ( index, target ) {\n\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tskinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t\tskinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t\tbasePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\t\ttarget.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst weight = skinWeight.getComponent( i );\n\n\t\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\t\tconst boneIndex = skinIndex.getComponent( i );\n\n\t\t\t\t\tmatrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\t\ttarget.addScaledVector( vector.copy( basePosition ).applyMatrix4( matrix ), weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t\t};\n\n\t}() )\n\n} );\n\n\nexport { SkinnedMesh };\n","import { Texture } from './Texture.js';\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\nexport { CanvasTexture };\n","/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n  ClampToEdgeWrapping,\n  DoubleSide,\n  FrontSide,\n  InterpolateDiscrete,\n  InterpolateLinear,\n  LinearFilter,\n  LinearMipmapLinearFilter,\n  LinearMipmapNearestFilter,\n  MirroredRepeatWrapping,\n  NearestFilter,\n  NearestMipmapLinearFilter,\n  NearestMipmapNearestFilter,\n  RepeatWrapping,\n  RGBAFormat,\n  RGBFormat,\n  sRGBEncoding,\n  TangentSpaceNormalMap,\n  TriangleFanDrawMode,\n  TriangleStripDrawMode,\n} from 'three/src/constants.js'\n\nimport { BufferAttribute } from 'three/src/core/BufferAttribute.js'\nimport { BufferGeometry } from 'three/src/core/BufferGeometry.js'\nimport { InterleavedBuffer } from 'three/src/core/InterleavedBuffer.js'\nimport { InterleavedBufferAttribute } from 'three/src/core/InterleavedBufferAttribute.js'\nimport { Object3D } from 'three/src/core/Object3D.js'\n\nimport { AnimationClip } from 'three/src/animation/AnimationClip.js'\nimport { PropertyBinding } from 'three/src/animation/PropertyBinding.js'\n\nimport { QuaternionKeyframeTrack } from 'three/src/animation/tracks/QuaternionKeyframeTrack.js'\nimport { VectorKeyframeTrack } from 'three/src/animation/tracks/VectorKeyframeTrack.js'\nimport { NumberKeyframeTrack } from 'three/src/animation/tracks/NumberKeyframeTrack.js'\n\nimport { OrthographicCamera } from 'three/src/cameras/OrthographicCamera.js'\nimport { PerspectiveCamera } from 'three/src/cameras/PerspectiveCamera.js'\n\nimport { LineBasicMaterial } from 'three/src/materials/LineBasicMaterial.js'\nimport { Material } from 'three/src/materials/Material.js'\nimport { MeshBasicMaterial } from 'three/src/materials/MeshBasicMaterial.js'\nimport { MeshPhysicalMaterial } from 'three/src/materials/MeshPhysicalMaterial.js'\nimport { MeshStandardMaterial } from 'three/src/materials/MeshStandardMaterial.js'\nimport { PointsMaterial } from 'three/src/materials/PointsMaterial.js'\n\nimport { Box3 } from 'three/src/math/Box3.js'\nimport { Color } from 'three/src/math/Color.js'\nimport { Interpolant } from 'three/src/math/Interpolant.js'\nimport { MathUtils } from 'three/src/math/MathUtils.js'\nimport { Matrix4 } from 'three/src/math/Matrix4.js'\nimport { Sphere } from 'three/src/math/Sphere.js'\nimport { Vector2 } from 'three/src/math/Vector2.js'\nimport { Vector3 } from 'three/src/math/Vector3.js'\n\nimport { Bone } from 'three/src/objects/Bone.js'\nimport { Group } from 'three/src/objects/Group.js'\n\nimport { DirectionalLight } from 'three/src/lights/DirectionalLight.js'\nimport { PointLight } from 'three/src/lights/PointLight.js'\nimport { SpotLight } from 'three/src/lights/SpotLight.js'\n\nimport { FileLoader } from 'three/src/loaders/FileLoader.js'\nimport { ImageBitmapLoader } from 'three/src/loaders/ImageBitmapLoader.js'\nimport { Loader } from 'three/src/loaders/Loader.js'\nimport { LoaderUtils } from 'three/src/loaders/LoaderUtils.js'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js'\n\nimport { Line } from 'three/src/objects/Line.js'\nimport { LineLoop } from 'three/src/objects/LineLoop.js'\nimport { LineSegments } from 'three/src/objects/LineSegments.js'\nimport { Mesh } from 'three/src/objects/Mesh.js'\nimport { Points } from 'three/src/objects/Points.js'\nimport { Skeleton } from 'three/src/objects/Skeleton.js'\nimport { SkinnedMesh } from 'three/src/objects/SkinnedMesh.js'\n\nimport { CanvasTexture } from 'three/src/textures/CanvasTexture.js'\n\nconst GLTFLoader = (function () {\n  function GLTFLoader(manager) {\n    Loader.call(this, manager)\n\n    this.dracoLoader = null\n    this.ddsLoader = null\n\n    this.pluginCallbacks = []\n    this.register(function (parser) {\n      return new GLTFMaterialsClearcoatExtension(parser)\n    })\n  }\n\n  GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: GLTFLoader,\n\n    load: function (url, onLoad, onProgress, onError) {\n      const scope = this\n\n      let resourcePath\n\n      if (this.resourcePath !== '') {\n        resourcePath = this.resourcePath\n      } else if (this.path !== '') {\n        resourcePath = this.path\n      } else {\n        resourcePath = LoaderUtils.extractUrlBase(url)\n      }\n\n      // Tells the LoadingManager to track an extra item, which resolves after\n      // the model is fully loaded. This means the count of items loaded will\n      // be incorrect, but ensures manager.onLoad() does not fire early.\n      scope.manager.itemStart(url)\n\n      const _onError = e => {\n        if (onError) {\n          onError(e)\n        } else {\n          console.error(e)\n        }\n\n        scope.manager.itemError(url)\n        scope.manager.itemEnd(url)\n      }\n\n      const loader = new FileLoader(scope.manager)\n\n      loader.setPath(this.path)\n      loader.setResponseType('arraybuffer')\n      loader.setRequestHeader(this.requestHeader)\n\n      if (scope.crossOrigin === 'use-credentials') {\n        loader.setWithCredentials(true)\n      }\n\n      loader.load(\n        url,\n        function (data) {\n          try {\n            scope.parse(\n              data,\n              resourcePath,\n              function (gltf) {\n                onLoad(gltf)\n\n                scope.manager.itemEnd(url)\n              },\n              _onError,\n            )\n          } catch (e) {\n            _onError(e)\n          }\n        },\n        onProgress,\n        _onError,\n      )\n    },\n\n    setDRACOLoader(dracoLoader) {\n      this.dracoLoader = dracoLoader\n      return this\n    },\n\n    setDDSLoader(ddsLoader) {\n      this.ddsLoader = ddsLoader\n      return this\n    },\n\n    register(callback) {\n      if (this.pluginCallbacks.indexOf(callback) === -1) {\n        this.pluginCallbacks.push(callback)\n      }\n\n      return this\n    },\n\n    unregister(callback) {\n      if (this.pluginCallbacks.indexOf(callback) !== -1) {\n        this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(callback), 1)\n      }\n\n      return this\n    },\n\n    parse(data, path, onLoad, onError) {\n      let content\n      const extensions = {}\n      const plugins = {}\n\n      if (typeof data === 'string') {\n        content = data\n      } else {\n        const magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4))\n\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n          try {\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data)\n          } catch (error) {\n            if (onError) onError(error)\n            return\n          }\n\n          content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content\n        } else {\n          content = LoaderUtils.decodeText(new Uint8Array(data))\n        }\n      }\n\n      const json = JSON.parse(content)\n\n      if (json.asset === undefined || json.asset.version[0] < 2) {\n        if (onError)\n          onError(\n            new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'),\n          )\n        return\n      }\n\n      const parser = new GLTFParser(json, {\n        path: path || this.resourcePath || '',\n        crossOrigin: this.crossOrigin,\n        manager: this.manager,\n      })\n\n      parser.fileLoader.setRequestHeader(this.requestHeader)\n\n      for (let i = 0; i < this.pluginCallbacks.length; i++) {\n        const plugin = this.pluginCallbacks[i](parser)\n        plugins[plugin.name] = plugin\n\n        // Workaround to avoid determining as unknown extension\n        // in addUnknownExtensionsToUserData().\n        // Remove this workaround if we move all the existing\n        // extension handlers to plugin system\n        extensions[plugin.name] = true\n      }\n\n      if (json.extensionsUsed) {\n        for (let i = 0; i < json.extensionsUsed.length; ++i) {\n          const extensionName = json.extensionsUsed[i]\n          const extensionsRequired = json.extensionsRequired || []\n\n          switch (extensionName) {\n            case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n              extensions[extensionName] = new GLTFLightsExtension(json)\n              break\n\n            case EXTENSIONS.KHR_MATERIALS_UNLIT:\n              extensions[extensionName] = new GLTFMaterialsUnlitExtension()\n              break\n\n            case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n              extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension()\n              break\n\n            case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n              extensions[extensionName] = new GLTFDracoMeshCompressionExtension(\n                json,\n                this.dracoLoader,\n              )\n              break\n\n            case EXTENSIONS.MSFT_TEXTURE_DDS:\n              extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader)\n              break\n\n            case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n              extensions[extensionName] = new GLTFTextureTransformExtension()\n              break\n\n            case EXTENSIONS.KHR_MESH_QUANTIZATION:\n              extensions[extensionName] = new GLTFMeshQuantizationExtension()\n              break\n\n            default:\n              if (\n                extensionsRequired.indexOf(extensionName) >= 0 &&\n                plugins[extensionName] === undefined\n              ) {\n                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".')\n              }\n          }\n        }\n      }\n\n      parser.setExtensions(extensions)\n      parser.setPlugins(plugins)\n      parser.parse(onLoad, onError)\n    },\n  })\n\n  /* GLTFREGISTRY */\n\n  function GLTFRegistry() {\n    let objects = {}\n\n    return {\n      get(key) {\n        return objects[key]\n      },\n\n      add(key, object) {\n        objects[key] = object\n      },\n\n      remove(key) {\n        delete objects[key]\n      },\n\n      removeAll() {\n        objects = {}\n      },\n    }\n  }\n\n  /*********************************/\n  /********** EXTENSIONS ***********/\n  /*********************************/\n\n  const EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n    KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n    KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n    KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n    KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n    KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n    MSFT_TEXTURE_DDS: 'MSFT_texture_dds',\n  }\n\n  /**\n   * DDS Texture Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n   *\n   */\n  function GLTFTextureDDSExtension(ddsLoader) {\n    if (!ddsLoader) {\n      throw new Error(\n        'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader',\n      )\n    }\n\n    this.name = EXTENSIONS.MSFT_TEXTURE_DDS\n    this.ddsLoader = ddsLoader\n  }\n\n  /**\n   * Punctual Lights Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n   */\n  function GLTFLightsExtension(json) {\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL\n\n    const extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]) || {}\n    this.lightDefs = extension.lights || []\n  }\n\n  GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n    const lightDef = this.lightDefs[lightIndex]\n    let lightNode\n\n    const color = new Color(0xffffff)\n    if (lightDef.color !== undefined) color.fromArray(lightDef.color)\n\n    const range = lightDef.range !== undefined ? lightDef.range : 0\n\n    switch (lightDef.type) {\n      case 'directional':\n        lightNode = new DirectionalLight(color)\n        lightNode.target.position.set(0, 0, -1)\n        lightNode.add(lightNode.target)\n        break\n\n      case 'point':\n        lightNode = new PointLight(color)\n        lightNode.distance = range\n        break\n\n      case 'spot':\n        lightNode = new SpotLight(color)\n        lightNode.distance = range\n        // Handle spotlight properties.\n        lightDef.spot = lightDef.spot || {}\n        lightDef.spot.innerConeAngle =\n          lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0\n        lightDef.spot.outerConeAngle =\n          lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0\n        lightNode.angle = lightDef.spot.outerConeAngle\n        lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle\n        lightNode.target.position.set(0, 0, -1)\n        lightNode.add(lightNode.target)\n        break\n\n      default:\n        throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".')\n    }\n\n    // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n    // here, because node-level parsing will only override position if explicitly specified.\n    lightNode.position.set(0, 0, 0)\n\n    lightNode.decay = 2\n\n    if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity\n\n    lightNode.name = lightDef.name || 'light_' + lightIndex\n\n    return Promise.resolve(lightNode)\n  }\n\n  /**\n   * Unlit Materials Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n   */\n  function GLTFMaterialsUnlitExtension() {\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT\n  }\n\n  GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n    return MeshBasicMaterial\n  }\n\n  GLTFMaterialsUnlitExtension.prototype.extendParams = function (\n    materialParams,\n    materialDef,\n    parser,\n  ) {\n    const pending = []\n\n    materialParams.color = new Color(1.0, 1.0, 1.0)\n    materialParams.opacity = 1.0\n\n    const metallicRoughness = materialDef.pbrMetallicRoughness\n\n    if (metallicRoughness) {\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        const array = metallicRoughness.baseColorFactor\n\n        materialParams.color.fromArray(array)\n        materialParams.opacity = array[3]\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(\n          parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture),\n        )\n      }\n    }\n\n    return Promise.all(pending)\n  }\n\n  /**\n   * Clearcoat Materials Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n   */\n  function GLTFMaterialsClearcoatExtension(parser) {\n    this.parser = parser\n    this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT\n  }\n\n  GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function (/* materialIndex */) {\n    return MeshPhysicalMaterial\n  }\n\n  GLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function (\n    materialIndex,\n    materialParams,\n  ) {\n    const parser = this.parser\n    const materialDef = parser.json.materials[materialIndex]\n\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve()\n    }\n\n    const pending = []\n\n    const extension = materialDef.extensions[this.name]\n\n    if (extension.clearcoatFactor !== undefined) {\n      materialParams.clearcoat = extension.clearcoatFactor\n    }\n\n    if (extension.clearcoatTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture))\n    }\n\n    if (extension.clearcoatRoughnessFactor !== undefined) {\n      materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor\n    }\n\n    if (extension.clearcoatRoughnessTexture !== undefined) {\n      pending.push(\n        parser.assignTexture(\n          materialParams,\n          'clearcoatRoughnessMap',\n          extension.clearcoatRoughnessTexture,\n        ),\n      )\n    }\n\n    if (extension.clearcoatNormalTexture !== undefined) {\n      pending.push(\n        parser.assignTexture(\n          materialParams,\n          'clearcoatNormalMap',\n          extension.clearcoatNormalTexture,\n        ),\n      )\n\n      if (extension.clearcoatNormalTexture.scale !== undefined) {\n        const scale = extension.clearcoatNormalTexture.scale\n\n        materialParams.clearcoatNormalScale = new Vector2(scale, scale)\n      }\n    }\n\n    return Promise.all(pending)\n  }\n\n  /* BINARY EXTENSION */\n  const BINARY_EXTENSION_HEADER_MAGIC = 'glTF'\n  const BINARY_EXTENSION_HEADER_LENGTH = 12\n  const BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 }\n\n  function GLTFBinaryExtension(data) {\n    this.name = EXTENSIONS.KHR_BINARY_GLTF\n    this.content = null\n    this.body = null\n\n    const headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH)\n\n    this.header = {\n      magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n      version: headerView.getUint32(4, true),\n      length: headerView.getUint32(8, true),\n    }\n\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n      throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.')\n    } else if (this.header.version < 2.0) {\n      throw new Error('THREE.GLTFLoader: Legacy binary file detected.')\n    }\n\n    const chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH)\n    let chunkIndex = 0\n\n    while (chunkIndex < chunkView.byteLength) {\n      const chunkLength = chunkView.getUint32(chunkIndex, true)\n      chunkIndex += 4\n\n      const chunkType = chunkView.getUint32(chunkIndex, true)\n      chunkIndex += 4\n\n      if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n        const contentArray = new Uint8Array(\n          data,\n          BINARY_EXTENSION_HEADER_LENGTH + chunkIndex,\n          chunkLength,\n        )\n        this.content = LoaderUtils.decodeText(contentArray)\n      } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n        const byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex\n        this.body = data.slice(byteOffset, byteOffset + chunkLength)\n      }\n\n      // Clients must ignore chunks with unknown types.\n\n      chunkIndex += chunkLength\n    }\n\n    if (this.content === null) {\n      throw new Error('THREE.GLTFLoader: JSON content not found.')\n    }\n  }\n\n  /**\n   * DRACO Mesh Compression Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n   */\n  function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n    if (!dracoLoader) {\n      throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.')\n    }\n\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION\n    this.json = json\n    this.dracoLoader = dracoLoader\n    this.dracoLoader.preload()\n  }\n\n  GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n    const json = this.json\n    const dracoLoader = this.dracoLoader\n    const bufferViewIndex = primitive.extensions[this.name].bufferView\n    const gltfAttributeMap = primitive.extensions[this.name].attributes\n    const threeAttributeMap = {}\n    const attributeNormalizedMap = {}\n    const attributeTypeMap = {}\n\n    for (let attributeName in gltfAttributeMap) {\n      const threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase()\n\n      threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName]\n    }\n\n    for (attributeName in primitive.attributes) {\n      const threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase()\n\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        const accessorDef = json.accessors[primitive.attributes[attributeName]]\n        const componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType]\n\n        attributeTypeMap[threeAttributeName] = componentType\n        attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true\n      }\n    }\n\n    return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n      return new Promise(function (resolve) {\n        dracoLoader.decodeDracoFile(\n          bufferView,\n          function (geometry) {\n            for (let attributeName in geometry.attributes) {\n              const attribute = geometry.attributes[attributeName]\n              const normalized = attributeNormalizedMap[attributeName]\n\n              if (normalized !== undefined) {\n                attribute.normalized = normalized\n              }\n            }\n\n            resolve(geometry)\n          },\n          threeAttributeMap,\n          attributeTypeMap,\n        )\n      })\n    })\n  }\n\n  /**\n   * Texture Transform Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n   */\n  function GLTFTextureTransformExtension() {\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM\n  }\n\n  GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n    texture = texture.clone()\n\n    if (transform.offset !== undefined) {\n      texture.offset.fromArray(transform.offset)\n    }\n\n    if (transform.rotation !== undefined) {\n      texture.rotation = transform.rotation\n    }\n\n    if (transform.scale !== undefined) {\n      texture.repeat.fromArray(transform.scale)\n    }\n\n    if (transform.texCoord !== undefined) {\n      console.warn(\n        'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.',\n      )\n    }\n\n    texture.needsUpdate = true\n\n    return texture\n  }\n\n  /**\n   * Specular-Glossiness Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n   */\n\n  /**\n   * A sub class of StandardMaterial with some of the functionality\n   * changed via the `onBeforeCompile` callback\n   * @pailhead\n   */\n\n  function GLTFMeshStandardSGMaterial(params) {\n    MeshStandardMaterial.call(this)\n\n    this.isGLTFSpecularGlossinessMaterial = true\n\n    //various chunks that need replacing\n    const specularMapParsFragmentChunk = [\n      '#ifdef USE_SPECULARMAP',\n      '\tuniform sampler2D specularMap;',\n      '#endif',\n    ].join('\\n')\n\n    const glossinessMapParsFragmentChunk = [\n      '#ifdef USE_GLOSSINESSMAP',\n      '\tuniform sampler2D glossinessMap;',\n      '#endif',\n    ].join('\\n')\n\n    const specularMapFragmentChunk = [\n      'vec3 specularFactor = specular;',\n      '#ifdef USE_SPECULARMAP',\n      '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n      '\ttexelSpecular = sRGBToLinear( texelSpecular );',\n      '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n      '\tspecularFactor *= texelSpecular.rgb;',\n      '#endif',\n    ].join('\\n')\n\n    const glossinessMapFragmentChunk = [\n      'float glossinessFactor = glossiness;',\n      '#ifdef USE_GLOSSINESSMAP',\n      '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n      '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n      '\tglossinessFactor *= texelGlossiness.a;',\n      '#endif',\n    ].join('\\n')\n\n    const lightPhysicalFragmentChunk = [\n      'PhysicalMaterial material;',\n      'material.diffuseColor = diffuseColor.rgb;',\n      'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n      'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n      'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n      'material.specularRoughness += geometryRoughness;',\n      'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n      'material.specularColor = specularFactor.rgb;',\n    ].join('\\n')\n\n    const uniforms = {\n      specular: { value: new Color().setHex(0xffffff) },\n      glossiness: { value: 1 },\n      specularMap: { value: null },\n      glossinessMap: { value: null },\n    }\n\n    this._extraUniforms = uniforms\n\n    // please see #14031 or #13198 for an alternate approach\n    this.onBeforeCompile = function (shader) {\n      for (let uniformName in uniforms) {\n        shader.uniforms[uniformName] = uniforms[uniformName]\n      }\n\n      shader.fragmentShader = shader.fragmentShader.replace(\n        'uniform float roughness;',\n        'uniform vec3 specular;',\n      )\n      shader.fragmentShader = shader.fragmentShader.replace(\n        'uniform float metalness;',\n        'uniform float glossiness;',\n      )\n      shader.fragmentShader = shader.fragmentShader.replace(\n        '#include <roughnessmap_pars_fragment>',\n        specularMapParsFragmentChunk,\n      )\n      shader.fragmentShader = shader.fragmentShader.replace(\n        '#include <metalnessmap_pars_fragment>',\n        glossinessMapParsFragmentChunk,\n      )\n      shader.fragmentShader = shader.fragmentShader.replace(\n        '#include <roughnessmap_fragment>',\n        specularMapFragmentChunk,\n      )\n      shader.fragmentShader = shader.fragmentShader.replace(\n        '#include <metalnessmap_fragment>',\n        glossinessMapFragmentChunk,\n      )\n      shader.fragmentShader = shader.fragmentShader.replace(\n        '#include <lights_physical_fragment>',\n        lightPhysicalFragmentChunk,\n      )\n    }\n\n    /*eslint-disable*/\n    Object.defineProperties(this, {\n      specular: {\n        get: function () {\n          return uniforms.specular.value\n        },\n        set: function (v) {\n          uniforms.specular.value = v\n        },\n      },\n      specularMap: {\n        get: function () {\n          return uniforms.specularMap.value\n        },\n        set: function (v) {\n          uniforms.specularMap.value = v\n        },\n      },\n      glossiness: {\n        get: function () {\n          return uniforms.glossiness.value\n        },\n        set: function (v) {\n          uniforms.glossiness.value = v\n        },\n      },\n      glossinessMap: {\n        get: function () {\n          return uniforms.glossinessMap.value\n        },\n        set: function (v) {\n          uniforms.glossinessMap.value = v\n          //how about something like this - @pailhead\n          if (v) {\n            this.defines.USE_GLOSSINESSMAP = ''\n            // set USE_ROUGHNESSMAP to enable vUv\n            this.defines.USE_ROUGHNESSMAP = ''\n          } else {\n            delete this.defines.USE_ROUGHNESSMAP\n            delete this.defines.USE_GLOSSINESSMAP\n          }\n        },\n      },\n    })\n\n    /*eslint-enable*/\n    delete this.metalness\n    delete this.roughness\n    delete this.metalnessMap\n    delete this.roughnessMap\n\n    this.setValues(params)\n  }\n\n  GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype)\n  GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial\n\n  GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source)\n    this.specularMap = source.specularMap\n    this.specular.copy(source.specular)\n    this.glossinessMap = source.glossinessMap\n    this.glossiness = source.glossiness\n    delete this.metalness\n    delete this.roughness\n    delete this.metalnessMap\n    delete this.roughnessMap\n    return this\n  }\n\n  function GLTFMaterialsPbrSpecularGlossinessExtension() {\n    return {\n      name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n      specularGlossinessParams: [\n        'color',\n        'map',\n        'lightMap',\n        'lightMapIntensity',\n        'aoMap',\n        'aoMapIntensity',\n        'emissive',\n        'emissiveIntensity',\n        'emissiveMap',\n        'bumpMap',\n        'bumpScale',\n        'normalMap',\n        'normalMapType',\n        'displacementMap',\n        'displacementScale',\n        'displacementBias',\n        'specularMap',\n        'specular',\n        'glossinessMap',\n        'glossiness',\n        'alphaMap',\n        'envMap',\n        'envMapIntensity',\n        'refractionRatio',\n      ],\n\n      getMaterialType: function () {\n        return GLTFMeshStandardSGMaterial\n      },\n\n      extendParams: function (materialParams, materialDef, parser) {\n        const pbrSpecularGlossiness = materialDef.extensions[this.name]\n\n        materialParams.color = new Color(1.0, 1.0, 1.0)\n        materialParams.opacity = 1.0\n\n        const pending = []\n\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n          const array = pbrSpecularGlossiness.diffuseFactor\n\n          materialParams.color.fromArray(array)\n          materialParams.opacity = array[3]\n        }\n\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n          pending.push(\n            parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture),\n          )\n        }\n\n        materialParams.emissive = new Color(0.0, 0.0, 0.0)\n        materialParams.glossiness =\n          pbrSpecularGlossiness.glossinessFactor !== undefined\n            ? pbrSpecularGlossiness.glossinessFactor\n            : 1.0\n        materialParams.specular = new Color(1.0, 1.0, 1.0)\n\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n          materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor)\n        }\n\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n          const specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture\n          pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef))\n          pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef))\n        }\n\n        return Promise.all(pending)\n      },\n\n      createMaterial: function (materialParams) {\n        const material = new GLTFMeshStandardSGMaterial(materialParams)\n        material.fog = true\n\n        material.color = materialParams.color\n\n        material.map = materialParams.map === undefined ? null : materialParams.map\n\n        material.lightMap = null\n        material.lightMapIntensity = 1.0\n\n        material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap\n        material.aoMapIntensity = 1.0\n\n        material.emissive = materialParams.emissive\n        material.emissiveIntensity = 1.0\n        material.emissiveMap =\n          materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap\n\n        material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap\n        material.bumpScale = 1\n\n        material.normalMap =\n          materialParams.normalMap === undefined ? null : materialParams.normalMap\n        material.normalMapType = TangentSpaceNormalMap\n\n        if (materialParams.normalScale) material.normalScale = materialParams.normalScale\n\n        material.displacementMap = null\n        material.displacementScale = 1\n        material.displacementBias = 0\n\n        material.specularMap =\n          materialParams.specularMap === undefined ? null : materialParams.specularMap\n        material.specular = materialParams.specular\n\n        material.glossinessMap =\n          materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap\n        material.glossiness = materialParams.glossiness\n\n        material.alphaMap = null\n\n        material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap\n        material.envMapIntensity = 1.0\n\n        material.refractionRatio = 0.98\n\n        return material\n      },\n    }\n  }\n\n  /**\n   * Mesh Quantization Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n   */\n  function GLTFMeshQuantizationExtension() {\n    this.name = EXTENSIONS.KHR_MESH_QUANTIZATION\n  }\n\n  /*********************************/\n  /********** INTERPOLATION ********/\n  /*********************************/\n\n  // Spline Interpolation\n  // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n  function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer)\n  }\n\n  GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype)\n  GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant\n\n  GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n    // Copies a sample value to the result buffer. See description of glTF\n    // CUBICSPLINE values layout in interpolate_() function below.\n\n    const result = this.resultBuffer\n    const values = this.sampleValues\n    const valueSize = this.valueSize\n    const offset = index * valueSize * 3 + valueSize\n\n    for (let i = 0; i !== valueSize; i++) {\n      result[i] = values[offset + i]\n    }\n\n    return result\n  }\n\n  GLTFCubicSplineInterpolant.prototype.beforeStart_ =\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_\n\n  GLTFCubicSplineInterpolant.prototype.afterEnd_ =\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_\n\n  GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n    const result = this.resultBuffer\n    const values = this.sampleValues\n    const stride = this.valueSize\n\n    const stride2 = stride * 2\n    const stride3 = stride * 3\n\n    const td = t1 - t0\n\n    const p = (t - t0) / td\n    const pp = p * p\n    const ppp = pp * p\n\n    const offset1 = i1 * stride3\n    const offset0 = offset1 - stride3\n\n    const s2 = -2 * ppp + 3 * pp\n    const s3 = ppp - pp\n    const s0 = 1 - s2\n    const s1 = s3 - pp + p\n\n    // Layout of keyframe output values for CUBICSPLINE animations:\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n    for (let i = 0; i !== stride; i++) {\n      const p0 = values[offset0 + i + stride] // splineVertex_k\n      const m0 = values[offset0 + i + stride2] * td // outTangent_k * (t_k+1 - t_k)\n      const p1 = values[offset1 + i + stride] // splineVertex_k+1\n      const m1 = values[offset1 + i] * td // inTangent_k+1 * (t_k+1 - t_k)\n\n      result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1\n    }\n\n    return result\n  }\n\n  /*********************************/\n  /********** INTERNALS ************/\n  /*********************************/\n\n  /* CONSTANTS */\n\n  const WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    //FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    POINTS: 0,\n    LINES: 1,\n    LINE_LOOP: 2,\n    LINE_STRIP: 3,\n    TRIANGLES: 4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN: 6,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123,\n  }\n\n  const WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n  }\n\n  const WEBGL_FILTERS = {\n    9728: NearestFilter,\n    9729: LinearFilter,\n    9984: NearestMipmapNearestFilter,\n    9985: LinearMipmapNearestFilter,\n    9986: NearestMipmapLinearFilter,\n    9987: LinearMipmapLinearFilter,\n  }\n\n  const WEBGL_WRAPPINGS = {\n    33071: ClampToEdgeWrapping,\n    33648: MirroredRepeatWrapping,\n    10497: RepeatWrapping,\n  }\n\n  const WEBGL_TYPE_SIZES = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n  }\n\n  const ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n  }\n\n  const PATH_PROPERTIES = {\n    scale: 'scale',\n    translation: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences',\n  }\n\n  const INTERPOLATION = {\n    CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n    // keyframe track will be initialized with a default interpolation type, then modified.\n    LINEAR: InterpolateLinear,\n    STEP: InterpolateDiscrete,\n  }\n\n  const ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND',\n  }\n\n  const MIME_TYPE_FORMATS = {\n    'image/png': RGBAFormat,\n    'image/jpeg': RGBFormat,\n  }\n\n  /* UTILITY FUNCTIONS */\n\n  function resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return ''\n\n    // Host Relative URL\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1')\n    }\n\n    // Absolute URL http://,https://,//\n    if (/^(https?:)?\\/\\//i.test(url)) return url\n\n    // Data URI\n    if (/^data:.*,.*$/i.test(url)) return url\n\n    // Blob URL\n    if (/^blob:.*$/i.test(url)) return url\n\n    // Relative URL\n    return path + url\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n   */\n  function createDefaultMaterial(cache) {\n    if (cache['DefaultMaterial'] === undefined) {\n      cache['DefaultMaterial'] = new MeshStandardMaterial({\n        color: 0xffffff,\n        emissive: 0x000000,\n        metalness: 1,\n        roughness: 1,\n        transparent: false,\n        depthTest: true,\n        side: FrontSide,\n      })\n    }\n\n    return cache['DefaultMaterial']\n  }\n\n  function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n    // Add unknown glTF extensions to an object's userData.\n\n    for (let name in objectDef.extensions) {\n      if (knownExtensions[name] === undefined) {\n        object.userData.gltfExtensions = object.userData.gltfExtensions || {}\n        object.userData.gltfExtensions[name] = objectDef.extensions[name]\n      }\n    }\n  }\n\n  /**\n   * @param {Object3D|Material|BufferGeometry} object\n   * @param {GLTF.definition} gltfDef\n   */\n  function assignExtrasToUserData(object, gltfDef) {\n    if (gltfDef.extras !== undefined) {\n      if (typeof gltfDef.extras === 'object') {\n        Object.assign(object.userData, gltfDef.extras)\n      } else {\n        console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras)\n      }\n    }\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n   *\n   * @param {BufferGeometry} geometry\n   * @param {Array<GLTF.Target>} targets\n   * @param {GLTFParser} parser\n   * @return {Promise<BufferGeometry>}\n   */\n  function addMorphTargets(geometry, targets, parser) {\n    let hasMorphPosition = false\n    let hasMorphNormal = false\n\n    for (let i = 0, il = targets.length; i < il; i++) {\n      const target = targets[i]\n\n      if (target.POSITION !== undefined) {\n        hasMorphPosition = true\n      }\n      if (target.NORMAL !== undefined) {\n        hasMorphNormal = true\n      }\n\n      if (hasMorphPosition && hasMorphNormal) {\n        break\n      }\n    }\n\n    if (!hasMorphPosition && !hasMorphNormal) {\n      return Promise.resolve(geometry)\n    }\n\n    const pendingPositionAccessors = []\n    const pendingNormalAccessors = []\n\n    for (let i = 0, il = targets.length; i < il; i++) {\n      const target = targets[i]\n\n      if (hasMorphPosition) {\n        const pendingAccessor =\n          target.POSITION !== undefined\n            ? parser.getDependency('accessor', target.POSITION)\n            : geometry.attributes.position\n\n        pendingPositionAccessors.push(pendingAccessor)\n      }\n\n      if (hasMorphNormal) {\n        const pendingAccessor =\n          target.NORMAL !== undefined\n            ? parser.getDependency('accessor', target.NORMAL)\n            : geometry.attributes.normal\n\n        pendingNormalAccessors.push(pendingAccessor)\n      }\n    }\n\n    return Promise.all([\n      Promise.all(pendingPositionAccessors),\n      Promise.all(pendingNormalAccessors),\n    ]).then(function (accessors) {\n      const morphPositions = accessors[0]\n      const morphNormals = accessors[1]\n\n      if (hasMorphPosition) {\n        geometry.morphAttributes.position = morphPositions\n      }\n      if (hasMorphNormal) {\n        geometry.morphAttributes.normal = morphNormals\n      }\n      geometry.morphTargetsRelative = true\n\n      return geometry\n    })\n  }\n\n  /**\n   * @param {Mesh} mesh\n   * @param {GLTF.Mesh} meshDef\n   */\n  function updateMorphTargets(mesh, meshDef) {\n    mesh.updateMorphTargets()\n\n    if (meshDef.weights !== undefined) {\n      for (let i = 0, il = meshDef.weights.length; i < il; i++) {\n        mesh.morphTargetInfluences[i] = meshDef.weights[i]\n      }\n    }\n\n    // .extras has user-defined data, so check that .extras.targetNames is an array.\n    if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n      const targetNames = meshDef.extras.targetNames\n\n      if (mesh.morphTargetInfluences.length === targetNames.length) {\n        mesh.morphTargetDictionary = {}\n\n        for (let i = 0, il = targetNames.length; i < il; i++) {\n          mesh.morphTargetDictionary[targetNames[i]] = i\n        }\n      } else {\n        console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.')\n      }\n    }\n  }\n\n  function createPrimitiveKey(primitiveDef) {\n    const dracoExtension =\n      primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n\n    if (dracoExtension) {\n      const { bufferView, indices, attributes } = dracoExtension\n      return `draco:${bufferView}:${indices}:${attributes}`\n    } else {\n      const { indices, attributes, mode } = primitiveDef\n      return `${indices}:${createAttributesKey(attributes)}:${mode}`\n    }\n  }\n\n  function createAttributesKey(attributes) {\n    let attributesKey = ''\n\n    const keys = Object.keys(attributes).sort()\n\n    for (let i = 0, il = keys.length; i < il; i++) {\n      attributesKey += keys[i] + ':' + attributes[keys[i]] + ';'\n    }\n\n    return attributesKey\n  }\n\n  /* GLTF PARSER */\n\n  function GLTFParser(json, options) {\n    this.json = json || {}\n    this.extensions = {}\n    this.plugins = {}\n    this.options = options || {}\n\n    // loader object cache\n    this.cache = new GLTFRegistry()\n\n    // associations between Three.js objects and glTF elements\n    this.associations = new Map()\n\n    // BufferGeometry caching\n    this.primitiveCache = {}\n\n    // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n    // expensive work of uploading a texture to the GPU off the main thread.\n    if (typeof createImageBitmap !== 'undefined' && /Firefox/.test(navigator.userAgent) === false) {\n      this.textureLoader = new ImageBitmapLoader(this.options.manager)\n    } else {\n      this.textureLoader = new TextureLoader(this.options.manager)\n    }\n\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin)\n\n    this.fileLoader = new FileLoader(this.options.manager)\n    this.fileLoader.setResponseType('arraybuffer')\n\n    if (this.options.crossOrigin === 'use-credentials') {\n      this.fileLoader.setWithCredentials(true)\n    }\n  }\n\n  GLTFParser.prototype.setExtensions = function (extensions) {\n    this.extensions = extensions\n  }\n\n  GLTFParser.prototype.setPlugins = function (plugins) {\n    this.plugins = plugins\n  }\n\n  GLTFParser.prototype.parse = function (onLoad, onError) {\n    const parser = this\n    const { extensions, json } = this\n\n    // Clear the loader cache\n    this.cache.removeAll()\n\n    // Mark the special nodes/meshes in json for efficient parse\n    this.markDefs()\n\n    Promise.all([\n      this.getDependencies('scene'),\n      this.getDependencies('animation'),\n      this.getDependencies('camera'),\n    ])\n      .then(function (dependencies) {\n        const result = {\n          scene: dependencies[0][json.scene || 0],\n          scenes: dependencies[0],\n          animations: dependencies[1],\n          cameras: dependencies[2],\n          asset: json.asset,\n          parser: parser,\n          userData: {},\n        }\n\n        addUnknownExtensionsToUserData(extensions, result, json)\n\n        assignExtrasToUserData(result, json)\n\n        onLoad(result)\n      })\n      .catch(onError)\n  }\n\n  /**\n   * Marks the special nodes/meshes in json for efficient parse.\n   */\n  GLTFParser.prototype.markDefs = function () {\n    const nodeDefs = this.json.nodes || []\n    const skinDefs = this.json.skins || []\n    const meshDefs = this.json.meshes || []\n\n    const meshReferences = {}\n    const meshUses = {}\n\n    // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n    for (let skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n      const joints = skinDefs[skinIndex].joints\n\n      for (let i = 0, il = joints.length; i < il; i++) {\n        nodeDefs[joints[i]].isBone = true\n      }\n    }\n\n    // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n    // avoid having more than one Mesh with the same name, count\n    // references and rename instances below.\n    //\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n    for (let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      const nodeDef = nodeDefs[nodeIndex]\n\n      if (nodeDef.mesh !== undefined) {\n        if (meshReferences[nodeDef.mesh] === undefined) {\n          meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0\n        }\n\n        meshReferences[nodeDef.mesh]++\n\n        // Nothing in the mesh definition indicates whether it is\n        // a SkinnedMesh or Mesh. Use the node's mesh reference\n        // to mark SkinnedMesh if node has skin.\n        if (nodeDef.skin !== undefined) {\n          meshDefs[nodeDef.mesh].isSkinnedMesh = true\n        }\n      }\n    }\n\n    this.json.meshReferences = meshReferences\n    this.json.meshUses = meshUses\n  }\n\n  GLTFParser.prototype._invokeOne = function (func) {\n    const extensions = Object.values(this.plugins)\n    extensions.push(this)\n\n    for (let i = 0; i < extensions.length; i++) {\n      const result = func(extensions[i])\n\n      if (result) {\n        return result\n      }\n    }\n  }\n\n  GLTFParser.prototype._invokeAll = function (func) {\n    const extensions = Object.values(this.plugins)\n    extensions.unshift(this)\n\n    const pending = []\n\n    for (let i = 0; i < extensions.length; i++) {\n      pending.push(func(extensions[i]))\n    }\n\n    return Promise.all(pending)\n  }\n\n  /**\n   * Requests the specified dependency asynchronously, with caching.\n   * @param {string} type\n   * @param {number} index\n   * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n   */\n  GLTFParser.prototype.getDependency = function (type, index) {\n    const cacheKey = type + ':' + index\n    let dependency = this.cache.get(cacheKey)\n\n    if (!dependency) {\n      switch (type) {\n        case 'scene':\n          dependency = this.loadScene(index)\n          break\n\n        case 'node':\n          dependency = this.loadNode(index)\n          break\n\n        case 'mesh':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadMesh && ext.loadMesh(index)\n          })\n          break\n\n        case 'accessor':\n          dependency = this.loadAccessor(index)\n          break\n\n        case 'bufferView':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadBufferView && ext.loadBufferView(index)\n          })\n          break\n\n        case 'buffer':\n          dependency = this.loadBuffer(index)\n          break\n\n        case 'material':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadMaterial && ext.loadMaterial(index)\n          })\n          break\n\n        case 'texture':\n          dependency = this.loadTexture(index)\n          break\n\n        case 'skin':\n          dependency = this.loadSkin(index)\n          break\n\n        case 'animation':\n          dependency = this.loadAnimation(index)\n          break\n\n        case 'camera':\n          dependency = this.loadCamera(index)\n          break\n\n        case 'light':\n          dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index)\n          break\n\n        default:\n          throw new Error('Unknown type: ' + type)\n      }\n\n      this.cache.add(cacheKey, dependency)\n    }\n\n    return dependency\n  }\n\n  /**\n   * Requests all dependencies of the specified type asynchronously, with caching.\n   * @param {string} type\n   * @return {Promise<Array<Object>>}\n   */\n  GLTFParser.prototype.getDependencies = function (type) {\n    let dependencies = this.cache.get(type)\n\n    if (!dependencies) {\n      const parser = this\n      const defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || []\n\n      dependencies = Promise.all(defs.map((def, index) => parser.getDependency(type, index)))\n\n      this.cache.add(type, dependencies)\n    }\n\n    return dependencies\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n  GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n    const bufferDef = this.json.buffers[bufferIndex]\n    const loader = this.fileLoader\n\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n      throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.')\n    }\n\n    // If present, GLB container is required to be the first buffer.\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n      return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body)\n    }\n\n    const options = this.options\n\n    return new Promise(function (resolve, reject) {\n      loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n        reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'))\n      })\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferViewIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n  GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n    const bufferViewDef = this.json.bufferViews[bufferViewIndex]\n\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n      const { byteLength = 0, byteOffset = 0 } = bufferViewDef\n      return buffer.slice(byteOffset, byteOffset + byteLength)\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n   * @param {number} accessorIndex\n   * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n   */\n  GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n    const parser = this\n    const json = this.json\n\n    const accessorDef = this.json.accessors[accessorIndex]\n\n    if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n      // Ignore empty accessors, which may be used to declare runtime\n      // information about attributes coming from another source (e.g. Draco\n      // compression extension).\n      return Promise.resolve(null)\n    }\n\n    const pendingBufferViews = []\n\n    if (accessorDef.bufferView !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView))\n    } else {\n      pendingBufferViews.push(null)\n    }\n\n    if (accessorDef.sparse !== undefined) {\n      pendingBufferViews.push(\n        this.getDependency('bufferView', accessorDef.sparse.indices.bufferView),\n      )\n      pendingBufferViews.push(\n        this.getDependency('bufferView', accessorDef.sparse.values.bufferView),\n      )\n    }\n\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n      const bufferView = bufferViews[0]\n\n      const itemSize = WEBGL_TYPE_SIZES[accessorDef.type]\n      const TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType]\n\n      // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n      const elementBytes = TypedArray.BYTES_PER_ELEMENT\n      const itemBytes = elementBytes * itemSize\n      const byteOffset = accessorDef.byteOffset || 0\n      const byteStride =\n        accessorDef.bufferView !== undefined\n          ? json.bufferViews[accessorDef.bufferView].byteStride\n          : undefined\n\n      const normalized = accessorDef.normalized === true\n\n      let array\n      let bufferAttribute\n\n      // The buffer is not interleaved if the stride is the item size in bytes.\n      if (byteStride && byteStride !== itemBytes) {\n        // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n        // This makes sure that IBA.count reflects accessor.count properly\n        const ibSlice = Math.floor(byteOffset / byteStride)\n        const { bufferView, componentType, count } = accessorDef\n        const ibCacheKey = `InterleavedBuffer:${bufferView}:${componentType}:${ibSlice}:${count}`\n\n        const ib = parser.cache.get(ibCacheKey)\n\n        if (!ib) {\n          array = new TypedArray(\n            bufferView,\n            ibSlice * byteStride,\n            (accessorDef.count * byteStride) / elementBytes,\n          )\n\n          // Integer parameters to IB/IBA are in array elements, not bytes.\n          ib = new InterleavedBuffer(array, byteStride / elementBytes)\n\n          parser.cache.add(ibCacheKey, ib)\n        }\n\n        bufferAttribute = new InterleavedBufferAttribute(\n          ib,\n          itemSize,\n          (byteOffset % byteStride) / elementBytes,\n          normalized,\n        )\n      } else {\n        if (bufferView === null) {\n          array = new TypedArray(accessorDef.count * itemSize)\n        } else {\n          array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize)\n        }\n\n        bufferAttribute = new BufferAttribute(array, itemSize, normalized)\n      }\n\n      // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n      if (accessorDef.sparse !== undefined) {\n        const itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR\n        const TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType]\n\n        const byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0\n        const byteOffsetValues = accessorDef.sparse.values.byteOffset || 0\n\n        const sparseIndices = new TypedArrayIndices(\n          bufferViews[1],\n          byteOffsetIndices,\n          accessorDef.sparse.count * itemSizeIndices,\n        )\n        const sparseValues = new TypedArray(\n          bufferViews[2],\n          byteOffsetValues,\n          accessorDef.sparse.count * itemSize,\n        )\n\n        if (bufferView !== null) {\n          // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n          bufferAttribute = new BufferAttribute(\n            bufferAttribute.array.slice(),\n            bufferAttribute.itemSize,\n            bufferAttribute.normalized,\n          )\n        }\n\n        for (let i = 0, il = sparseIndices.length; i < il; i++) {\n          const index = sparseIndices[i]\n\n          bufferAttribute.setX(index, sparseValues[i * itemSize])\n          if (itemSize >= 2) {\n            bufferAttribute.setY(index, sparseValues[i * itemSize + 1])\n          }\n          if (itemSize >= 3) {\n            bufferAttribute.setZ(index, sparseValues[i * itemSize + 2])\n          }\n          if (itemSize >= 4) {\n            bufferAttribute.setW(index, sparseValues[i * itemSize + 3])\n          }\n          if (itemSize >= 5) {\n            throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.')\n          }\n        }\n      }\n\n      return bufferAttribute\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n   * @param {number} textureIndex\n   * @return {Promise<THREE.Texture>}\n   */\n  GLTFParser.prototype.loadTexture = function (textureIndex) {\n    const parser = this\n    const { json, options, textureLoader } = this\n\n    const URL = self.URL || self.webkitURL\n\n    const textureDef = json.textures[textureIndex]\n\n    const textureExtensions = textureDef.extensions || {}\n\n    let source\n\n    if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n      source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source]\n    } else {\n      source = json.images[textureDef.source]\n    }\n\n    let sourceURI = source.uri\n    let isObjectURL = false\n\n    if (source.bufferView !== undefined) {\n      // Load binary image data from bufferView, if provided.\n\n      sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n        isObjectURL = true\n        const blob = new Blob([bufferView], { type: source.mimeType })\n        sourceURI = URL.createObjectURL(blob)\n        return sourceURI\n      })\n    }\n\n    return Promise.resolve(sourceURI)\n      .then(function (sourceURI) {\n        // Load Texture resource.\n\n        let loader = options.manager.getHandler(sourceURI)\n\n        if (!loader) {\n          loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]\n            ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader\n            : textureLoader\n        }\n\n        return new Promise(function (resolve, reject) {\n          let onLoad = resolve\n\n          if (loader.isImageBitmapLoader === true) {\n            onLoad = imageBitmap => resolve(new CanvasTexture(imageBitmap))\n          }\n\n          loader.load(resolveURL(sourceURI, options.path), onLoad, undefined, reject)\n        })\n      })\n      .then(function (texture) {\n        // Clean up resources and configure Texture.\n\n        if (isObjectURL === true) {\n          URL.revokeObjectURL(sourceURI)\n        }\n\n        texture.flipY = false\n\n        if (textureDef.name) {\n          texture.name = textureDef.name\n        }\n\n        // Ignore unknown mime types, like DDS files.\n        if (source.mimeType in MIME_TYPE_FORMATS) {\n          texture.format = MIME_TYPE_FORMATS[source.mimeType]\n        }\n\n        const samplers = json.samplers || {}\n        const sampler = samplers[textureDef.sampler] || {}\n\n        texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter\n        texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter\n        texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping\n        texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping\n\n        parser.associations.set(texture, {\n          type: 'textures',\n          index: textureIndex,\n        })\n\n        return texture\n      })\n  }\n\n  /**\n   * Asynchronously assigns a texture to the given material parameters.\n   * @param {Object} materialParams\n   * @param {string} mapName\n   * @param {Object} mapDef\n   * @return {Promise}\n   */\n  GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n    const parser = this\n\n    return this.getDependency('texture', mapDef.index).then(function (texture) {\n      if (!texture.isCompressedTexture) {\n        switch (mapName) {\n          case 'aoMap':\n          case 'emissiveMap':\n          case 'metalnessMap':\n          case 'normalMap':\n          case 'roughnessMap':\n            texture.format = RGBFormat\n            break\n        }\n      }\n\n      // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n      // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n      if (\n        mapDef.texCoord !== undefined &&\n        mapDef.texCoord != 0 &&\n        !(mapName === 'aoMap' && mapDef.texCoord == 1)\n      ) {\n        console.warn(\n          'THREE.GLTFLoader: Custom UV set ' +\n            mapDef.texCoord +\n            ' for texture ' +\n            mapName +\n            ' not yet supported.',\n        )\n      }\n\n      if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n        const transform =\n          mapDef.extensions !== undefined\n            ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]\n            : undefined\n\n        if (transform) {\n          const gltfReference = parser.associations.get(texture)\n          texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(\n            texture,\n            transform,\n          )\n          parser.associations.set(texture, gltfReference)\n        }\n      }\n\n      materialParams[mapName] = texture\n    })\n  }\n\n  /**\n   * Assigns final material to a Mesh, Line, or Points instance. The instance\n   * already has a material (generated from the glTF material options alone)\n   * but reuse of the same glTF material may require multiple threejs materials\n   * to accomodate different primitive types, defines, etc. New materials will\n   * be created if necessary, and reused from a cache.\n   * @param  {Object3D} mesh Mesh, Line, or Points instance.\n   */\n  GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n    const geometry = mesh.geometry\n    let material = mesh.material\n\n    const useVertexTangents = geometry.attributes.tangent !== undefined\n    const useVertexColors = geometry.attributes.color !== undefined\n    const useFlatShading = geometry.attributes.normal === undefined\n    const useSkinning = mesh.isSkinnedMesh === true\n    const useMorphTargets = Object.keys(geometry.morphAttributes).length > 0\n    const useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined\n\n    if (mesh.isPoints) {\n      let cacheKey = 'PointsMaterial:' + material.uuid\n\n      const pointsMaterial = this.cache.get(cacheKey)\n\n      if (!pointsMaterial) {\n        pointsMaterial = new PointsMaterial()\n        Material.prototype.copy.call(pointsMaterial, material)\n        pointsMaterial.color.copy(material.color)\n        pointsMaterial.map = material.map\n        pointsMaterial.sizeAttenuation = false // glTF spec says points should be 1px\n\n        this.cache.add(cacheKey, pointsMaterial)\n      }\n\n      material = pointsMaterial\n    } else if (mesh.isLine) {\n      const cacheKey = 'LineBasicMaterial:' + material.uuid\n\n      const lineMaterial = this.cache.get(cacheKey)\n\n      if (!lineMaterial) {\n        lineMaterial = new LineBasicMaterial()\n        Material.prototype.copy.call(lineMaterial, material)\n        lineMaterial.color.copy(material.color)\n\n        this.cache.add(cacheKey, lineMaterial)\n      }\n\n      material = lineMaterial\n    }\n\n    // Clone the material if it will be modified\n    if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n      let cacheKey = 'ClonedMaterial:' + material.uuid + ':'\n\n      if (material.isGLTFSpecularGlossinessMaterial) {\n        cacheKey += 'specular-glossiness:'\n      }\n      if (useSkinning) {\n        cacheKey += 'skinning:'\n      }\n      if (useVertexTangents) {\n        cacheKey += 'vertex-tangents:'\n      }\n      if (useVertexColors) {\n        cacheKey += 'vertex-colors:'\n      }\n      if (useFlatShading) {\n        cacheKey += 'flat-shading:'\n      }\n      if (useMorphTargets) {\n        cacheKey += 'morph-targets:'\n      }\n      if (useMorphNormals) {\n        cacheKey += 'morph-normals:'\n      }\n\n      let cachedMaterial = this.cache.get(cacheKey)\n\n      if (!cachedMaterial) {\n        cachedMaterial = material.clone()\n\n        if (useSkinning) cachedMaterial.skinning = true\n        if (useVertexTangents) cachedMaterial.vertexTangents = true\n        if (useVertexColors) cachedMaterial.vertexColors = true\n        if (useFlatShading) cachedMaterial.flatShading = true\n        if (useMorphTargets) cachedMaterial.morphTargets = true\n        if (useMorphNormals) cachedMaterial.morphNormals = true\n\n        this.cache.add(cacheKey, cachedMaterial)\n\n        this.associations.set(cachedMaterial, this.associations.get(material))\n      }\n\n      material = cachedMaterial\n    }\n\n    // workarounds for mesh and geometry\n\n    if (\n      material.aoMap &&\n      geometry.attributes.uv2 === undefined &&\n      geometry.attributes.uv !== undefined\n    ) {\n      geometry.setAttribute('uv2', geometry.attributes.uv)\n    }\n\n    // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n    if (material.normalScale && !useVertexTangents) {\n      material.normalScale.y = -material.normalScale.y\n    }\n\n    if (material.clearcoatNormalScale && !useVertexTangents) {\n      material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y\n    }\n\n    mesh.material = material\n  }\n\n  GLTFParser.prototype.getMaterialType = function (/* materialIndex */) {\n    return MeshStandardMaterial\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n   * @param {number} materialIndex\n   * @return {Promise<Material>}\n   */\n  GLTFParser.prototype.loadMaterial = function (materialIndex) {\n    const parser = this\n    const { extensions, json } = this\n\n    const materialDef = json.materials[materialIndex]\n\n    let materialType\n    const materialParams = {}\n    const materialExtensions = materialDef.extensions || {}\n\n    const pending = []\n\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n      const sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]\n      materialType = sgExtension.getMaterialType()\n      pending.push(sgExtension.extendParams(materialParams, materialDef, parser))\n    } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n      const kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT]\n      materialType = kmuExtension.getMaterialType()\n      pending.push(kmuExtension.extendParams(materialParams, materialDef, parser))\n    } else {\n      // Specification:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n      const metallicRoughness = materialDef.pbrMetallicRoughness || {}\n\n      materialParams.color = new Color(1.0, 1.0, 1.0)\n      materialParams.opacity = 1.0\n\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        const array = metallicRoughness.baseColorFactor\n\n        materialParams.color.fromArray(array)\n        materialParams.opacity = array[3]\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(\n          parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture),\n        )\n      }\n\n      materialParams.metalness =\n        metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0\n      materialParams.roughness =\n        metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0\n\n      if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n        pending.push(\n          parser.assignTexture(\n            materialParams,\n            'metalnessMap',\n            metallicRoughness.metallicRoughnessTexture,\n          ),\n        )\n        pending.push(\n          parser.assignTexture(\n            materialParams,\n            'roughnessMap',\n            metallicRoughness.metallicRoughnessTexture,\n          ),\n        )\n      }\n\n      materialType = this._invokeOne(\n        ext => ext.getMaterialType && ext.getMaterialType(materialIndex),\n      )\n\n      pending.push(\n        this._invokeAll(\n          ext =>\n            ext.extendMaterialParams && ext.extendMaterialParams(materialIndex, materialParams),\n        ),\n      )\n    }\n\n    if (materialDef.doubleSided === true) {\n      materialParams.side = DoubleSide\n    }\n\n    const alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE\n\n    if (alphaMode === ALPHA_MODES.BLEND) {\n      materialParams.transparent = true\n\n      // See: https://github.com/mrdoob/three.js/issues/17706\n      materialParams.depthWrite = false\n    } else {\n      materialParams.transparent = false\n\n      if (alphaMode === ALPHA_MODES.MASK) {\n        materialParams.alphaTest =\n          materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5\n      }\n    }\n\n    if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture))\n\n      materialParams.normalScale = new Vector2(1, 1)\n\n      if (materialDef.normalTexture.scale !== undefined) {\n        materialParams.normalScale.set(\n          materialDef.normalTexture.scale,\n          materialDef.normalTexture.scale,\n        )\n      }\n    }\n\n    if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture))\n\n      if (materialDef.occlusionTexture.strength !== undefined) {\n        materialParams.aoMapIntensity = materialDef.occlusionTexture.strength\n      }\n    }\n\n    if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n      materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor)\n    }\n\n    if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture))\n    }\n\n    return Promise.all(pending).then(function () {\n      let material\n\n      if (materialType === GLTFMeshStandardSGMaterial) {\n        material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(\n          materialParams,\n        )\n      } else {\n        material = new materialType(materialParams)\n      }\n\n      if (materialDef.name) {\n        material.name = materialDef.name\n      }\n\n      // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n      if (material.map) material.map.encoding = sRGBEncoding\n      if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding\n\n      assignExtrasToUserData(material, materialDef)\n\n      parser.associations.set(material, { type: 'materials', index: materialIndex })\n\n      if (materialDef.extensions) {\n        addUnknownExtensionsToUserData(extensions, material, materialDef)\n      }\n\n      return material\n    })\n  }\n\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   */\n  function computeBounds(geometry, primitiveDef, parser) {\n    const attributes = primitiveDef.attributes\n\n    const box = new Box3()\n\n    if (attributes.POSITION !== undefined) {\n      const accessor = parser.json.accessors[attributes.POSITION]\n\n      const { max, min } = accessor\n\n      // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n      if (min !== undefined && max !== undefined) {\n        box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]))\n      } else {\n        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.')\n\n        return\n      }\n    } else {\n      return\n    }\n\n    const targets = primitiveDef.targets\n\n    if (targets !== undefined) {\n      const maxDisplacement = new Vector3()\n      const vector = new Vector3()\n\n      for (let i = 0, il = targets.length; i < il; i++) {\n        const target = targets[i]\n\n        if (target.POSITION !== undefined) {\n          const accessor = parser.json.accessors[target.POSITION]\n          const { max, min } = accessor\n\n          // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n          if (min !== undefined && max !== undefined) {\n            // we need to get max of absolute components because target weight is [-1,1]\n            vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])))\n            vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])))\n            vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])))\n\n            // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n            // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n            // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n            // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n            maxDisplacement.max(vector)\n          } else {\n            console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.')\n          }\n        }\n      }\n\n      // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n      box.expandByVector(maxDisplacement)\n    }\n\n    geometry.boundingBox = box\n\n    const sphere = new Sphere()\n\n    box.getCenter(sphere.center)\n    sphere.radius = box.min.distanceTo(box.max) / 2\n\n    geometry.boundingSphere = sphere\n  }\n\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   * @return {Promise<BufferGeometry>}\n   */\n  function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n    const attributes = primitiveDef.attributes\n\n    const pending = []\n\n    const assignAttributeAccessor = (accessorIndex, attributeName) =>\n      parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n        geometry.setAttribute(attributeName, accessor)\n      })\n\n    for (let gltfAttributeName in attributes) {\n      const threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase()\n\n      // Skip attributes already provided by e.g. Draco extension.\n      if (threeAttributeName in geometry.attributes) {\n        continue\n      }\n\n      pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName))\n    }\n\n    if (primitiveDef.indices !== undefined && !geometry.index) {\n      const accessor = parser\n        .getDependency('accessor', primitiveDef.indices)\n        .then(function (accessor) {\n          geometry.setIndex(accessor)\n        })\n\n      pending.push(accessor)\n    }\n\n    assignExtrasToUserData(geometry, primitiveDef)\n\n    computeBounds(geometry, primitiveDef, parser)\n\n    return Promise.all(pending).then(() =>\n      primitiveDef.targets !== undefined\n        ? addMorphTargets(geometry, primitiveDef.targets, parser)\n        : geometry,\n    )\n  }\n\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {Number} drawMode\n   * @return {BufferGeometry}\n   */\n  function toTrianglesDrawMode(geometry, drawMode) {\n    const index = geometry.getIndex()\n\n    // generate index if not present\n\n    if (index === null) {\n      const indices = []\n\n      const position = geometry.getAttribute('position')\n\n      if (position !== undefined) {\n        for (let i = 0; i < position.count; i++) {\n          indices.push(i)\n        }\n\n        geometry.setIndex(indices)\n        index = geometry.getIndex()\n      } else {\n        console.error(\n          'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.',\n        )\n        return geometry\n      }\n    }\n\n    //\n\n    const numberOfTriangles = index.count - 2\n    const newIndices = []\n\n    if (drawMode === TriangleFanDrawMode) {\n      // gl.TRIANGLE_FAN\n\n      for (let i = 1; i <= numberOfTriangles; i++) {\n        newIndices.push(index.getX(0))\n        newIndices.push(index.getX(i))\n        newIndices.push(index.getX(i + 1))\n      }\n    } else {\n      // gl.TRIANGLE_STRIP\n\n      for (let i = 0; i < numberOfTriangles; i++) {\n        if (i % 2 === 0) {\n          newIndices.push(index.getX(i))\n          newIndices.push(index.getX(i + 1))\n          newIndices.push(index.getX(i + 2))\n        } else {\n          newIndices.push(index.getX(i + 2))\n          newIndices.push(index.getX(i + 1))\n          newIndices.push(index.getX(i))\n        }\n      }\n    }\n\n    if (newIndices.length / 3 !== numberOfTriangles) {\n      console.error(\n        'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.',\n      )\n    }\n\n    // build final geometry\n\n    const newGeometry = geometry.clone()\n    newGeometry.setIndex(newIndices)\n\n    return newGeometry\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n   *\n   * Creates BufferGeometries from primitives.\n   *\n   * @param {Array<GLTF.Primitive>} primitives\n   * @return {Promise<Array<BufferGeometry>>}\n   */\n  GLTFParser.prototype.loadGeometries = function (primitives) {\n    const parser = this\n    const extensions = this.extensions\n    const cache = this.primitiveCache\n\n    const createDracoPrimitive = primitive =>\n      extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]\n        .decodePrimitive(primitive, parser)\n        .then(geometry => addPrimitiveAttributes(geometry, primitive, parser))\n\n    const pending = []\n\n    for (let i = 0, il = primitives.length; i < il; i++) {\n      const primitive = primitives[i]\n      const cacheKey = createPrimitiveKey(primitive)\n\n      // See if we've already created this geometry\n      const cached = cache[cacheKey]\n\n      if (cached) {\n        // Use the cached geometry if it exists\n        pending.push(cached.promise)\n      } else {\n        let geometryPromise\n\n        if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n          // Use DRACO geometry if available\n          geometryPromise = createDracoPrimitive(primitive)\n        } else {\n          // Otherwise create a new geometry\n          geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser)\n        }\n\n        // Cache this geometry\n        cache[cacheKey] = { primitive: primitive, promise: geometryPromise }\n\n        pending.push(geometryPromise)\n      }\n    }\n\n    return Promise.all(pending)\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n   * @param {number} meshIndex\n   * @return {Promise<Group|Mesh|SkinnedMesh>}\n   */\n  GLTFParser.prototype.loadMesh = function (meshIndex) {\n    const parser = this\n    const { json } = this\n\n    const meshDef = json.meshes[meshIndex]\n    const primitives = meshDef.primitives\n\n    const pending = []\n\n    for (let i = 0, il = primitives.length; i < il; i++) {\n      const material =\n        primitives[i].material === undefined\n          ? createDefaultMaterial(this.cache)\n          : this.getDependency('material', primitives[i].material)\n\n      pending.push(material)\n    }\n\n    pending.push(parser.loadGeometries(primitives))\n\n    return Promise.all(pending).then(function (results) {\n      const materials = results.slice(0, results.length - 1)\n      const geometries = results[results.length - 1]\n\n      const meshes = []\n\n      for (let i = 0, il = geometries.length; i < il; i++) {\n        const geometry = geometries[i]\n        const primitive = primitives[i]\n\n        // 1. create Mesh\n\n        let mesh\n\n        const material = materials[i]\n\n        if (\n          primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n          primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n          primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n          primitive.mode === undefined\n        ) {\n          // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n          mesh =\n            meshDef.isSkinnedMesh === true\n              ? new SkinnedMesh(geometry, material)\n              : new Mesh(geometry, material)\n\n          if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n            // we normalize floating point skin weight array to fix malformed assets (see #15319)\n            // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n            mesh.normalizeSkinWeights()\n          }\n\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode)\n          } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode)\n          }\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n          mesh = new LineSegments(geometry, material)\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n          mesh = new Line(geometry, material)\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n          mesh = new LineLoop(geometry, material)\n        } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n          mesh = new Points(geometry, material)\n        } else {\n          throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode)\n        }\n\n        if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n          updateMorphTargets(mesh, meshDef)\n        }\n\n        mesh.name = meshDef.name || 'mesh_' + meshIndex\n\n        if (geometries.length > 1) mesh.name += '_' + i\n\n        assignExtrasToUserData(mesh, meshDef)\n\n        parser.assignFinalMaterial(mesh)\n\n        meshes.push(mesh)\n      }\n\n      if (meshes.length === 1) {\n        return meshes[0]\n      }\n\n      const group = new Group()\n\n      for (let i = 0, il = meshes.length; i < il; i++) {\n        group.add(meshes[i])\n      }\n\n      return group\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n   * @param {number} cameraIndex\n   * @return {Promise<THREE.Camera>}\n   */\n  GLTFParser.prototype.loadCamera = function (cameraIndex) {\n    let camera\n    const cameraDef = this.json.cameras[cameraIndex]\n    const params = cameraDef[cameraDef.type]\n\n    if (!params) {\n      console.warn('THREE.GLTFLoader: Missing camera parameters.')\n      return\n    }\n\n    if (cameraDef.type === 'perspective') {\n      camera = new PerspectiveCamera(\n        MathUtils.radToDeg(params.yfov),\n        params.aspectRatio || 1,\n        params.znear || 1,\n        params.zfar || 2e6,\n      )\n    } else if (cameraDef.type === 'orthographic') {\n      camera = new OrthographicCamera(\n        -params.xmag,\n        params.xmag,\n        params.ymag,\n        -params.ymag,\n        params.znear,\n        params.zfar,\n      )\n    }\n\n    if (cameraDef.name) camera.name = cameraDef.name\n\n    assignExtrasToUserData(camera, cameraDef)\n\n    return Promise.resolve(camera)\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n   * @param {number} skinIndex\n   * @return {Promise<Object>}\n   */\n  GLTFParser.prototype.loadSkin = function (skinIndex) {\n    const skinDef = this.json.skins[skinIndex]\n\n    const skinEntry = { joints: skinDef.joints }\n\n    if (skinDef.inverseBindMatrices === undefined) {\n      return Promise.resolve(skinEntry)\n    }\n\n    return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n      skinEntry.inverseBindMatrices = accessor\n\n      return skinEntry\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n   * @param {number} animationIndex\n   * @return {Promise<AnimationClip>}\n   */\n  GLTFParser.prototype.loadAnimation = function (animationIndex) {\n    const json = this.json\n\n    const animationDef = json.animations[animationIndex]\n\n    const pendingNodes = []\n    const pendingInputAccessors = []\n    const pendingOutputAccessors = []\n    const pendingSamplers = []\n    const pendingTargets = []\n\n    for (let i = 0, il = animationDef.channels.length; i < il; i++) {\n      const channel = animationDef.channels[i]\n      const sampler = animationDef.samplers[channel.sampler]\n      const target = channel.target\n      const name = target.node !== undefined ? target.node : target.id // NOTE: target.id is deprecated.\n      const input =\n        animationDef.parameters !== undefined\n          ? animationDef.parameters[sampler.input]\n          : sampler.input\n\n      const output =\n        animationDef.parameters !== undefined\n          ? animationDef.parameters[sampler.output]\n          : sampler.output\n\n      pendingNodes.push(this.getDependency('node', name))\n      pendingInputAccessors.push(this.getDependency('accessor', input))\n      pendingOutputAccessors.push(this.getDependency('accessor', output))\n      pendingSamplers.push(sampler)\n      pendingTargets.push(target)\n    }\n\n    return Promise.all([\n      Promise.all(pendingNodes),\n      Promise.all(pendingInputAccessors),\n      Promise.all(pendingOutputAccessors),\n      Promise.all(pendingSamplers),\n      Promise.all(pendingTargets),\n    ]).then(function (dependencies) {\n      const nodes = dependencies[0]\n      const inputAccessors = dependencies[1]\n      const outputAccessors = dependencies[2]\n      const samplers = dependencies[3]\n      const targets = dependencies[4]\n\n      const tracks = []\n\n      for (let i = 0, il = nodes.length; i < il; i++) {\n        const node = nodes[i]\n        const inputAccessor = inputAccessors[i]\n        const outputAccessor = outputAccessors[i]\n        const sampler = samplers[i]\n        const target = targets[i]\n\n        if (node === undefined) {\n          continue\n        }\n\n        node.updateMatrix()\n        node.matrixAutoUpdate = true\n\n        let TypedKeyframeTrack\n\n        switch (PATH_PROPERTIES[target.path]) {\n          case PATH_PROPERTIES.weights:\n            TypedKeyframeTrack = NumberKeyframeTrack\n            break\n\n          case PATH_PROPERTIES.rotation:\n            TypedKeyframeTrack = QuaternionKeyframeTrack\n            break\n\n          case PATH_PROPERTIES.position:\n          case PATH_PROPERTIES.scale:\n          default:\n            TypedKeyframeTrack = VectorKeyframeTrack\n            break\n        }\n\n        const targetName = node.name ? node.name : node.uuid\n\n        const interpolation =\n          sampler.interpolation !== undefined\n            ? INTERPOLATION[sampler.interpolation]\n            : InterpolateLinear\n\n        const targetNames = []\n\n        if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n          // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n          node.traverse(function (object) {\n            if (object.isMesh === true && object.morphTargetInfluences) {\n              targetNames.push(object.name ? object.name : object.uuid)\n            }\n          })\n        } else {\n          targetNames.push(targetName)\n        }\n\n        const outputArray = outputAccessor.array\n\n        if (outputAccessor.normalized) {\n          let scale\n\n          if (outputArray.constructor === Int8Array) {\n            scale = 1 / 127\n          } else if (outputArray.constructor === Uint8Array) {\n            scale = 1 / 255\n          } else if (outputArray.constructor == Int16Array) {\n            scale = 1 / 32767\n          } else if (outputArray.constructor === Uint16Array) {\n            scale = 1 / 65535\n          } else {\n            throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.')\n          }\n\n          const scaled = new Float32Array(outputArray.length)\n\n          for (let j = 0, jl = outputArray.length; j < jl; j++) {\n            scaled[j] = outputArray[j] * scale\n          }\n\n          outputArray = scaled\n        }\n\n        for (let j = 0, jl = targetNames.length; j < jl; j++) {\n          const track = new TypedKeyframeTrack(\n            targetNames[j] + '.' + PATH_PROPERTIES[target.path],\n            inputAccessor.array,\n            outputArray,\n            interpolation,\n          )\n\n          // Override interpolation with custom factory method.\n          if (sampler.interpolation === 'CUBICSPLINE') {\n            track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n              // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n              // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n              // must be divided by three to get the interpolant's sampleSize argument.\n\n              return new GLTFCubicSplineInterpolant(\n                this.times,\n                this.values,\n                this.getValueSize() / 3,\n                result,\n              )\n            }\n\n            // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n            track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true\n          }\n\n          tracks.push(track)\n        }\n      }\n\n      const name = animationDef.name ? animationDef.name : 'animation_' + animationIndex\n\n      return new AnimationClip(name, undefined, tracks)\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n   * @param {number} nodeIndex\n   * @return {Promise<Object3D>}\n   */\n  GLTFParser.prototype.loadNode = function (nodeIndex) {\n    const { extensions, json } = this\n    const parser = this\n\n    const meshReferences = json.meshReferences\n    const meshUses = json.meshUses\n\n    const nodeDef = json.nodes[nodeIndex]\n\n    return (function () {\n      const pending = []\n\n      if (nodeDef.mesh !== undefined) {\n        pending.push(\n          parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n            let node\n\n            if (meshReferences[nodeDef.mesh] > 1) {\n              const instanceNum = meshUses[nodeDef.mesh]++\n\n              node = mesh.clone()\n              node.name += '_instance_' + instanceNum\n            } else {\n              node = mesh\n            }\n\n            // if weights are provided on the node, override weights on the mesh.\n            if (nodeDef.weights !== undefined) {\n              node.traverse(function (o) {\n                if (!o.isMesh) return\n\n                for (let i = 0, il = nodeDef.weights.length; i < il; i++) {\n                  o.morphTargetInfluences[i] = nodeDef.weights[i]\n                }\n              })\n            }\n\n            return node\n          }),\n        )\n      }\n\n      if (nodeDef.camera !== undefined) {\n        pending.push(parser.getDependency('camera', nodeDef.camera))\n      }\n\n      if (\n        nodeDef.extensions &&\n        nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] &&\n        nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined\n      ) {\n        pending.push(\n          parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light),\n        )\n      }\n\n      return Promise.all(pending)\n    })().then(function (objects) {\n      let node\n\n      // .isBone isn't in glTF spec. See .markDefs\n      if (nodeDef.isBone === true) {\n        node = new Bone()\n      } else if (objects.length > 1) {\n        node = new Group()\n      } else if (objects.length === 1) {\n        node = objects[0]\n      } else {\n        node = new Object3D()\n      }\n\n      if (node !== objects[0]) {\n        for (let i = 0, il = objects.length; i < il; i++) {\n          node.add(objects[i])\n        }\n      }\n\n      if (nodeDef.name) {\n        node.userData.name = nodeDef.name\n        node.name = PropertyBinding.sanitizeNodeName(nodeDef.name)\n      }\n\n      assignExtrasToUserData(node, nodeDef)\n\n      if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef)\n\n      if (nodeDef.matrix !== undefined) {\n        const matrix = new Matrix4()\n        matrix.fromArray(nodeDef.matrix)\n        node.applyMatrix4(matrix)\n      } else {\n        if (nodeDef.translation !== undefined) {\n          node.position.fromArray(nodeDef.translation)\n        }\n\n        if (nodeDef.rotation !== undefined) {\n          node.quaternion.fromArray(nodeDef.rotation)\n        }\n\n        if (nodeDef.scale !== undefined) {\n          node.scale.fromArray(nodeDef.scale)\n        }\n      }\n\n      parser.associations.set(node, { type: 'nodes', index: nodeIndex })\n\n      return node\n    })\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n   * @param {number} sceneIndex\n   * @return {Promise<Group>}\n   */\n  GLTFParser.prototype.loadScene = (function () {\n    // scene node hierachy builder\n\n    function buildNodeHierachy(nodeId, parentObject, json, parser) {\n      const nodeDef = json.nodes[nodeId]\n\n      return parser\n        .getDependency('node', nodeId)\n        .then(function (node) {\n          if (nodeDef.skin === undefined) return node\n\n          // build skeleton here as well\n\n          let skinEntry\n\n          return parser\n            .getDependency('skin', nodeDef.skin)\n            .then(function (skin) {\n              skinEntry = skin\n\n              const pendingJoints = []\n\n              for (let i = 0, il = skinEntry.joints.length; i < il; i++) {\n                pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]))\n              }\n\n              return Promise.all(pendingJoints)\n            })\n            .then(function (jointNodes) {\n              node.traverse(function (mesh) {\n                if (!mesh.isMesh) return\n\n                const bones = []\n                const boneInverses = []\n\n                for (let j = 0, jl = jointNodes.length; j < jl; j++) {\n                  const jointNode = jointNodes[j]\n\n                  if (jointNode) {\n                    bones.push(jointNode)\n\n                    const mat = new Matrix4()\n\n                    if (skinEntry.inverseBindMatrices !== undefined) {\n                      mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16)\n                    }\n\n                    boneInverses.push(mat)\n                  } else {\n                    console.warn(\n                      'THREE.GLTFLoader: Joint \"%s\" could not be found.',\n                      skinEntry.joints[j],\n                    )\n                  }\n                }\n\n                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld)\n              })\n\n              return node\n            })\n        })\n        .then(function (node) {\n          // build node hierachy\n\n          parentObject.add(node)\n\n          const pending = []\n\n          if (nodeDef.children) {\n            const children = nodeDef.children\n\n            for (let i = 0, il = children.length; i < il; i++) {\n              const child = children[i]\n              pending.push(buildNodeHierachy(child, node, json, parser))\n            }\n          }\n\n          return Promise.all(pending)\n        })\n    }\n\n    return function loadScene(sceneIndex) {\n      const { extensions, json } = this\n      const sceneDef = json.scenes[sceneIndex]\n      const parser = this\n\n      // Loader returns Group, not Scene.\n      // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n      const scene = new Group()\n      if (sceneDef.name) {\n        scene.name = sceneDef.name\n      }\n\n      assignExtrasToUserData(scene, sceneDef)\n\n      if (sceneDef.extensions) {\n        addUnknownExtensionsToUserData(extensions, scene, sceneDef)\n      }\n\n      const nodeIds = sceneDef.nodes || []\n\n      const pending = []\n\n      for (let i = 0, il = nodeIds.length; i < il; i++) {\n        pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser))\n      }\n\n      return Promise.all(pending).then(function () {\n        return scene\n      })\n    }\n  })()\n\n  return GLTFLoader\n})()\n\nexport { GLTFLoader }\n"],"names":["LineBasicMaterial","parameters","Material","call","this","type","color","Color","linewidth","linecap","linejoin","morphTargets","setValues","MeshStandardMaterial","defines","STANDARD","roughness","metalness","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","Vector2","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","alphaMap","envMap","envMapIntensity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphNormals","vertexTangents","MeshPhysicalMaterial","PHYSICAL","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","reflectivity","sheen","transmission","transmissionMap","PointsMaterial","size","sizeAttenuation","Bone","Object3D","LightShadow","camera","bias","normalBias","radius","mapSize","mapPass","matrix","Matrix4","autoUpdate","needsUpdate","_frustum","Frustum","_frameExtents","_viewportCount","_viewports","Vector4","DirectionalLightShadow","OrthographicCamera","DirectionalLight","intensity","Light","position","copy","DefaultUp","updateMatrix","target","shadow","PointLightShadow","PerspectiveCamera","_cubeDirections","Vector3","_cubeUps","PointLight","distance","decay","Object","defineProperty","get","Math","PI","set","power","undefined","SpotLightShadow","SpotLight","angle","penumbra","prototype","create","constructor","isLineBasicMaterial","source","isMeshStandardMaterial","isMeshPhysicalMaterial","isPointsMaterial","assign","isBone","_projScreenMatrix","_lightPositionWorld","_lookTarget","getViewportCount","getFrustum","updateMatrices","light","shadowCamera","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","setFromMatrixPosition","matrixWorld","lookAt","updateMatrixWorld","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromProjectionMatrix","multiply","getViewport","viewportIndex","getFrameExtents","clone","toJSON","object","x","y","toArray","isDirectionalLightShadow","isDirectionalLight","isPointLightShadow","add","up","makeTranslation","z","isPointLight","isSpotLightShadow","fov","MathUtils","RAD2DEG","aspect","width","height","far","updateProjectionMatrix","isSpotLight","loading","FileLoader","manager","Loader","ImageBitmapLoader","options","premultiplyAlpha","load","url","onLoad","onProgress","onError","path","resolveURL","scope","cached","Cache","itemStart","setTimeout","itemEnd","push","dataUriRegexResult","match","request","mimeType","isBase64","data","decodeURIComponent","atob","response","responseType","toLowerCase","view","Uint8Array","length","i","charCodeAt","Blob","buffer","parser","DOMParser","parseFromString","JSON","parse","error","itemError","XMLHttpRequest","open","addEventListener","event","callbacks","status","il","callback","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setResponseType","value","setWithCredentials","setMimeType","isImageBitmapLoader","setOptions","fetch","then","res","blob","createImageBitmap","imageBitmap","catch","e","LoaderUtils","array","TextDecoder","decode","s","String","fromCharCode","escape","index","lastIndexOf","substr","_start","_end","_inverseMatrix","_ray","Ray","_sphere","Sphere","Line","geometry","material","mode","BufferGeometry","updateMorphTargets","LineLoop","isLine","computeLineDistances","isBufferGeometry","positionAttribute","attributes","lineDistances","l","count","fromBufferAttribute","distanceTo","setAttribute","Float32BufferAttribute","isGeometry","vertices","raycast","raycaster","intersects","threshold","params","boundingSphere","computeBoundingSphere","applyMatrix4","ray","intersectsSphere","getInverse","localThreshold","scale","localThresholdSq","vStart","vEnd","interSegment","interRay","step","isLineSegments","positions","indices","a","b","fromArray","distanceSqToSegment","origin","near","point","face","faceIndex","nbVertices","morphAttributes","keys","morphAttribute","morphTargetInfluences","morphTargetDictionary","m","ml","name","isLineLoop","LineSegments","_position","Points","testPoint","rayPointDistanceSq","distanceSqToPoint","intersectPoint","closestPointToPoint","distanceToRay","sqrt","isPoints","_offsetMatrix","_identityMatrix","Skeleton","bones","boneInverses","slice","boneMatrices","Float32Array","frame","calculateInverses","SkinnedMesh","Mesh","bindMode","bindMatrix","bindMatrixInverse","CanvasTexture","canvas","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","Texture","inverse","pose","bone","parent","decompose","quaternion","update","boneTexture","getBoneByName","dispose","isSkinnedMesh","skeleton","bind","normalizeSkinWeights","vector","skinWeight","getX","getY","getZ","w","getW","manhattanLength","Infinity","multiplyScalar","setXYZW","force","boneTransform","basePosition","skinIndex","weight","getComponent","boneIndex","addScaledVector","isCanvasTexture","GLTFLoader","dracoLoader","ddsLoader","pluginCallbacks","register","GLTFMaterialsClearcoatExtension","GLTFRegistry","objects","key","[object Object]","resourcePath","_onError","loader","setPath","crossOrigin","gltf","indexOf","splice","content","extensions","plugins","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","asset","version","Error","GLTFParser","fileLoader","plugin","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","setExtensions","setPlugins","KHR_MATERIALS_CLEARCOAT","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","range","spot","innerConeAngle","outerConeAngle","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","baseColorTexture","assignTexture","all","extendMaterialParams","materialIndex","materials","clearcoatFactor","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughnessTexture","clearcoatNormalTexture","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","decodeDracoFile","attribute","extendTexture","texture","transform","offset","rotation","repeat","texCoord","copySampleValue_","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipmapNearestFilter","9985","LinearMipmapNearestFilter","9986","NearestMipmapLinearFilter","9987","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","RGBAFormat","image/jpeg","RGBFormat","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","mesh","meshDef","targetNames","createPrimitiveKey","primitiveDef","dracoExtension","attributesKey","sort","createAttributesKey","cache","associations","Map","primitiveCache","navigator","userAgent","textureLoader","TextureLoader","setCrossOrigin","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","setIndex","box","Box3","max","min","targets","maxDisplacement","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","newGeometry","removeAll","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinLength","joints","nodeIndex","nodeLength","nodeDef","skin","_invokeOne","func","_invokeAll","unshift","cacheKey","dependency","loadScene","loadNode","ext","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","sparse","pendingBufferViews","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibSlice","floor","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","createObjectURL","getHandler","revokeObjectURL","flipY","sampler","samplers","mapName","mapDef","isCompressedTexture","gltfReference","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","uuid","pointsMaterial","lineMaterial","cachedMaterial","vertexColors","flatShading","uv2","uv","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","loadGeometries","primitives","createDracoPrimitive","promise","geometryPromise","meshIndex","depthTest","FrontSide","results","geometries","TriangleStripDrawMode","group","Group","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","matrixAutoUpdate","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","PropertyBinding","sanitizeNodeName","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","jointNode","mat","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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"}
{"version":3,"file":"Frustum.js","sources":["../../node_modules/three/src/objects/Group.js","../../node_modules/three/src/math/Frustum.js"],"sourcesContent":["import { Object3D } from '../core/Object3D.js';\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n\nexport { Group };\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\nconst _sphere = new Sphere();\nconst _vector = new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n}\n\n\nexport { Frustum };\n"],"names":["Group","Object3D","call","this","type","prototype","Object","assign","create","constructor","isGroup","_sphere","Sphere","_vector","Vector3","Frustum","[object Object]","p0","p1","p2","p3","p4","p5","planes","undefined","Plane","copy","frustum","i","m","me","elements","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","normalize","object","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","matrixWorld","intersectsSphere","sprite","center","set","radius","sphere","negRadius","distanceToPoint","box","plane","x","normal","max","min","y","z","point"],"mappings":"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"}
import"./MathUtils.js";import"./constants.js";import"./Color.js";import"./Quaternion.js";import{V as t}from"./Object3D.js";import{B as e,F as o,V as s}from"./BufferGeometry.js";import{G as r}from"./Geometry.js";function i(t,e,o,s,i,a){r.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:o,phiSegments:s,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new n(t,e,o,s,i,a)),this.mergeVertices()}function n(r,i,n,a,h,p){e.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:r,outerRadius:i,thetaSegments:n,phiSegments:a,thetaStart:h,thetaLength:p},r=r||.5,i=i||1,h=void 0!==h?h:0,p=void 0!==p?p:2*Math.PI,n=void 0!==n?Math.max(3,n):8;const m=[],u=[],c=[],y=[];let f=r;const l=(i-r)/(a=void 0!==a?Math.max(1,a):1),j=new t,d=new s;for(let t=0;t<=a;t++){for(let t=0;t<=n;t++){const e=h+t/n*p;j.x=f*Math.cos(e),j.y=f*Math.sin(e),u.push(j.x,j.y,j.z),c.push(0,0,1),d.x=(j.x/i+1)/2,d.y=(j.y/i+1)/2,y.push(d.x,d.y)}f+=l}for(let t=0;t<a;t++){const e=t*(n+1);for(let t=0;t<n;t++){const o=t+e,s=o,r=o+n+1,i=o+n+2,a=o+1;m.push(s,r,a),m.push(r,i,a)}}this.setIndex(m),this.setAttribute("position",new o(u,3)),this.setAttribute("normal",new o(c,3)),this.setAttribute("uv",new o(y,2))}i.prototype=Object.create(r.prototype),i.prototype.constructor=i,n.prototype=Object.create(e.prototype),n.prototype.constructor=n;export{n as RingBufferGeometry,i as RingGeometry};
//# sourceMappingURL=RingGeometry.js.map

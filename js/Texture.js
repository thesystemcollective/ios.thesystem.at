import{E as t,M as i}from"./MathUtils.js";import{bn as e,ai as s,b as a,ah as r,t as n,am as o,w as h,au as p,r as m}from"./constants.js";import{a as u}from"./Object3D.js";import{V as c}from"./BufferGeometry.js";let l;const f=function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{void 0===l&&(l=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),l.width=t.width,l.height=t.height;const e=l.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=l}return i.width>2048||i.height>2048?i.toDataURL("image/jpeg",.6):i.toDataURL("image/png")};let d=0;function y(t,e,s,r,l,f,g,x,w,v){Object.defineProperty(this,"id",{value:d++}),this.uuid=i.generateUUID(),this.name="",this.image=void 0!==t?t:y.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:y.DEFAULT_MAPPING,this.wrapS=void 0!==s?s:a,this.wrapT=void 0!==r?r:a,this.magFilter=void 0!==l?l:n,this.minFilter=void 0!==f?f:o,this.anisotropy=void 0!==w?w:1,this.format=void 0!==g?g:h,this.internalFormat=null,this.type=void 0!==x?x:p,this.offset=new c(0,0),this.repeat=new c(1,1),this.center=new c(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new u,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==v?v:m,this.version=0,this.onUpdate=null}y.DEFAULT_IMAGE=void 0,y.DEFAULT_MAPPING=e,y.prototype=Object.assign(Object.create(t.prototype),{constructor:y,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const s={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const a=this.image;if(void 0===a.uuid&&(a.uuid=i.generateUUID()),!e&&void 0===t.images[a.uuid]){let i;if(Array.isArray(a)){i=[];for(let t=0,e=a.length;t<e;t++)i.push(f(a[t]))}else i=f(a);t.images[a.uuid]={uuid:a.uuid,url:i}}s.image=a.uuid}return e||(t.textures[this.uuid]=s),s},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==e)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case r:t.x=t.x-Math.floor(t.x);break;case a:t.x=t.x<0?0:1;break;case s:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case r:t.y=t.y-Math.floor(t.y);break;case a:t.y=t.y<0?0:1;break;case s:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(y.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});export{y as T};
//# sourceMappingURL=Texture.js.map

import{M as t,E as i}from"./MathUtils.js";import{Q as s}from"./Quaternion.js";const e=new r,n=new s;function r(t=0,i=0,s=0){this.x=t,this.y=i,this.z=s}Object.assign(r.prototype,{isVector3:!0,set:function(t,i,s){return void 0===s&&(s=this.z),this.x=t,this.y=i,this.z=s,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,i){return void 0!==i?this.addVectors(t,i):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this},addScaledVector:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this},sub:function(t,i){return void 0!==i?this.subVectors(t,i):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this},multiply:function(t,i){return void 0!==i?this.multiplyVectors(t,i):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this},applyEuler:function(t){return!t||t.isEuler,this.applyQuaternion(n.setFromEuler(t))},applyAxisAngle:function(t,i){return this.applyQuaternion(n.setFromAxisAngle(t,i))},applyMatrix3:function(t){const i=this.x,s=this.y,e=this.z,n=t.elements;return this.x=n[0]*i+n[3]*s+n[6]*e,this.y=n[1]*i+n[4]*s+n[7]*e,this.z=n[2]*i+n[5]*s+n[8]*e,this},applyNormalMatrix:function(t){return this.applyMatrix3(t).normalize()},applyMatrix4:function(t){const i=this.x,s=this.y,e=this.z,n=t.elements,r=1/(n[3]*i+n[7]*s+n[11]*e+n[15]);return this.x=(n[0]*i+n[4]*s+n[8]*e+n[12])*r,this.y=(n[1]*i+n[5]*s+n[9]*e+n[13])*r,this.z=(n[2]*i+n[6]*s+n[10]*e+n[14])*r,this},applyQuaternion:function(t){const i=this.x,s=this.y,e=this.z,n=t.x,r=t.y,h=t.z,o=t.w,a=o*i+r*e-h*s,u=o*s+h*i-n*e,c=o*e+n*s-r*i,l=-n*i-r*s-h*e;return this.x=a*o+l*-n+u*-h-c*-r,this.y=u*o+l*-r+c*-n-a*-h,this.z=c*o+l*-h+a*-r-u*-n,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){const i=this.x,s=this.y,e=this.z,n=t.elements;return this.x=n[0]*i+n[4]*s+n[8]*e,this.y=n[1]*i+n[5]*s+n[9]*e,this.z=n[2]*i+n[6]*s+n[10]*e,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this},clampScalar:function(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this},clampLength:function(t,i){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(i,s)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this},lerpVectors:function(t,i,s){return this.x=t.x+(i.x-t.x)*s,this.y=t.y+(i.y-t.y)*s,this.z=t.z+(i.z-t.z)*s,this},cross:function(t,i){return void 0!==i?this.crossVectors(t,i):this.crossVectors(this,t)},crossVectors:function(t,i){const s=t.x,e=t.y,n=t.z,r=i.x,h=i.y,o=i.z;return this.x=e*o-n*h,this.y=n*r-s*o,this.z=s*h-e*r,this},projectOnVector:function(t){const i=t.lengthSq();if(0===i)return this.set(0,0,0);const s=t.dot(this)/i;return this.copy(t).multiplyScalar(s)},projectOnPlane:function(t){return e.copy(this).projectOnVector(t),this.sub(e)},reflect:function(t){return this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(i){const s=Math.sqrt(this.lengthSq()*i.lengthSq());if(0===s)return Math.PI/2;const e=this.dot(i)/s;return Math.acos(t.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){const i=this.x-t.x,s=this.y-t.y,e=this.z-t.z;return i*i+s*s+e*e},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,i,s){const e=Math.sin(i)*t;return this.x=e*Math.sin(s),this.y=Math.cos(i)*t,this.z=e*Math.cos(s),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,i,s){return this.x=t*Math.sin(i),this.y=s,this.z=t*Math.cos(i),this},setFromMatrixPosition:function(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this},setFromMatrixScale:function(t){const i=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=s,this.z=e,this},setFromMatrixColumn:function(t,i){return this.fromArray(t.elements,4*i)},setFromMatrix3Column:function(t,i){return this.fromArray(t.elements,3*i)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,i){return void 0===i&&(i=0),this.x=t[i],this.y=t[i+1],this.z=t[i+2],this},toArray:function(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t},fromBufferAttribute:function(t,i,s){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const h=new r,o=new f,a=new r(0,0,0),u=new r(1,1,1),c=new r,l=new r,m=new r;function f(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}Object.assign(f.prototype,{isMatrix4:!0,set:function(t,i,s,e,n,r,h,o,a,u,c,l,m,f,x,d){const y=this.elements;return y[0]=t,y[4]=i,y[8]=s,y[12]=e,y[1]=n,y[5]=r,y[9]=h,y[13]=o,y[2]=a,y[6]=u,y[10]=c,y[14]=l,y[3]=m,y[7]=f,y[11]=x,y[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new f).fromArray(this.elements)},copy:function(t){const i=this.elements,s=t.elements;return i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3],i[4]=s[4],i[5]=s[5],i[6]=s[6],i[7]=s[7],i[8]=s[8],i[9]=s[9],i[10]=s[10],i[11]=s[11],i[12]=s[12],i[13]=s[13],i[14]=s[14],i[15]=s[15],this},copyPosition:function(t){const i=this.elements,s=t.elements;return i[12]=s[12],i[13]=s[13],i[14]=s[14],this},extractBasis:function(t,i,s){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this},makeBasis:function(t,i,s){return this.set(t.x,i.x,s.x,0,t.y,i.y,s.y,0,t.z,i.z,s.z,0,0,0,0,1),this},extractRotation:function(t){const i=this.elements,s=t.elements,e=1/h.setFromMatrixColumn(t,0).length(),n=1/h.setFromMatrixColumn(t,1).length(),r=1/h.setFromMatrixColumn(t,2).length();return i[0]=s[0]*e,i[1]=s[1]*e,i[2]=s[2]*e,i[3]=0,i[4]=s[4]*n,i[5]=s[5]*n,i[6]=s[6]*n,i[7]=0,i[8]=s[8]*r,i[9]=s[9]*r,i[10]=s[10]*r,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this},makeRotationFromEuler:function(t){!t||t.isEuler;const i=this.elements,s=t.x,e=t.y,n=t.z,r=Math.cos(s),h=Math.sin(s),o=Math.cos(e),a=Math.sin(e),u=Math.cos(n),c=Math.sin(n);if("XYZ"===t.order){const t=r*u,s=r*c,e=h*u,n=h*c;i[0]=o*u,i[4]=-o*c,i[8]=a,i[1]=s+e*a,i[5]=t-n*a,i[9]=-h*o,i[2]=n-t*a,i[6]=e+s*a,i[10]=r*o}else if("YXZ"===t.order){const t=o*u,s=o*c,e=a*u,n=a*c;i[0]=t+n*h,i[4]=e*h-s,i[8]=r*a,i[1]=r*c,i[5]=r*u,i[9]=-h,i[2]=s*h-e,i[6]=n+t*h,i[10]=r*o}else if("ZXY"===t.order){const t=o*u,s=o*c,e=a*u,n=a*c;i[0]=t-n*h,i[4]=-r*c,i[8]=e+s*h,i[1]=s+e*h,i[5]=r*u,i[9]=n-t*h,i[2]=-r*a,i[6]=h,i[10]=r*o}else if("ZYX"===t.order){const t=r*u,s=r*c,e=h*u,n=h*c;i[0]=o*u,i[4]=e*a-s,i[8]=t*a+n,i[1]=o*c,i[5]=n*a+t,i[9]=s*a-e,i[2]=-a,i[6]=h*o,i[10]=r*o}else if("YZX"===t.order){const t=r*o,s=r*a,e=h*o,n=h*a;i[0]=o*u,i[4]=n-t*c,i[8]=e*c+s,i[1]=c,i[5]=r*u,i[9]=-h*u,i[2]=-a*u,i[6]=s*c+e,i[10]=t-n*c}else if("XZY"===t.order){const t=r*o,s=r*a,e=h*o,n=h*a;i[0]=o*u,i[4]=-c,i[8]=a*u,i[1]=t*c+n,i[5]=r*u,i[9]=s*c-e,i[2]=e*c-s,i[6]=h*u,i[10]=n*c+t}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(a,t,u)},lookAt:function(t,i,s){const e=this.elements;return m.subVectors(t,i),0===m.lengthSq()&&(m.z=1),m.normalize(),c.crossVectors(s,m),0===c.lengthSq()&&(1===Math.abs(s.z)?m.x+=1e-4:m.z+=1e-4,m.normalize(),c.crossVectors(s,m)),c.normalize(),l.crossVectors(m,c),e[0]=c.x,e[4]=l.x,e[8]=m.x,e[1]=c.y,e[5]=l.y,e[9]=m.y,e[2]=c.z,e[6]=l.z,e[10]=m.z,this},multiply:function(t,i){return void 0!==i?this.multiplyMatrices(t,i):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,i){const s=t.elements,e=i.elements,n=this.elements,r=s[0],h=s[4],o=s[8],a=s[12],u=s[1],c=s[5],l=s[9],m=s[13],f=s[2],x=s[6],d=s[10],y=s[14],p=s[3],M=s[7],z=s[11],g=s[15],_=e[0],b=e[4],v=e[8],w=e[12],A=e[1],O=e[5],C=e[9],F=e[13],S=e[2],k=e[6],W=e[10],j=e[14],q=e[3],V=e[7],Z=e[11],X=e[15];return n[0]=r*_+h*A+o*S+a*q,n[4]=r*b+h*O+o*k+a*V,n[8]=r*v+h*C+o*W+a*Z,n[12]=r*w+h*F+o*j+a*X,n[1]=u*_+c*A+l*S+m*q,n[5]=u*b+c*O+l*k+m*V,n[9]=u*v+c*C+l*W+m*Z,n[13]=u*w+c*F+l*j+m*X,n[2]=f*_+x*A+d*S+y*q,n[6]=f*b+x*O+d*k+y*V,n[10]=f*v+x*C+d*W+y*Z,n[14]=f*w+x*F+d*j+y*X,n[3]=p*_+M*A+z*S+g*q,n[7]=p*b+M*O+z*k+g*V,n[11]=p*v+M*C+z*W+g*Z,n[15]=p*w+M*F+z*j+g*X,this},multiplyScalar:function(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this},determinant:function(){const t=this.elements,i=t[0],s=t[4],e=t[8],n=t[12],r=t[1],h=t[5],o=t[9],a=t[13],u=t[2],c=t[6],l=t[10],m=t[14];return t[3]*(+n*o*c-e*a*c-n*h*l+s*a*l+e*h*m-s*o*m)+t[7]*(+i*o*m-i*a*l+n*r*l-e*r*m+e*a*u-n*o*u)+t[11]*(+i*a*c-i*h*m-n*r*c+s*r*m+n*h*u-s*a*u)+t[15]*(-e*h*u-i*o*c+i*h*l+e*r*c-s*r*l+s*o*u)},transpose:function(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this},setPosition:function(t,i,s){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=i,e[14]=s),this},getInverse:function(t,i){const s=this.elements,e=t.elements,n=e[0],r=e[1],h=e[2],o=e[3],a=e[4],u=e[5],c=e[6],l=e[7],m=e[8],f=e[9],x=e[10],d=e[11],y=e[12],p=e[13],M=e[14],z=e[15],g=f*M*l-p*x*l+p*c*d-u*M*d-f*c*z+u*x*z,_=y*x*l-m*M*l-y*c*d+a*M*d+m*c*z-a*x*z,b=m*p*l-y*f*l+y*u*d-a*p*d-m*u*z+a*f*z,v=y*f*c-m*p*c-y*u*x+a*p*x+m*u*M-a*f*M,w=n*g+r*_+h*b+o*v;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/w;return s[0]=g*A,s[1]=(p*x*o-f*M*o-p*h*d+r*M*d+f*h*z-r*x*z)*A,s[2]=(u*M*o-p*c*o+p*h*l-r*M*l-u*h*z+r*c*z)*A,s[3]=(f*c*o-u*x*o-f*h*l+r*x*l+u*h*d-r*c*d)*A,s[4]=_*A,s[5]=(m*M*o-y*x*o+y*h*d-n*M*d-m*h*z+n*x*z)*A,s[6]=(y*c*o-a*M*o-y*h*l+n*M*l+a*h*z-n*c*z)*A,s[7]=(a*x*o-m*c*o+m*h*l-n*x*l-a*h*d+n*c*d)*A,s[8]=b*A,s[9]=(y*f*o-m*p*o-y*r*d+n*p*d+m*r*z-n*f*z)*A,s[10]=(a*p*o-y*u*o+y*r*l-n*p*l-a*r*z+n*u*z)*A,s[11]=(m*u*o-a*f*o-m*r*l+n*f*l+a*r*d-n*u*d)*A,s[12]=v*A,s[13]=(m*p*h-y*f*h+y*r*x-n*p*x-m*r*M+n*f*M)*A,s[14]=(y*u*h-a*p*h-y*r*c+n*p*c+a*r*M-n*u*M)*A,s[15]=(a*f*h-m*u*h+m*r*c-n*f*c-a*r*x+n*u*x)*A,this},scale:function(t){const i=this.elements,s=t.x,e=t.y,n=t.z;return i[0]*=s,i[4]*=e,i[8]*=n,i[1]*=s,i[5]*=e,i[9]*=n,i[2]*=s,i[6]*=e,i[10]*=n,i[3]*=s,i[7]*=e,i[11]*=n,this},getMaxScaleOnAxis:function(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,s,e))},makeTranslation:function(t,i,s){return this.set(1,0,0,t,0,1,0,i,0,0,1,s,0,0,0,1),this},makeRotationX:function(t){const i=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,i,-s,0,0,s,i,0,0,0,0,1),this},makeRotationY:function(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,0,s,0,0,1,0,0,-s,0,i,0,0,0,0,1),this},makeRotationZ:function(t){const i=Math.cos(t),s=Math.sin(t);return this.set(i,-s,0,0,s,i,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,i){const s=Math.cos(i),e=Math.sin(i),n=1-s,r=t.x,h=t.y,o=t.z,a=n*r,u=n*h;return this.set(a*r+s,a*h-e*o,a*o+e*h,0,a*h+e*o,u*h+s,u*o-e*r,0,a*o-e*h,u*o+e*r,n*o*o+s,0,0,0,0,1),this},makeScale:function(t,i,s){return this.set(t,0,0,0,0,i,0,0,0,0,s,0,0,0,0,1),this},makeShear:function(t,i,s){return this.set(1,i,s,0,t,1,s,0,t,i,1,0,0,0,0,1),this},compose:function(t,i,s){const e=this.elements,n=i._x,r=i._y,h=i._z,o=i._w,a=n+n,u=r+r,c=h+h,l=n*a,m=n*u,f=n*c,x=r*u,d=r*c,y=h*c,p=o*a,M=o*u,z=o*c,g=s.x,_=s.y,b=s.z;return e[0]=(1-(x+y))*g,e[1]=(m+z)*g,e[2]=(f-M)*g,e[3]=0,e[4]=(m-z)*_,e[5]=(1-(l+y))*_,e[6]=(d+p)*_,e[7]=0,e[8]=(f+M)*b,e[9]=(d-p)*b,e[10]=(1-(l+x))*b,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this},decompose:function(t,i,s){const e=this.elements;let n=h.set(e[0],e[1],e[2]).length(),r=h.set(e[4],e[5],e[6]).length(),a=h.set(e[8],e[9],e[10]).length();this.determinant()<0&&(n=-n),t.x=e[12],t.y=e[13],t.z=e[14],o.copy(this);const u=1/n,c=1/r,l=1/a;return o.elements[0]*=u,o.elements[1]*=u,o.elements[2]*=u,o.elements[4]*=c,o.elements[5]*=c,o.elements[6]*=c,o.elements[8]*=l,o.elements[9]*=l,o.elements[10]*=l,i.setFromRotationMatrix(o),s.x=n,s.y=r,s.z=a,this},makePerspective:function(t,i,s,e,n,r){const h=this.elements,o=2*n/(i-t),a=2*n/(s-e),u=(i+t)/(i-t),c=(s+e)/(s-e),l=-(r+n)/(r-n),m=-2*r*n/(r-n);return h[0]=o,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=a,h[9]=c,h[13]=0,h[2]=0,h[6]=0,h[10]=l,h[14]=m,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this},makeOrthographic:function(t,i,s,e,n,r){const h=this.elements,o=1/(i-t),a=1/(s-e),u=1/(r-n),c=(i+t)*o,l=(s+e)*a,m=(r+n)*u;return h[0]=2*o,h[4]=0,h[8]=0,h[12]=-c,h[1]=0,h[5]=2*a,h[9]=0,h[13]=-l,h[2]=0,h[6]=0,h[10]=-2*u,h[14]=-m,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this},equals:function(t){const i=this.elements,s=t.elements;for(let t=0;t<16;t++)if(i[t]!==s[t])return!1;return!0},fromArray:function(t,i){void 0===i&&(i=0);for(let s=0;s<16;s++)this.elements[s]=t[s+i];return this},toArray:function(t,i){void 0===t&&(t=[]),void 0===i&&(i=0);const s=this.elements;return t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=s[3],t[i+4]=s[4],t[i+5]=s[5],t[i+6]=s[6],t[i+7]=s[7],t[i+8]=s[8],t[i+9]=s[9],t[i+10]=s[10],t[i+11]=s[11],t[i+12]=s[12],t[i+13]=s[13],t[i+14]=s[14],t[i+15]=s[15],t}});const x=new f,d=new s;function y(t=0,i=0,s=0,e=y.DefaultOrder){this._x=t,this._y=i,this._z=s,this._order=e}function p(){this.mask=1}function M(){this.elements=[1,0,0,0,1,0,0,0,1]}y.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],y.DefaultOrder="XYZ",Object.defineProperties(y.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}}),Object.assign(y.prototype,{isEuler:!0,set:function(t,i,s,e){return this._x=t,this._y=i,this._z=s,this._order=e||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(i,s,e){const n=t.clamp,r=i.elements,h=r[0],o=r[4],a=r[8],u=r[1],c=r[5],l=r[9],m=r[2],f=r[6],x=r[10];switch(s=s||this._order){case"XYZ":this._y=Math.asin(n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,x),this._z=Math.atan2(-o,h)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-n(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,x),this._z=Math.atan2(u,c)):(this._y=Math.atan2(-m,h),this._z=0);break;case"ZXY":this._x=Math.asin(n(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-m,x),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(u,h));break;case"ZYX":this._y=Math.asin(-n(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(f,x),this._z=Math.atan2(u,h)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-m,h)):(this._x=0,this._y=Math.atan2(a,x));break;case"XZY":this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,h)):(this._x=Math.atan2(-l,x),this._y=0)}return this._order=s,!1!==e&&this._onChangeCallback(),this},setFromQuaternion:function(t,i,s){return x.makeRotationFromQuaternion(t),this.setFromRotationMatrix(x,i,s)},setFromVector3:function(t,i){return this.set(t.x,t.y,t.z,i||this._order)},reorder:function(t){return d.setFromEuler(this),this.setFromQuaternion(d,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new r(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}}),Object.assign(p.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}}),Object.assign(M.prototype,{isMatrix3:!0,set:function(t,i,s,e,n,r,h,o,a){const u=this.elements;return u[0]=t,u[1]=e,u[2]=h,u[3]=i,u[4]=n,u[5]=o,u[6]=s,u[7]=r,u[8]=a,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){const i=this.elements,s=t.elements;return i[0]=s[0],i[1]=s[1],i[2]=s[2],i[3]=s[3],i[4]=s[4],i[5]=s[5],i[6]=s[6],i[7]=s[7],i[8]=s[8],this},extractBasis:function(t,i,s){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this},setFromMatrix4:function(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,i){const s=t.elements,e=i.elements,n=this.elements,r=s[0],h=s[3],o=s[6],a=s[1],u=s[4],c=s[7],l=s[2],m=s[5],f=s[8],x=e[0],d=e[3],y=e[6],p=e[1],M=e[4],z=e[7],g=e[2],_=e[5],b=e[8];return n[0]=r*x+h*p+o*g,n[3]=r*d+h*M+o*_,n[6]=r*y+h*z+o*b,n[1]=a*x+u*p+c*g,n[4]=a*d+u*M+c*_,n[7]=a*y+u*z+c*b,n[2]=l*x+m*p+f*g,n[5]=l*d+m*M+f*_,n[8]=l*y+m*z+f*b,this},multiplyScalar:function(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this},determinant:function(){const t=this.elements,i=t[0],s=t[1],e=t[2],n=t[3],r=t[4],h=t[5],o=t[6],a=t[7],u=t[8];return i*r*u-i*h*a-s*n*u+s*h*o+e*n*a-e*r*o},getInverse:function(t,i){const s=t.elements,e=this.elements,n=s[0],r=s[1],h=s[2],o=s[3],a=s[4],u=s[5],c=s[6],l=s[7],m=s[8],f=m*a-u*l,x=u*c-m*o,d=l*o-a*c,y=n*f+r*x+h*d;if(0===y)return this.set(0,0,0,0,0,0,0,0,0);const p=1/y;return e[0]=f*p,e[1]=(h*l-m*r)*p,e[2]=(u*r-h*a)*p,e[3]=x*p,e[4]=(m*n-h*c)*p,e[5]=(h*o-u*n)*p,e[6]=d*p,e[7]=(r*c-l*n)*p,e[8]=(a*n-r*o)*p,this},transpose:function(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this},setUvTransform:function(t,i,s,e,n,r,h){const o=Math.cos(n),a=Math.sin(n);this.set(s*o,s*a,-s*(o*r+a*h)+r+t,-e*a,e*o,-e*(-a*r+o*h)+h+i,0,0,1)},scale:function(t,i){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=i,s[4]*=i,s[7]*=i,this},rotate:function(t){const i=Math.cos(t),s=Math.sin(t),e=this.elements,n=e[0],r=e[3],h=e[6],o=e[1],a=e[4],u=e[7];return e[0]=i*n+s*o,e[3]=i*r+s*a,e[6]=i*h+s*u,e[1]=-s*n+i*o,e[4]=-s*r+i*a,e[7]=-s*h+i*u,this},translate:function(t,i){const s=this.elements;return s[0]+=t*s[2],s[3]+=t*s[5],s[6]+=t*s[8],s[1]+=i*s[2],s[4]+=i*s[5],s[7]+=i*s[8],this},equals:function(t){const i=this.elements,s=t.elements;for(let t=0;t<9;t++)if(i[t]!==s[t])return!1;return!0},fromArray:function(t,i){void 0===i&&(i=0);for(let s=0;s<9;s++)this.elements[s]=t[s+i];return this},toArray:function(t,i){void 0===t&&(t=[]),void 0===i&&(i=0);const s=this.elements;return t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=s[3],t[i+4]=s[4],t[i+5]=s[5],t[i+6]=s[6],t[i+7]=s[7],t[i+8]=s[8],t}});let z=0;const g=new r,_=new s,b=new f,v=new r,w=new r,A=new r,O=new s,C=new r(1,0,0),F=new r(0,1,0),S=new r(0,0,1),k={type:"added"},W={type:"removed"};function j(){Object.defineProperty(this,"id",{value:z++}),this.uuid=t.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=j.DefaultUp.clone();const i=new r,e=new y,n=new s,h=new r(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:i},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:h},modelViewMatrix:{value:new f},normalMatrix:{value:new M}}),this.matrix=new f,this.matrixWorld=new f,this.matrixAutoUpdate=j.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new p,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}j.DefaultUp=new r(0,1,0),j.DefaultMatrixAutoUpdate=!0,j.prototype=Object.assign(Object.create(i.prototype),{constructor:j,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,i){this.quaternion.setFromAxisAngle(t,i)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,i){return _.setFromAxisAngle(t,i),this.quaternion.multiply(_),this},rotateOnWorldAxis:function(t,i){return _.setFromAxisAngle(t,i),this.quaternion.premultiply(_),this},rotateX:function(t){return this.rotateOnAxis(C,t)},rotateY:function(t){return this.rotateOnAxis(F,t)},rotateZ:function(t){return this.rotateOnAxis(S,t)},translateOnAxis:function(t,i){return g.copy(t).applyQuaternion(this.quaternion),this.position.add(g.multiplyScalar(i)),this},translateX:function(t){return this.translateOnAxis(C,t)},translateY:function(t){return this.translateOnAxis(F,t)},translateZ:function(t){return this.translateOnAxis(S,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(b.getInverse(this.matrixWorld))},lookAt:function(t,i,s){t.isVector3?v.copy(t):v.set(t,i,s);const e=this.parent;this.updateWorldMatrix(!0,!1),w.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?b.lookAt(w,v,this.up):b.lookAt(v,w,this.up),this.quaternion.setFromRotationMatrix(b),e&&(b.extractRotation(e.matrixWorld),_.setFromRotationMatrix(b),this.quaternion.premultiply(_.inverse()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(k)),this},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const i=this.children.indexOf(t);return-1!==i&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(W)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),b.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),b.multiply(t.parent.matrixWorld)),t.applyMatrix4(b),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,i){if(this[t]===i)return this;for(let s=0,e=this.children.length;s<e;s++){const e=this.children[s].getObjectByProperty(t,i);if(void 0!==e)return e}},getWorldPosition:function(t){return void 0===t&&(t=new r),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(t=new s),this.updateMatrixWorld(!0),this.matrixWorld.decompose(w,t,A),t},getWorldScale:function(t){return void 0===t&&(t=new r),this.updateMatrixWorld(!0),this.matrixWorld.decompose(w,O,t),t},getWorldDirection:function(t){void 0===t&&(t=new r),this.updateMatrixWorld(!0);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].traverseVisible(t)},traverseAncestors:function(t){const i=this.parent;null!==i&&(t(i),i.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let s=0,e=i.length;s<e;s++)i[s].updateMatrixWorld(t)},updateWorldMatrix:function(t,i){const s=this.parent;if(!0===t&&null!==s&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===i){const t=this.children;for(let i=0,s=t.length;i<s;i++)t[i].updateWorldMatrix(!1,!0)}},toJSON:function(t){const i=void 0===t||"string"==typeof t,s={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},s.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const e={};function n(i,s){return void 0===i[s.uuid]&&(i[s.uuid]=s.toJSON(t)),s.uuid}if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),!0===this.castShadow&&(e.castShadow=!0),!0===this.receiveShadow&&(e.receiveShadow=!0),!1===this.visible&&(e.visible=!1),!1===this.frustumCulled&&(e.frustumCulled=!1),0!==this.renderOrder&&(e.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),e.layers=this.layers.mask,e.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(e.matrixAutoUpdate=!1),this.isInstancedMesh&&(e.type="InstancedMesh",e.count=this.count,e.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){e.geometry=n(t.geometries,this.geometry);const i=this.geometry.parameters;if(void 0!==i&&void 0!==i.shapes){const s=i.shapes;if(Array.isArray(s))for(let i=0,e=s.length;i<e;i++){const e=s[i];n(t.shapes,e)}else n(t.shapes,s)}}if(void 0!==this.material)if(Array.isArray(this.material)){const i=[];for(let s=0,e=this.material.length;s<e;s++)i.push(n(t.materials,this.material[s]));e.material=i}else e.material=n(t.materials,this.material);if(this.children.length>0){e.children=[];for(let i=0;i<this.children.length;i++)e.children.push(this.children[i].toJSON(t).object)}if(i){const i=r(t.geometries),e=r(t.materials),n=r(t.textures),h=r(t.images),o=r(t.shapes);i.length>0&&(s.geometries=i),e.length>0&&(s.materials=e),n.length>0&&(s.textures=n),h.length>0&&(s.images=h),o.length>0&&(s.shapes=o)}return s.object=e,s;function r(t){const i=[];for(const s in t){const e=t[s];delete e.metadata,i.push(e)}return i}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,i){if(void 0===i&&(i=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===i)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}});export{f as M,j as O,r as V,M as a};
//# sourceMappingURL=Object3D.js.map

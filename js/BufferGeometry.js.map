{"version":3,"file":"BufferGeometry.js","sources":["../../node_modules/three/src/math/Vector2.js","../../node_modules/three/src/math/Box3.js","../../node_modules/three/src/math/Sphere.js","../../node_modules/three/src/core/Face3.js","../../node_modules/three/src/math/Vector4.js","../../node_modules/three/src/core/BufferAttribute.js","../../node_modules/three/src/core/DirectGeometry.js","../../node_modules/three/src/utils.js","../../node_modules/three/src/core/BufferGeometry.js"],"sourcesContent":["function Vector2( x = 0, y = 0 ) {\n\n\tthis.x = x;\n\tthis.y = y;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t},\n\n\trandom: function () {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector2 };\n","import { Vector3 } from './Vector3.js';\n\nconst _points = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\nconst _vector = new Vector3();\n\nconst _box = new Box3();\n\n// triangle centered vertices\n\nconst _v0 = new Vector3();\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = new Vector3();\nconst _f1 = new Vector3();\nconst _f2 = new Vector3();\n\nconst _center = new Vector3();\nconst _extents = new Vector3();\nconst _triangleNormal = new Vector3();\nconst _testAxis = new Vector3();\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function ( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: function ( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tgetBoundingSphere: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n","import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _box = new Box3();\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\treturn ( this.radius < 0 );\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n\nexport { Sphere };\n","import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( let i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( let i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Face3 };\n","function Vector4( x = 0, y = 0, z = 0, w = 1 ) {\n\n\tthis.x = x;\n\tthis.y = y;\n\tthis.z = z;\n\tthis.w = w;\n\n}\n\nObject.defineProperties( Vector4.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.z = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.w = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t},\n\n\trandom: function () {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector4 };\n","import { Vector4 } from '../math/Vector4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nimport { StaticDrawUsage } from '../constants.js';\n\nconst _vector = new Vector3();\nconst _vector2 = new Vector2();\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n//\n\nexport {\n\tFloat64BufferAttribute,\n\tFloat32BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n","import { Vector2 } from '../math/Vector2.js';\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tconst groups = [];\n\n\t\tlet group, i;\n\t\tlet materialIndex = undefined;\n\n\t\tconst faces = geometry.faces;\n\n\t\tfor ( i = 0; i < faces.length; i ++ ) {\n\n\t\t\tconst face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tconst faces = geometry.faces;\n\t\tconst vertices = geometry.vertices;\n\t\tconst faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tconst hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tconst hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tconst morphTargets = geometry.morphTargets;\n\t\tconst morphTargetsLength = morphTargets.length;\n\n\t\tlet morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( let i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tconst morphNormals = geometry.morphNormals;\n\t\tconst morphNormalsLength = morphNormals.length;\n\n\t\tlet morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( let i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tconst skinIndices = geometry.skinIndices;\n\t\tconst skinWeights = geometry.skinWeights;\n\n\t\tconst hasSkinIndices = skinIndices.length === vertices.length;\n\t\tconst hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < faces.length; i ++ ) {\n\n\t\t\tconst face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tconst vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tconst normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tconst vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tconst color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tconst vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tconst vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( let j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( let j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tconst morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { DirectGeometry };\n","function arrayMin( array ) {\n\n\tif ( array.length === 0 ) return Infinity;\n\n\tlet min = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] < min ) min = array[ i ];\n\n\t}\n\n\treturn min;\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nexport { arrayMin, arrayMax };\n","import { Vector3 } from '../math/Vector3.js';\nimport { Box3 } from '../math/Box3.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { BufferAttribute, Float32BufferAttribute, Uint16BufferAttribute, Uint32BufferAttribute } from './BufferAttribute.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { DirectGeometry } from './DirectGeometry.js';\nimport { Object3D } from './Object3D.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { arrayMax } from '../utils.js';\n\nlet _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nconst _m1 = new Matrix4();\nconst _obj = new Object3D();\nconst _offset = new Vector3();\nconst _box = new Box3();\nconst _boxMorphTargets = new Box3();\nconst _vector = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tconst positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tconst colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tconst lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tlet geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tlet direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tconst attribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tconst attribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tconst attribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tconst positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tconst normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tconst colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tconst uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tconst uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( const name in geometry.morphTargets ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( let i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\n\t\t\t\tconst attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tconst skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tconst skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.min, _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.max, _box.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( _box.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( _box.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( normals, i );\n\n\t\t\t_vector.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { BufferGeometry };\n"],"names":["Vector2","x","y","this","Object","defineProperties","prototype","width","get","set","value","height","assign","isVector2","setScalar","scalar","setX","setY","setComponent","index","Error","getComponent","clone","constructor","copy","v","add","w","undefined","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","random","_points","Vector3","_vector","_box","Box3","_v0","_v1","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","Infinity","satForAxes","axes","v0","extents","i","j","r","z","p0","p1","p2","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","l","setFromBufferAttribute","count","getZ","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","object","expandByObject","box","isEmpty","getCenter","target","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","applyMatrix4","matrixWorld","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","radius","intersectsPlane","plane","normal","constant","intersectsTriangle","triangle","crossVectors","distanceToPoint","getBoundingSphere","intersect","matrix","translate","Sphere","Face3","color","materialIndex","isVector3","vertexNormals","Array","isArray","isColor","Color","vertexColors","Vector4","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","source","isVector4","setZ","setW","setAxisAngleFromQuaternion","q","acos","setAxisAngleFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","_vector2","BufferAttribute","itemSize","normalized","TypeError","name","usage","StaticDrawUsage","updateRange","version","Int8BufferAttribute","call","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","DirectGeometry","vertices","normals","colors","uvs","uvs2","groups","morphTargets","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","arrayMax","defineProperty","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","g","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","applyNormalMatrix","transformDirection","setXYZW","onUpload","callback","toJSON","type","slice","create","computeGroups","group","faces","face","start","push","fromGeometry","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","data","position","morphNormals","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","_bufferGeometryId","_m1","Matrix4","_obj","Object3D","_offset","_boxMorphTargets","BufferGeometry","uuid","MathUtils","generateUUID","attributes","morphAttributes","morphTargetsRelative","drawRange","userData","EventDispatcher","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","normalMatrix","Matrix3","getNormalMatrix","tangent","computeBoundingSphere","rotateX","makeRotationX","rotateY","makeRotationY","rotateZ","makeRotationZ","makeTranslation","scale","makeScale","lookAt","updateMatrix","isPoints","isLine","positions","lineDistances","isMesh","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","uv","lineDistancesNeedUpdate","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","isNaN","jl","computeFaceNormals","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","vA","vB","vC","normalizeNormals","merge","key","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","indices","array2","geometry2","newAttribute","morphArray","metadata","generator","keys","parameters","attributeData","hasMorphAttributes","attributeArray","JSON","parse","stringify","dispose","dispatchEvent"],"mappings":"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"}
{"version":3,"file":"MeshBasicMaterial.js","sources":["../../node_modules/three/src/materials/Material.js","../../node_modules/three/src/materials/MeshBasicMaterial.js"],"sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nexport { Material };\n","import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n\nexport { MeshBasicMaterial };\n"],"names":["materialId","Material","Object","defineProperty","this","value","uuid","MathUtils","generateUUID","name","type","fog","blending","NormalBlending","side","FrontSide","flatShading","vertexColors","opacity","transparent","blendSrc","SrcAlphaFactor","blendDst","OneMinusSrcAlphaFactor","blendEquation","AddEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","LessEqualDepth","depthTest","depthWrite","stencilWriteMask","stencilFunc","AlwaysStencilFunc","stencilRef","stencilFuncMask","stencilFail","KeepStencilOp","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","visible","toneMapped","userData","version","MeshBasicMaterial","parameters","call","color","Color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","prototype","assign","create","EventDispatcher","constructor","isMaterial","onBeforeCompile","customProgramCacheKey","toString","values","undefined","key","newValue","FlatShading","currentValue","isColor","set","isVector3","copy","toJSON","meta","isRoot","textures","images","data","metadata","generator","extractFromCache","cache","push","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","morphNormals","JSON","stringify","length","clone","source","srcPlanes","dstPlanes","n","Array","i","parse","dispose","dispatchEvent","isMeshBasicMaterial"],"mappings":"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"}
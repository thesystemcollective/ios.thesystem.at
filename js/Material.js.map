{"version":3,"file":"Material.js","sources":["../../node_modules/three/src/materials/Material.js"],"sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nexport { Material };\n"],"names":["materialId","Material","Object","defineProperty","this","value","uuid","MathUtils","generateUUID","name","type","fog","blending","NormalBlending","side","FrontSide","flatShading","vertexColors","opacity","transparent","blendSrc","SrcAlphaFactor","blendDst","OneMinusSrcAlphaFactor","blendEquation","AddEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","LessEqualDepth","depthTest","depthWrite","stencilWriteMask","stencilFunc","AlwaysStencilFunc","stencilRef","stencilFuncMask","stencilFail","KeepStencilOp","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","visible","toneMapped","userData","version","prototype","assign","create","EventDispatcher","constructor","isMaterial","onBeforeCompile","customProgramCacheKey","toString","setValues","values","undefined","key","newValue","FlatShading","currentValue","isColor","set","isVector3","copy","toJSON","meta","isRoot","textures","images","data","metadata","generator","extractFromCache","cache","push","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","map","matcap","alphaMap","lightMap","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","refractionRatio","combine","envMapIntensity","gradientMap","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","JSON","stringify","length","clone","source","srcPlanes","dstPlanes","n","Array","i","parse","dispose","dispatchEvent"],"mappings":"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"}
{"version":3,"file":"WebGLRenderer.js","sources":["../../node_modules/three/src/textures/DataTexture.js","../../node_modules/three/src/renderers/shaders/UniformsLib.js","../../node_modules/three/src/renderers/webgl/WebGLAnimation.js","../../node_modules/three/src/renderers/webgl/WebGLAttributes.js","../../node_modules/three/src/geometries/BoxGeometry.js","../../node_modules/three/src/geometries/PlaneGeometry.js","../../node_modules/three/src/renderers/shaders/UniformsUtils.js","../../node_modules/three/src/materials/ShaderMaterial.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/common.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/packing.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/transmissionmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/transmissionmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/background_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/background_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/cube_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/cube_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/depth_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/depth_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/equirect_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/equirect_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/normal_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/normal_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/points_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/points_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/shadow_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/shadow_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/sprite_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/sprite_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib.js","../../node_modules/three/src/renderers/webgl/WebGLBackground.js","../../node_modules/three/src/renderers/webgl/WebGLBindingStates.js","../../node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js","../../node_modules/three/src/renderers/webgl/WebGLCapabilities.js","../../node_modules/three/src/renderers/webgl/WebGLClipping.js","../../node_modules/three/src/renderers/webgl/WebGLExtensions.js","../../node_modules/three/src/renderers/webgl/WebGLGeometries.js","../../node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","../../node_modules/three/src/renderers/webgl/WebGLInfo.js","../../node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","../../node_modules/three/src/renderers/webgl/WebGLObjects.js","../../node_modules/three/src/textures/CubeTexture.js","../../node_modules/three/src/textures/DataTexture2DArray.js","../../node_modules/three/src/textures/DataTexture3D.js","../../node_modules/three/src/renderers/webgl/WebGLUniforms.js","../../node_modules/three/src/renderers/webgl/WebGLShader.js","../../node_modules/three/src/renderers/webgl/WebGLProgram.js","../../node_modules/three/src/renderers/webgl/WebGLPrograms.js","../../node_modules/three/src/renderers/webgl/WebGLProperties.js","../../node_modules/three/src/renderers/webgl/WebGLRenderLists.js","../../node_modules/three/src/renderers/webgl/WebGLLights.js","../../node_modules/three/src/renderers/webgl/WebGLRenderStates.js","../../node_modules/three/src/renderers/WebGLRenderTarget.js","../../node_modules/three/src/materials/MeshDepthMaterial.js","../../node_modules/three/src/materials/MeshDistanceMaterial.js","../../node_modules/three/src/renderers/webgl/WebGLShadowMap.js","../../node_modules/three/src/renderers/shaders/ShaderLib/vsm_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/vsm_frag.glsl.js","../../node_modules/three/src/renderers/webgl/WebGLState.js","../../node_modules/three/src/renderers/webgl/WebGLTextures.js","../../node_modules/three/src/renderers/webgl/WebGLUtils.js","../../node_modules/three/src/cameras/ArrayCamera.js","../../node_modules/three/src/renderers/webxr/WebXRController.js","../../node_modules/three/src/renderers/webxr/WebXRManager.js","../../node_modules/three/src/renderers/webgl/WebGLMaterials.js","../../node_modules/three/src/renderers/WebGLRenderer.js"],"sourcesContent":["import { Texture } from './Texture.js';\nimport { NearestFilter } from '../constants.js';\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n\nexport { DataTexture };\n","import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nexport { UniformsLib };\n","function WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n","function WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n","import { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n// BoxGeometry\n\nclass BoxGeometry extends Geometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n// BoxBufferGeometry\n\nclass BoxBufferGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\nexport { BoxGeometry, BoxBufferGeometry };\n","import { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tconst width_half = width / 2;\n\tconst height_half = height / 2;\n\n\tconst gridX = Math.floor( widthSegments ) || 1;\n\tconst gridY = Math.floor( heightSegments ) || 1;\n\n\tconst gridX1 = gridX + 1;\n\tconst gridY1 = gridY + 1;\n\n\tconst segment_width = width / gridX;\n\tconst segment_height = height / gridY;\n\n\t// buffers\n\n\tconst indices = [];\n\tconst vertices = [];\n\tconst normals = [];\n\tconst uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tconst y = iy * segment_height - height_half;\n\n\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tconst a = ix + gridX1 * iy;\n\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\nexport { PlaneGeometry, PlaneBufferGeometry };\n","/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n","import { Material } from './Material.js';\nimport { cloneUniforms } from '../renderers/shaders/UniformsUtils.js';\n\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = Object.assign( {}, source.extensions );\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tconst data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( const name in this.uniforms ) {\n\n\t\tconst uniform = this.uniforms[ name ];\n\t\tconst value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tconst extensions = {};\n\n\tfor ( const key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n\nexport { ShaderMaterial };\n","export default /* glsl */`\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n","export default /* glsl */`\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;\n","import alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\nimport common from './ShaderChunk/common.glsl.js';\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\nimport encodings_fragment from './ShaderChunk/encodings_fragment.glsl.js';\nimport encodings_pars_fragment from './ShaderChunk/encodings_pars_fragment.glsl.js';\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\nimport lightmap_fragment from './ShaderChunk/lightmap_fragment.glsl.js';\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\nimport lights_lambert_vertex from './ShaderChunk/lights_lambert_vertex.glsl.js';\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\nimport packing from './ShaderChunk/packing.glsl.js';\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\nimport transmissionmap_fragment from './ShaderChunk/transmissionmap_fragment.glsl.js';\nimport transmissionmap_pars_fragment from './ShaderChunk/transmissionmap_pars_fragment.glsl.js';\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\nimport uv2_pars_fragment from './ShaderChunk/uv2_pars_fragment.glsl.js';\nimport uv2_pars_vertex from './ShaderChunk/uv2_pars_vertex.glsl.js';\nimport uv2_vertex from './ShaderChunk/uv2_vertex.glsl.js';\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\n\nimport background_frag from './ShaderLib/background_frag.glsl.js';\nimport background_vert from './ShaderLib/background_vert.glsl.js';\nimport cube_frag from './ShaderLib/cube_frag.glsl.js';\nimport cube_vert from './ShaderLib/cube_vert.glsl.js';\nimport depth_frag from './ShaderLib/depth_frag.glsl.js';\nimport depth_vert from './ShaderLib/depth_vert.glsl.js';\nimport distanceRGBA_frag from './ShaderLib/distanceRGBA_frag.glsl.js';\nimport distanceRGBA_vert from './ShaderLib/distanceRGBA_vert.glsl.js';\nimport equirect_frag from './ShaderLib/equirect_frag.glsl.js';\nimport equirect_vert from './ShaderLib/equirect_vert.glsl.js';\nimport linedashed_frag from './ShaderLib/linedashed_frag.glsl.js';\nimport linedashed_vert from './ShaderLib/linedashed_vert.glsl.js';\nimport meshbasic_frag from './ShaderLib/meshbasic_frag.glsl.js';\nimport meshbasic_vert from './ShaderLib/meshbasic_vert.glsl.js';\nimport meshlambert_frag from './ShaderLib/meshlambert_frag.glsl.js';\nimport meshlambert_vert from './ShaderLib/meshlambert_vert.glsl.js';\nimport meshmatcap_frag from './ShaderLib/meshmatcap_frag.glsl.js';\nimport meshmatcap_vert from './ShaderLib/meshmatcap_vert.glsl.js';\nimport meshtoon_frag from './ShaderLib/meshtoon_frag.glsl.js';\nimport meshtoon_vert from './ShaderLib/meshtoon_vert.glsl.js';\nimport meshphong_frag from './ShaderLib/meshphong_frag.glsl.js';\nimport meshphong_vert from './ShaderLib/meshphong_vert.glsl.js';\nimport meshphysical_frag from './ShaderLib/meshphysical_frag.glsl.js';\nimport meshphysical_vert from './ShaderLib/meshphysical_vert.glsl.js';\nimport normal_frag from './ShaderLib/normal_frag.glsl.js';\nimport normal_vert from './ShaderLib/normal_vert.glsl.js';\nimport points_frag from './ShaderLib/points_frag.glsl.js';\nimport points_vert from './ShaderLib/points_vert.glsl.js';\nimport shadow_frag from './ShaderLib/shadow_frag.glsl.js';\nimport shadow_vert from './ShaderLib/shadow_vert.glsl.js';\nimport sprite_frag from './ShaderLib/sprite_frag.glsl.js';\nimport sprite_vert from './ShaderLib/sprite_vert.glsl.js';\n\nexport const ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformed = vec3( position );\n`;\n","export default /* glsl */`\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n`;\n","export default /* glsl */`\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4's roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n`;\n","export default /* glsl */`\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\n\n// These shader functions convert between the UV coordinates of a single face of\n// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n// sampling a textureCube (not generally normalized).\n\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\n\n// RH coordinate system; PMREM face-indexing convention\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x); // pos x\n    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y); // pos y\n    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z); // pos z\n    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x); // neg x\n    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y); // neg y\n    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z); // neg z\n    }\n    return 0.5 * (uv + 1.0);\n}\n\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n\n// These defines must match with PMREMGenerator\n\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\n\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);// 1.16 = 1.79^0.25\n  }\n  return mip;\n}\n\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif\n`;\n","export default /* glsl */`\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n`;\n","export default /* glsl */`\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n`;\n","export default /* glsl */`\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t}  else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t  // Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tfogDepth = - mvPosition.z;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n`;\n","export default /* glsl */`\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n`;\n","export default /* glsl */`\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n`;\n","export default /* glsl */`\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n`;\n","export default /* glsl */`\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tmat3 tsn = mat3( S, T, N );\n\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n`;\n","export default /* glsl */`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\n","export default /* glsl */`\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSIONMAP\n\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSIONMAP\n\n\tuniform sampler2D transmissionMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n`;\n","export default /* glsl */`\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n`;\n","export default /* glsl */`\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n`;\n","export default /* glsl */`\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n","export default /* glsl */`\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transmission model\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n","import { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxBufferGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneBufferGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tconst texture = background.isWebGLCubeRenderTarget ? background.texture : background;\n\n\t\t\tboxMesh.material.uniforms.envMap.value = texture;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== texture.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n","﻿function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {}\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) return true;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n\nexport { WebGLBindingStates };\n","function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n","function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n","import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping() {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tlet nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n","function WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn !! extension;\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( ! this.has( name ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n","import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = new WeakMap();\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\t\tconst buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( const name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tconst attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tlet buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n","function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n","function WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n","function numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n","function WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n","import { Texture } from './Texture.js';\nimport { CubeReflectionMapping, RGBFormat } from '../constants.js';\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n\nexport { CubeTexture };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nexport { DataTexture2DArray };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\nexport { DataTexture3D };\n","/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { DataTexture3D } from '../../textures/DataTexture3D.js';\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tlet n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tlet cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n","function WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n","import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, EquirectangularRefractionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}[\\s]+?#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\tif ( parameters.precision === \"highp\" ) {\n\n\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {\n\n\t\t// GLSL 3.0 conversion\n\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\t'out highp vec4 pc_fragColor;',\n\t\t\t'#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = prefixVertex + vertexShader;\n\tconst fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n","import { BackSide, DoubleSide, CubeUVRefractionMapping, CubeUVReflectionMapping, LinearEncoding, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping } from '../../constants.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\n\nfunction WebGLPrograms( renderer, extensions, capabilities, bindingStates ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\",\n\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatMap\", \"clearcoatRoughnessMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\"sheen\", \"transmissionMap\"\n\t];\n\n\tfunction allocateBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = material.envMap || environment;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial,\n\t\t\tisShaderMaterial: material.isShaderMaterial,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === undefined ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n","function WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n","function painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tconst scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tlists.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tconst cameras = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists, WebGLRenderList };\n","import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights() {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n","import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState() {\n\n\tconst lights = new WebGLLights();\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tconst scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\trenderStates.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { WebGLRenderTarget };\n","import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n\nexport { MeshDepthMaterial };\n","import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n\nexport { MeshDistanceMaterial };\n","import { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, LinearFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport vsm_frag from '../shaders/ShaderLib/vsm_frag.glsl.js';\nimport vsm_vert from '../shaders/ShaderLib/vsm_vert.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t\"position\",\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat, stencilBuffer: false };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat, stencilBuffer: false };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizonal pass\n\n\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n","export default /* glsl */`\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n    #ifdef HORIZONAL_PASS\n\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n    #else\n\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n\n    #endif\n\n  }\n\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n  float std_dev = sqrt( squared_mean - mean * mean );\n\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n","import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = null;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4();\n\tconst currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n","import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBFormat, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping } from '../../constants.js';\nimport { MathUtils } from '../../math/MathUtils.js';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t} else {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isDataTexture3D ) textureType = _gl.TEXTURE_3D;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nexport { WebGLTextures };\n","import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, RGBA_BPTC_Format } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n","import { PerspectiveCamera } from './PerspectiveCamera.js';\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n\nexport { ArrayCamera };\n","import { Group } from '../../objects/Group.js';\n\nfunction WebXRController() {\n\n\tthis._targetRay = null;\n\tthis._grip = null;\n\tthis._hand = null;\n\n}\n\nObject.assign( WebXRController.prototype, {\n\n\tconstructor: WebXRController,\n\n\tgetHandSpace: function () {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = [];\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t\tif ( window.XRHand ) {\n\n\t\t\t\tfor ( let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i ++ ) {\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tlet joint = new Group();\n\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\tthis._hand.joints.push( joint );\n\t\t\t\t\t// ??\n\t\t\t\t\tthis._hand.add( joint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t},\n\n\tgetTargetRaySpace: function () {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t},\n\n\tgetGripSpace: function () {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function ( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource ) {\n\n\t\t\tif ( inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i ++ ) {\n\n\t\t\t\t\tif ( inputSource.hand[ i ] ) {\n\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tlet jointPose = frame.getJointPose( inputSource.hand[ i ], referenceSpace );\n\t\t\t\t\t\tconst joint = hand.joints[ i ];\n\n\t\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t\t\t// Custom events\n\n\t\t\t\t\t\t// Check pinch\n\t\t\t\t\t\tconst indexTip = hand.joints[ window.XRHand.INDEX_PHALANX_TIP ];\n\t\t\t\t\t\tconst thumbTip = hand.joints[ window.XRHand.THUMB_PHALANX_TIP ];\n\t\t\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: \"pinchend\",\n\t\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: \"pinchstart\",\n\t\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { WebXRController };\n","import { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\nimport { WebXRController } from './WebXRController.js';\n\nfunction WebXRManager( renderer, gl ) {\n\n\tconst scope = this;\n\n\tlet session = null;\n\n\tlet framebufferScaleFactor = 1.0;\n\n\tlet referenceSpace = null;\n\tlet referenceSpaceType = 'local-floor';\n\n\tlet pose = null;\n\n\tconst controllers = [];\n\tconst inputSourcesMap = new Map();\n\n\t//\n\n\tconst cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tconst cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tconst cameras = [ cameraL, cameraR ];\n\n\tconst cameraVR = new ArrayCamera();\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tlet _currentDepthNear = null;\n\tlet _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getTargetRaySpace();\n\n\t};\n\n\tthis.getControllerGrip = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getGripSpace();\n\n\t};\n\n\tthis.getHand = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getHandSpace();\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tcontroller.dispatchEvent( { type: event.type } );\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tcontroller.disconnect( inputSource );\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.isPresenting = true;\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\tgl.makeXRCompatible();\n\n\t\t\t}\n\n\t\t\tconst layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil,\n\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t}\n\n\t};\n\n\tfunction updateInputSources( event ) {\n\n\t\tconst inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tconst inputSource = event.removed[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tconst inputSource = event.added[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tconst cameraLPos = new Vector3();\n\tconst cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tconst left = near * leftFov;\n\t\tconst right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tconst near2 = near + zOffset;\n\t\tconst far2 = far + zOffset;\n\t\tconst left2 = left - xOffset;\n\t\tconst right2 = right + ( ipd - xOffset );\n\t\tconst top2 = topFov * far / far2 * near2;\n\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tconst parent = camera.parent;\n\t\tconst cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\tconst children = camera.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\t// update projection matrix for proper view frustum culling\n\n\t\tif ( cameras.length === 2 ) {\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t} else {\n\n\t\t\t// assume single camera setup (AR)\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tconst views = pose.views;\n\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tconst view = views[ i ];\n\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst inputSources = session.inputSources;\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tconst controller = controllers[ i ];\n\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\nexport { WebXRManager };\n","import { BackSide } from \"../../constants.js\";\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, environment, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material, environment );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, environment );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material, environment ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = material.envMap || environment;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tvar maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material, environment ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap || environment ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, environment ) {\n\n\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nexport { WebGLMaterials };\n","import {\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType,\n\tLinearEncoding,\n\tNoToneMapping\n} from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { DataTexture } from '../textures/DataTexture.js';\nimport { Frustum } from '../math/Frustum.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { UniformsLib } from './shaders/UniformsLib.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\nimport { WebGLBindingStates } from './webgl/WebGLBindingStates.js';\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\nimport { WebGLState } from './webgl/WebGLState.js';\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\nimport { WebXRManager } from './webxr/WebXRManager.js';\nimport { WebGLMaterials } from \"./webgl/WebGLMaterials.js\";\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _framebuffer = null;\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentFramebuffer = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\tlet _currentArrayCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tconst _clipping = new WebGLClipping();\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, bindingStates );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// shadow map\n\n\tconst shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tconst programInfo = properties.get( material ).program;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tconst compiled = new WeakMap();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tlet material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tlet material2 = material[ i ];\n\n\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) _clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled === true ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet program = materialProperties.program;\n\t\tlet programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material, parameters );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\n\t\t}\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( let i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( let i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, environment, _pixelRatio, _height );\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( _gl.FRAMEBUFFER, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = _framebuffer;\n\t\tlet isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tlet restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nexport { WebGLRenderer };\n"],"names":["DataTexture","data","width","height","format","type","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","Texture","call","this","image","undefined","NearestFilter","generateMipmaps","flipY","unpackAlignment","needsUpdate","prototype","Object","create","constructor","isDataTexture","UniformsLib","common","diffuse","value","Color","opacity","map","uvTransform","Matrix3","uv2Transform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","Vector2","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","lightProbe","directionalLights","properties","direction","color","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","position","distance","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","points","size","scale","sprite","center","rotation","WebGLAnimation","context","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","start","stop","cancelAnimationFrame","setAnimationLoop","callback","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","attribute","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","update","bufferType","set","array","usage","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","version","updateRange","count","bufferSubData","offset","subarray","updateBuffer","BoxBufferGeometry","BufferGeometry","[object Object]","depth","widthSegments","heightSegments","depthSegments","super","parameters","scope","Math","floor","indices","vertices","normals","uvs","numberOfVertices","groupStart","buildPlane","u","v","w","udir","vdir","gridX","gridY","materialIndex","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","Vector3","iy","y","ix","x","push","z","a","b","c","d","addGroup","setIndex","setAttribute","Float32BufferAttribute","PlaneGeometry","Geometry","fromBufferGeometry","PlaneBufferGeometry","mergeVertices","width_half","height_half","segment_width","segment_height","cloneUniforms","src","dst","p","property","isColor","isMatrix3","isMatrix4","isVector2","isVector3","isVector4","isTexture","clone","Array","isArray","slice","mergeUniforms","uniforms","merged","length","tmp","UniformsUtils","merge","ShaderMaterial","Material","defines","vertexShader","fragmentShader","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv","uv2","index0AttributeName","uniformsNeedUpdate","attributes","setValues","isShaderMaterial","copy","source","assign","toJSON","meta","name","uuid","getHex","toArray","keys","key","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderLib","basic","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","toon","matcap","dashed","dashSize","totalSize","normal","background","t2D","cube","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","renderer","state","objects","premultipliedAlpha","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","alpha","r","g","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","renderList","scene","camera","forceClear","isScene","xr","session","getSession","environmentBlendMode","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","isWebGLCubeRenderTarget","CubeUVReflectionMapping","Mesh","side","BackSide","depthTest","depthWrite","geometry","deleteAttribute","onBeforeRender","matrixWorld","copyPosition","defineProperty","material","texture","toneMapping","unshift","FrontSide","matrixAutoUpdate","updateMatrix","matrix","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","i","program","object","initAttributes","il","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","index","normalized","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","id","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","cache","saveCache","isInstancedMesh","ELEMENT_ARRAY_BUFFER","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","itemSize","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","instanceMatrix","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dispose","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","plane","Plane","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","planes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","matrixWorldInverse","getNormalMatrix","i4","applyMatrix4","constant","init","enableLocalClipping","enabled","beginShadows","endShadows","setState","clipIntersection","clipShadows","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","has","getExtension","WebGLGeometries","geometries","wireframeAttributes","onGeometryDispose","event","target","buffergeometry","removeEventListener","memory","updateWireframeAttribute","geometryIndex","geometryPosition","l","arrayMax","Uint32BufferAttribute","Uint16BufferAttribute","previousAttribute","addEventListener","isBufferGeometry","isGeometry","_bufferGeometry","setFromObject","morphAttributes","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","textures","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","numericalSort","absNumericalSort","abs","WebGLMorphtargets","influencesList","morphInfluences","workInfluences","objectInfluences","morphTargetInfluences","influences","influence","sort","Number","MAX_SAFE_INTEGER","morphInfluencesSum","getAttribute","morphBaseInfluence","morphTargetsRelative","getUniforms","setValue","WebGLObjects","updateMap","updateFromObject","CubeTexture","images","CubeReflectionMapping","RGBFormat","DataTexture2DArray","wrapR","ClampToEdgeWrapping","DataTexture3D","physical","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","sheen","transmission","transmissionMap","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","n","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","string","shader","createShader","shaderSource","compileShader","setOptional","upload","values","seqWithValue","programIdCount","getEncodingComponents","LinearEncoding","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","LogLuvEncoding","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","Error","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","end","snippet","parseInt","generatePrecision","precisionstring","WebGLProgram","cacheKey","getContext","shadowMapTypeDefine","shadowMapType","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","CubeRefractionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","combine","MultiplyOperation","MixOperation","AddOperation","generateEnvMapBlendingDefine","gammaFactorDefine","gammaFactor","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","flatShading","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","isRawShaderMaterial","shaderName","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexColors","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","alphaTest","physicallyCorrectLights","NoToneMapping","dithering","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","diagnostics","prefix","cachedUniforms","deleteShader","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","isWebGLRenderTarget","getParameters","shadows","nClipPlanes","nClipIntersection","environment","isMeshStandardMaterial","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","min","allocateBones","currentRenderTarget","getRenderTarget","normalMapType","ObjectSpaceNormalMap","TangentSpaceNormalMap","isFogExp2","maxMorphTargets","maxMorphNormals","directional","point","spot","rectArea","hemi","shadowMap","toneMapped","DoubleSide","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","indexOf","pop","WebGLProperties","painterSortStable","groupOrder","renderOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transparent","defaultProgram","getNextRenderItem","group","renderItem","materialProperties","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","onSceneDispose","cameras","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","castShadow","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","pointShadow","vector3","matrix4","Matrix4","matrix42","intensity","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","multiplyScalar","setFromMatrixPosition","sub","transformDirection","shadowUniforms","bias","normalBias","radius","mapSize","isSpotLight","cos","angle","penumbra","isRectAreaLight","identity","premultiply","extractRotation","isPointLight","near","far","isHemisphereLight","normalize","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLRenderTarget","options","scissor","Vector4","scissorTest","viewport","LinearFilter","depthBuffer","stencilBuffer","depthTexture","BasicDepthPacking","EventDispatcher","setSize","dispatchEvent","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","Frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowSide","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","BufferAttribute","fullScreenMesh","VSMPass","setRenderTarget","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","RGBADepthPacking","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","clippingPlanes","keyA","keyB","materialsForVariant","cachedMaterial","visible","renderObject","shadowCamera","layers","test","isMesh","isLine","isPoints","receiveShadow","frustumCulled","intersectsObject","modelViewMatrix","multiplyMatrices","groups","k","kl","groupMaterial","depthMaterial","children","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","NoBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","multiply","isPointLightShadow","pars","RGBAFormat","updateProjectionMatrix","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","equals","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LessEqualDepth","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","parseFloat","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CullFaceBack","CULL_FACE","equationToGL","AddEquation","FUNC_ADD","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","MinEquation","MIN","MaxEquation","MAX","MIN_EXT","MAX_EXT","factorToGL","ZeroFactor","ZERO","OneFactor","ONE","SrcColorFactor","SRC_COLOR","SrcAlphaFactor","SRC_ALPHA","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","DstColorFactor","DST_COLOR","DstAlphaFactor","DST_ALPHA","OneMinusSrcColorFactor","ONE_MINUS_SRC_COLOR","OneMinusSrcAlphaFactor","ONE_MINUS_SRC_ALPHA","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","BLEND","CustomBlending","blendEquationSeparate","blendFuncSeparate","NormalBlending","AdditiveBlending","blendFunc","SubtractiveBlending","MultiplyBlending","frontFace","CW","CCW","cullFace","CullFaceNone","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","useProgram","setMaterial","frontFaceCW","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","setLineWidth","lineWidth","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","error","texImage3D","WebGLTextures","_gl","utils","_videoTextures","_canvas","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","document","createElementNS","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","max","HTMLImageElement","HTMLCanvasElement","ImageBitmap","MathUtils","floorPowerOfTwo","canvas","drawImage","isPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","internalFormat","RED","R32F","HALF_FLOAT","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","f","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LINEAR","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","mipmaps","setTextureParameters","mipmap","mipmapImage","onUpdate","setTextureCubeDynamic","wrappingToGL","RepeatWrapping","REPEAT","CLAMP_TO_EDGE","MirroredRepeatWrapping","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipmapNearestFilter","LINEAR_MIPMAP_NEAREST","LinearMipmapLinearFilter","LINEAR_MIPMAP_LINEAR","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","UnsignedIntType","DEPTH_COMPONENT24","UnsignedInt248Type","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DepthFormat","UnsignedShortType","DepthStencilFormat","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","samples","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isWebGLMultisampleRenderTarget","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","updateMultisampleRenderTarget","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","mask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","WebGLUtils","UnsignedByteType","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","RedFormat","RedIntegerFormat","RED_INTEGER","RGFormat","RG","RGIntegerFormat","RG_INTEGER","RGBIntegerFormat","RGB_INTEGER","RGBAIntegerFormat","RGBA_INTEGER","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","RGBA_BPTC_Format","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","PerspectiveCamera","WebXRController","_targetRay","_grip","_hand","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","forEach","disconnect","setFramebuffer","animation","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","then","cameraLPos","cameraRPos","updateCamera","parent","getInverse","getCamera","depthNear","depthFar","updateMatrixWorld","ipd","distanceTo","projL","projectionMatrix","projR","topFov","bottomFov","leftFov","rightFov","left","right","zOffset","xOffset","decompose","quaternion","translateX","translateZ","compose","near2","far2","left2","right2","top2","bottom2","makePerspective","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","view","fromArray","transform","WebGLMaterials","refreshUniformsCommon","emissiveIntensity","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","negate","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","isMeshBasicMaterial","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","gapSize","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","materials","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","rangeMin","rangeMax","initGLContext","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","getSize","updateStyle","style","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","determinant","setProgram","rangeFactor","dataCount","rangeStart","drawRange","rangeCount","Infinity","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","traverse","isLight","compiled","material2","initMaterial","projectObject","isGroup","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","isArrayCamera","jl","camera2","normalMatrix","renderObjectImmediate","onAfterRender","lightsStateVersion","programCacheKey","programChange","onBeforeCompile","numSupportedMorphTargets","numSupportedMorphNormals","needsLights","materialNeedsLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","sqrt","ceilPowerOfTwo","boneMatrices","boneTextureSize","ltc_1","LTC_1","ltc_2","LTC_2","window","isCamera","setFromProjectionMatrix","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","pow","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","__THREE_DEVTOOLS__","CustomEvent","detail","Group","joints","inputState","pinching","XRHand","LITTLE_PHALANX_TIP","joint","add","inputPose","gripPose","handPose","targetRay","grip","hand","jointPose","getJointPose","jointRadius","indexTip","INDEX_PHALANX_TIP","thumbTip","THUMB_PHALANX_TIP","distanceToPinch","threshold","handedness","getPose","targetRaySpace","gripSpace"],"mappings":"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GAEnB,IAAM,MAAMuB,KAAOzR,KAAKkQ,YAES,IAA3BlQ,KAAKkQ,WAAYuB,KAAiBvB,EAAYuB,IAAQ,GAM5D,OAFKhR,OAAO+Q,KAAMtB,GAAahB,OAAS,IAAIhQ,EAAKgR,WAAaA,GAEvDhR,GGvED,MAAMwS,GAAc,CAC1BC,kBCpIwB,yFDqIxBC,uBErIwB,qEFsIxBC,mBGtIwB,iFHuIxBC,eIvIwB,whBJwIxBC,oBKxIwB,gGLyIxBC,aMzIwB,2CN0IxBC,mBO1IwB,yHP2IxBC,MQ3IwB,4tYR4IxBC,sBS5IwB,83CT6IxBC,yBU7IwB,ypBV8IxBC,8BW9IwB,sIX+IxBC,4BY/IwB,6EZgJxBC,uBahJwB,mFbiJxBC,ecjJwB,kEdkJxBC,oBelJwB,2DfmJxBC,kBgBnJwB,2DhBoJxBC,aiBpJwB,8DjBqJxB7R,OkBrJwB,u5GlBsJxB8R,4BmBtJwB,o8HnBuJxBC,qBoBvJwB,qtBpBwJxBC,4BqBxJwB,0JrByJxBC,uBsBzJwB,2KtB0JxBC,qBuB1JwB,yNvB2JxBC,0BwB3JwB,2ExB4JxBC,mByB5JwB,0DzB6JxBC,wB0B7JwB,0jH1B8JxBC,gB2B9JwB,+rD3B+JxBC,4B4B/JwB,iP5BgKxBC,qB6BhKwB,2U7BiKxBC,mB8BjKwB,mT9BkKxBC,8B+BlKwB,8jH/BmKxBC,cgCnKwB,krBhCoKxBC,WiCpKwB,+DjCqKxBC,gBkCrKwB,4DlCsKxBC,amCtKwB,0SnCuKxBC,kBoCvKwB,4NpCwKxBC,0BqCxKwB,gcrCyKxBC,kBsCzKwB,6QtC0KxBC,uBuC1KwB,yGvC2KxBC,sBwC3KwB,mgGxC4KxBC,kByC5KwB,8iKzC6KxBC,qB0C7KwB,wE1C8KxBC,0B2C9KwB,mhC3C+KxBC,sB4C/KwB,0M5CgLxBC,2B6ChLwB,m1C7CiLxBC,yB8CjLwB,y8C9CkLxBC,8B+ClLwB,wqM/CmLxBC,sBgDnLwB,ikJhDoLxBC,qBiDpLwB,4iCjDqLxBC,oBkDrLwB,yRlDsLxBC,qBmDtLwB,4SnDuLxBC,0BoDvLwB,iLpDwLxBC,wBqDxLwB,sMrDyLxBC,mBsDzLwB,qZtD0LxBC,auD1LwB,8JvD2LxBC,kBwD3LwB,2DxD4LxBC,sByD5LwB,sWzD6LxBC,2B0D7LwB,2N1D8LxBC,sB2D9LwB,8Q3D+LxBC,2B4D/LwB,6E5DgMxBC,mB6DhMwB,wrB7DiMxBC,wB8DjMwB,4O9DkMxBC,mB+DlMwB,69B/DmMxBC,sBgEnMwB,8iChEoMxBC,qBiEpMwB,2vBjEqMxBC,wBkErMwB,qrClEsMxBC,gCmEtMwB,6EnEuMxBC,+BoEvMwB,sXpEwMxBC,wBqExMwB,ySrEyMxBC,QsEzMwB,yvDtE0MxBC,6BuE1MwB,8MvE2MxBC,ewE3MwB,kOxE4MxBC,mByE5MwB,wFzE6MxBC,wB0E7MwB,2mB1E8MxBC,sB2E9MwB,8Q3E+MxBC,2B4E/MwB,6E5EgNxBC,wB6EhNwB,yqV7EiNxBC,sB8EjNwB,86C9EkNxBC,iB+ElNwB,slD/EmNxBC,yBgFnNwB,wjDhFoNxBC,gBiFpNwB,0OjFqNxBC,qBkFrNwB,wjClFsNxBC,gBmFtNwB,2YnFuNxBC,kBoFvNwB,sepFwNxBC,qBqFxNwB,wMrFyNxBC,0BsFzNwB,2EtF0NxBC,qBuF1NwB,qGvF2NxBC,0BwF3NwB,4hExF4NxBC,yByF5NwB,0GzF6NxBC,8B0F7NwB,mF1F8NxBC,iB2F9NwB,iG3F+NxBC,e4F/NwB,0J5FgOxBC,U6FhOwB,6E7FiOxBC,kB8FjOwB,4F9FkOxBC,gB+FlOwB,mJ/FmOxBC,WgGnOwB,sHhGoOxBC,gBiGpOwB,kSjGsOxBC,gBkGtOwB,4OlGuOxBC,gBmGvOwB,0KnGwOxBC,UoGxOwB,4WpGyOxBC,UqGzOwB,wQrG0OxBC,WsG1OwB,s/BtG2OxBC,WuG3OwB,qjCvG4OxBC,kBwG5OwB,wuBxG6OxBC,kByG7OwB,4uBzG8OxBC,c0G9OwB,gY1G+OxBC,c2G/OwB,6M3GgPxBC,gB4GhPwB,o1B5GiPxBC,gB6GjPwB,+iB7GkPxBC,e8GlPwB,+wD9GmPxBC,e+GnPwB,y3B/GoPxBC,iBgHpPwB,66EhHqPxBC,iBiHrPwB,ipCjHsPxBC,gBkHtPwB,0nDlHuPxBC,gBmHvPwB,ojCnHwPxBC,coHxPwB,yzDpHyPxBC,cqHzPwB,gsCrH0PxBC,esH1PwB,omEtH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"}
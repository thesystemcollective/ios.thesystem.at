{"version":3,"file":"WebGLRenderer.js","sources":["../../node_modules/three/src/textures/DataTexture.js","../../node_modules/three/src/renderers/webgl/WebGLAnimation.js","../../node_modules/three/src/renderers/webgl/WebGLAttributes.js","../../node_modules/three/src/geometries/BoxGeometry.js","../../node_modules/three/src/geometries/PlaneGeometry.js","../../node_modules/three/src/renderers/shaders/UniformsUtils.js","../../node_modules/three/src/materials/ShaderMaterial.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/common.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/packing.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/transmissionmap_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/transmissionmap_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/background_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/background_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/cube_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/cube_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/depth_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/depth_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/equirect_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/equirect_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/normal_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/normal_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/points_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/points_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/shadow_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/shadow_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/sprite_frag.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/sprite_vert.glsl.js","../../node_modules/three/src/renderers/shaders/UniformsLib.js","../../node_modules/three/src/renderers/shaders/ShaderLib.js","../../node_modules/three/src/renderers/webgl/WebGLBackground.js","../../node_modules/three/src/renderers/webgl/WebGLBindingStates.js","../../node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js","../../node_modules/three/src/renderers/webgl/WebGLCapabilities.js","../../node_modules/three/src/renderers/webgl/WebGLClipping.js","../../node_modules/three/src/renderers/WebGLRenderTarget.js","../../node_modules/three/src/cameras/CubeCamera.js","../../node_modules/three/src/renderers/WebGLCubeRenderTarget.js","../../node_modules/three/src/renderers/webgl/WebGLCubeMaps.js","../../node_modules/three/src/renderers/webgl/WebGLExtensions.js","../../node_modules/three/src/renderers/webgl/WebGLGeometries.js","../../node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","../../node_modules/three/src/renderers/webgl/WebGLInfo.js","../../node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","../../node_modules/three/src/renderers/webgl/WebGLObjects.js","../../node_modules/three/src/textures/CubeTexture.js","../../node_modules/three/src/textures/DataTexture2DArray.js","../../node_modules/three/src/textures/DataTexture3D.js","../../node_modules/three/src/renderers/webgl/WebGLUniforms.js","../../node_modules/three/src/renderers/webgl/WebGLShader.js","../../node_modules/three/src/renderers/webgl/WebGLProgram.js","../../node_modules/three/src/renderers/webgl/WebGLPrograms.js","../../node_modules/three/src/renderers/webgl/WebGLProperties.js","../../node_modules/three/src/renderers/webgl/WebGLRenderLists.js","../../node_modules/three/src/renderers/webgl/WebGLLights.js","../../node_modules/three/src/renderers/webgl/WebGLRenderStates.js","../../node_modules/three/src/materials/MeshDepthMaterial.js","../../node_modules/three/src/materials/MeshDistanceMaterial.js","../../node_modules/three/src/renderers/webgl/WebGLShadowMap.js","../../node_modules/three/src/renderers/shaders/ShaderLib/vsm_vert.glsl.js","../../node_modules/three/src/renderers/shaders/ShaderLib/vsm_frag.glsl.js","../../node_modules/three/src/renderers/webgl/WebGLState.js","../../node_modules/three/src/renderers/webgl/WebGLTextures.js","../../node_modules/three/src/renderers/webgl/WebGLUtils.js","../../node_modules/three/src/cameras/ArrayCamera.js","../../node_modules/three/src/renderers/webxr/WebXRController.js","../../node_modules/three/src/renderers/webxr/WebXRManager.js","../../node_modules/three/src/renderers/webgl/WebGLMaterials.js","../../node_modules/three/src/renderers/WebGLRenderer.js"],"sourcesContent":["import { Texture } from './Texture.js';\nimport { NearestFilter } from '../constants.js';\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n\nexport { DataTexture };\n","function WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n","function WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tvar cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n","import { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n// BoxGeometry\n\nclass BoxGeometry extends Geometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n// BoxBufferGeometry\n\nclass BoxBufferGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\nexport { BoxGeometry, BoxBufferGeometry };\n","import { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\n// PlaneGeometry\n\nclass PlaneGeometry extends Geometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n// PlaneBufferGeometry\n\nclass PlaneBufferGeometry extends BufferGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments ) || 1;\n\t\tconst gridY = Math.floor( heightSegments ) || 1;\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\n\nexport { PlaneGeometry, PlaneBufferGeometry };\n","/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n","import { Material } from './Material.js';\nimport { cloneUniforms } from '../renderers/shaders/UniformsUtils.js';\n\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tthis.glslVersion = null;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = Object.assign( {}, source.extensions );\n\n\tthis.glslVersion = source.glslVersion;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tconst data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.glslVersion = this.glslVersion;\n\tdata.uniforms = {};\n\n\tfor ( const name in this.uniforms ) {\n\n\t\tconst uniform = this.uniforms[ name ];\n\t\tconst value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tconst extensions = {};\n\n\tfor ( const key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n\nexport { ShaderMaterial };\n","export default /* glsl */`\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n","export default /* glsl */`\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;\n","import alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\nimport common from './ShaderChunk/common.glsl.js';\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\nimport encodings_fragment from './ShaderChunk/encodings_fragment.glsl.js';\nimport encodings_pars_fragment from './ShaderChunk/encodings_pars_fragment.glsl.js';\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\nimport lightmap_fragment from './ShaderChunk/lightmap_fragment.glsl.js';\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\nimport lights_lambert_vertex from './ShaderChunk/lights_lambert_vertex.glsl.js';\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\nimport packing from './ShaderChunk/packing.glsl.js';\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\nimport transmissionmap_fragment from './ShaderChunk/transmissionmap_fragment.glsl.js';\nimport transmissionmap_pars_fragment from './ShaderChunk/transmissionmap_pars_fragment.glsl.js';\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\nimport uv2_pars_fragment from './ShaderChunk/uv2_pars_fragment.glsl.js';\nimport uv2_pars_vertex from './ShaderChunk/uv2_pars_vertex.glsl.js';\nimport uv2_vertex from './ShaderChunk/uv2_vertex.glsl.js';\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\n\nimport background_frag from './ShaderLib/background_frag.glsl.js';\nimport background_vert from './ShaderLib/background_vert.glsl.js';\nimport cube_frag from './ShaderLib/cube_frag.glsl.js';\nimport cube_vert from './ShaderLib/cube_vert.glsl.js';\nimport depth_frag from './ShaderLib/depth_frag.glsl.js';\nimport depth_vert from './ShaderLib/depth_vert.glsl.js';\nimport distanceRGBA_frag from './ShaderLib/distanceRGBA_frag.glsl.js';\nimport distanceRGBA_vert from './ShaderLib/distanceRGBA_vert.glsl.js';\nimport equirect_frag from './ShaderLib/equirect_frag.glsl.js';\nimport equirect_vert from './ShaderLib/equirect_vert.glsl.js';\nimport linedashed_frag from './ShaderLib/linedashed_frag.glsl.js';\nimport linedashed_vert from './ShaderLib/linedashed_vert.glsl.js';\nimport meshbasic_frag from './ShaderLib/meshbasic_frag.glsl.js';\nimport meshbasic_vert from './ShaderLib/meshbasic_vert.glsl.js';\nimport meshlambert_frag from './ShaderLib/meshlambert_frag.glsl.js';\nimport meshlambert_vert from './ShaderLib/meshlambert_vert.glsl.js';\nimport meshmatcap_frag from './ShaderLib/meshmatcap_frag.glsl.js';\nimport meshmatcap_vert from './ShaderLib/meshmatcap_vert.glsl.js';\nimport meshtoon_frag from './ShaderLib/meshtoon_frag.glsl.js';\nimport meshtoon_vert from './ShaderLib/meshtoon_vert.glsl.js';\nimport meshphong_frag from './ShaderLib/meshphong_frag.glsl.js';\nimport meshphong_vert from './ShaderLib/meshphong_vert.glsl.js';\nimport meshphysical_frag from './ShaderLib/meshphysical_frag.glsl.js';\nimport meshphysical_vert from './ShaderLib/meshphysical_vert.glsl.js';\nimport normal_frag from './ShaderLib/normal_frag.glsl.js';\nimport normal_vert from './ShaderLib/normal_vert.glsl.js';\nimport points_frag from './ShaderLib/points_frag.glsl.js';\nimport points_vert from './ShaderLib/points_vert.glsl.js';\nimport shadow_frag from './ShaderLib/shadow_frag.glsl.js';\nimport shadow_vert from './ShaderLib/shadow_vert.glsl.js';\nimport sprite_frag from './ShaderLib/sprite_frag.glsl.js';\nimport sprite_vert from './ShaderLib/sprite_vert.glsl.js';\n\nexport const ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformed = vec3( position );\n`;\n","export default /* glsl */`\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n`;\n","export default /* glsl */`\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4's roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvColor = vec3( 1.0 );\n\n#endif\n\n#ifdef USE_COLOR\n\n\tvColor.xyz *= color.xyz;\n\n#endif\n\n#ifdef USE_INSTANCING_COLOR\n\n\tvColor.xyz *= instanceColor.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n`;\n","export default /* glsl */`\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\n\t// These shader functions convert between the UV coordinates of a single face of\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t// sampling a textureCube (not generally normalized ).\n\n\tfloat getFace( vec3 direction ) {\n\n\t\tvec3 absDirection = abs( direction );\n\n\t\tfloat face = - 1.0;\n\n\t\tif ( absDirection.x > absDirection.z ) {\n\n\t\t\tif ( absDirection.x > absDirection.y )\n\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t} else {\n\n\t\t\tif ( absDirection.z > absDirection.y )\n\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n\t// RH coordinate system; PMREM face-indexing convention\n\tvec2 getUV( vec3 direction, float face ) {\n\n\t\tvec2 uv;\n\n\t\tif ( face == 0.0 ) {\n\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\n\t\t} else if ( face == 1.0 ) {\n\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\n\t\t} else if ( face == 2.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\n\t\t} else if ( face == 3.0 ) {\n\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\n\t\t} else if ( face == 4.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\n\t\t} else {\n\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\n\t\t}\n\n\t\treturn 0.5 * ( uv + 1.0 );\n\n\t}\n\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\n\t\tfloat face = getFace( direction );\n\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\n\t\tfloat faceSize = exp2( mipInt );\n\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\n\t\tvec2 f = fract( uv );\n\n\t\tuv += 0.5 - f;\n\n\t\tif ( face > 2.0 ) {\n\n\t\t\tuv.y += faceSize;\n\n\t\t\tface -= 3.0;\n\n\t\t}\n\n\t\tuv.x += face * faceSize;\n\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\n\t\t}\n\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\n\t\tuv *= texelSize;\n\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x += texelSize;\n\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.y += texelSize;\n\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x -= texelSize;\n\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tvec3 tm = mix( tl, tr, f.x );\n\n\t\tvec3 bm = mix( bl, br, f.x );\n\n\t\treturn mix( tm, bm, f.y );\n\n\t}\n\n\t// These defines must match with PMREMGenerator\n\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\n\tfloat roughnessToMip( float roughness ) {\n\n\t\tfloat mip = 0.0;\n\n\t\tif ( roughness >= r1 ) {\n\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\n\t\t} else if ( roughness >= r4 ) {\n\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\n\t\t} else if ( roughness >= r5 ) {\n\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\n\t\t} else if ( roughness >= r6 ) {\n\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\n\t\t} else {\n\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t}\n\n\t\treturn mip;\n\n\t}\n\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\n\t\tfloat mipF = fract( mip );\n\n\t\tfloat mipInt = floor( mip );\n\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\n\t\tif ( mipF == 0.0 ) {\n\n\t\t\treturn vec4( color0, 1.0 );\n\n\t\t} else {\n\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\n\t\t}\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n`;\n","export default /* glsl */`\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n`;\n","export default /* glsl */`\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n\t// return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tfogDepth = - mvPosition.z;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n`;\n","export default /* glsl */`\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n`;\n","export default /* glsl */`\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n`;\n","export default /* glsl */`\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n`;\n","export default /* glsl */`\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tmat3 tsn = mat3( S, T, N );\n\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n`;\n","export default /* glsl */`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\n","export default /* glsl */`\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSIONMAP\n\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSIONMAP\n\n\tuniform sampler2D transmissionMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n`;\n","export default /* glsl */`\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n`;\n","export default /* glsl */`\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n`;\n","export default /* glsl */`\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n","export default /* glsl */`\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transmission model\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nexport { UniformsLib };\n","import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n","import { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxBufferGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneBufferGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.isWebGLCubeRenderTargetTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tif ( background.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t// TODO Deprecate\n\n\t\t\t\tbackground = background.texture;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n","﻿function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) return true;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t}\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n\nexport { WebGLBindingStates };\n","function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n","function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n","import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { WebGLRenderTarget };\n","import { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, renderTarget ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\treturn;\n\n\t}\n\n\tthis.renderTarget = renderTarget;\n\n\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.layers = this.layers;\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.layers = this.layers;\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.layers = this.layers;\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.layers = this.layers;\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.layers = this.layers;\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.layers = this.layers;\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n\nexport { CubeCamera };\n","import { BackSide, LinearFilter, LinearMipmapLinearFilter, NoBlending, RGBAFormat } from '../constants.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { BoxBufferGeometry } from '../geometries/BoxGeometry.js';\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\nimport { cloneUniforms } from './shaders/UniformsUtils.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { CubeCamera } from '../cameras/CubeCamera.js';\n\nfunction WebGLCubeRenderTarget( size, options, dummy ) {\n\n\tif ( Number.isInteger( options ) ) {\n\n\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\toptions = dummy;\n\n\t}\n\n\tWebGLRenderTarget.call( this, size, size, options );\n\n\tthis.texture.isWebGLCubeRenderTargetTexture = true; // HACK Why is texture not a CubeTexture?\n\n}\n\nWebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nWebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\tthis.texture.type = texture.type;\n\tthis.texture.format = RGBAFormat; // see #18859\n\tthis.texture.encoding = texture.encoding;\n\n\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\tthis.texture.minFilter = texture.minFilter;\n\tthis.texture.magFilter = texture.magFilter;\n\n\tconst shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: /* glsl */`\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t`,\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t`\n\t};\n\n\tconst geometry = new BoxBufferGeometry( 5, 5, 5 );\n\n\tconst material = new ShaderMaterial( {\n\n\t\tname: 'CubemapFromEquirect',\n\n\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: BackSide,\n\t\tblending: NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tconst mesh = new Mesh( geometry, material );\n\n\tconst currentMinFilter = texture.minFilter;\n\n\t// Avoid blurred poles\n\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\tconst camera = new CubeCamera( 1, 10, this );\n\tcamera.update( renderer, mesh );\n\n\ttexture.minFilter = currentMinFilter;\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn this;\n\n};\n\nexport { WebGLCubeRenderTarget };\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { WebGLCubeRenderTarget } from '../WebGLCubeRenderTarget.js';\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderList = renderer.getRenderList();\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\tconst currentRenderState = renderer.getRenderState();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\t\t\t\trenderer.setRenderList( currentRenderList );\n\t\t\t\t\t\trenderer.setRenderState( currentRenderState );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeMaps };\n","function WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ] !== null;\n\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension !== null;\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( ! this.has( name ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n","import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = new WeakMap();\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\t\tconst buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( const name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tconst attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tlet buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n","function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n","function WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n","function numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n","function WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n","import { Texture } from './Texture.js';\nimport { CubeReflectionMapping, RGBFormat } from '../constants.js';\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n\nexport { CubeTexture };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nexport { DataTexture2DArray };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\nexport { DataTexture3D };\n","/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { DataTexture3D } from '../../textures/DataTexture3D.js';\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n","function WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n","import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding, GLSL3 } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\tif ( parameters.precision === \"highp\" ) {\n\n\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + \"\\n\" : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n","import { BackSide, DoubleSide, CubeUVRefractionMapping, CubeUVReflectionMapping, LinearEncoding, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping } from '../../constants.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\", \"instancingColor\",\n\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatMap\", \"clearcoatRoughnessMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\"sheen\", \"transmissionMap\"\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n","function WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n","function painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, camera ) {\n\n\t\tconst cameras = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists, WebGLRenderList };\n","import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from '../shaders/UniformsLib.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights() {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_1;\n\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_2;\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n","import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState() {\n\n\tconst lights = new WebGLLights();\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, camera ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t} else {\n\n\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n","import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n\nexport { MeshDepthMaterial };\n","import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n\nexport { MeshDistanceMaterial };\n","import { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, LinearFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport vsm_frag from '../shaders/ShaderLib/vsm_frag.glsl.js';\nimport vsm_vert from '../shaders/ShaderLib/vsm_vert.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t\"position\",\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizonal pass\n\n\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n","export default /* glsl */`\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n\t\t#ifdef HORIZONAL_PASS\n\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n\t\t#else\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\n\t\t#endif\n\n\t}\n\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n","import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = null;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4();\n\tconst currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n","import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBFormat, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping } from '../../constants.js';\nimport { MathUtils } from '../../math/MathUtils.js';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t} else {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isDataTexture3D ) textureType = _gl.TEXTURE_3D;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tconst glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nexport { WebGLTextures };\n","import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, RGBA_BPTC_Format } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n","import { PerspectiveCamera } from './PerspectiveCamera.js';\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n\nexport { ArrayCamera };\n","import { Group } from '../../objects/Group.js';\n\nfunction WebXRController() {\n\n\tthis._targetRay = null;\n\tthis._grip = null;\n\tthis._hand = null;\n\n}\n\nObject.assign( WebXRController.prototype, {\n\n\tconstructor: WebXRController,\n\n\tgetHandSpace: function () {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = [];\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t\tif ( window.XRHand ) {\n\n\t\t\t\tfor ( let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i ++ ) {\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\tthis._hand.joints.push( joint );\n\t\t\t\t\t// ??\n\t\t\t\t\tthis._hand.add( joint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t},\n\n\tgetTargetRaySpace: function () {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t},\n\n\tgetGripSpace: function () {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function ( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( let i = 0; i <= window.XRHand.LITTLE_PHALANX_TIP; i ++ ) {\n\n\t\t\t\t\tif ( inputSource.hand[ i ] ) {\n\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose( inputSource.hand[ i ], referenceSpace );\n\t\t\t\t\t\tconst joint = hand.joints[ i ];\n\n\t\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t\t\t// Custom events\n\n\t\t\t\t\t\t// Check pinch\n\t\t\t\t\t\tconst indexTip = hand.joints[ window.XRHand.INDEX_PHALANX_TIP ];\n\t\t\t\t\t\tconst thumbTip = hand.joints[ window.XRHand.THUMB_PHALANX_TIP ];\n\t\t\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: \"pinchend\",\n\t\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\t\t\ttype: \"pinchstart\",\n\t\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { WebXRController };\n","import { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\nimport { WebXRController } from './WebXRController.js';\n\nfunction WebXRManager( renderer, gl ) {\n\n\tconst scope = this;\n\n\tlet session = null;\n\n\tlet framebufferScaleFactor = 1.0;\n\n\tlet referenceSpace = null;\n\tlet referenceSpaceType = 'local-floor';\n\n\tlet pose = null;\n\n\tconst controllers = [];\n\tconst inputSourcesMap = new Map();\n\n\t//\n\n\tconst cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tconst cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tconst cameras = [ cameraL, cameraR ];\n\n\tconst cameraVR = new ArrayCamera();\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tlet _currentDepthNear = null;\n\tlet _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getTargetRaySpace();\n\n\t};\n\n\tthis.getControllerGrip = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getGripSpace();\n\n\t};\n\n\tthis.getHand = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getHandSpace();\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tcontroller.dispatchEvent( { type: event.type } );\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tcontroller.disconnect( inputSource );\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.isPresenting = true;\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\tgl.makeXRCompatible();\n\n\t\t\t}\n\n\t\t\tconst layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil,\n\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t}\n\n\t};\n\n\tfunction updateInputSources( event ) {\n\n\t\tconst inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tconst inputSource = event.removed[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tconst inputSource = event.added[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tconst cameraLPos = new Vector3();\n\tconst cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tconst left = near * leftFov;\n\t\tconst right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tconst near2 = near + zOffset;\n\t\tconst far2 = far + zOffset;\n\t\tconst left2 = left - xOffset;\n\t\tconst right2 = right + ( ipd - xOffset );\n\t\tconst top2 = topFov * far / far2 * near2;\n\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tconst parent = camera.parent;\n\t\tconst cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\tconst children = camera.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\t// update projection matrix for proper view frustum culling\n\n\t\tif ( cameras.length === 2 ) {\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t} else {\n\n\t\t\t// assume single camera setup (AR)\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tconst views = pose.views;\n\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tconst view = views[ i ];\n\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst inputSources = session.inputSources;\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tconst controller = controllers[ i ];\n\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\nexport { WebXRManager };\n","import { BackSide } from '../../constants.js';\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nexport { WebGLMaterials };\n","import {\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType,\n\tLinearEncoding,\n\tNoToneMapping\n} from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { DataTexture } from '../textures/DataTexture.js';\nimport { Frustum } from '../math/Frustum.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\nimport { WebGLBindingStates } from './webgl/WebGLBindingStates.js';\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\nimport { WebGLCubeMaps } from './webgl/WebGLCubeMaps.js';\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\nimport { WebGLState } from './webgl/WebGLState.js';\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\nimport { WebXRManager } from './webxr/WebXRManager.js';\nimport { WebGLMaterials } from \"./webgl/WebGLMaterials.js\";\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _framebuffer = null;\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentFramebuffer = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\tlet _currentArrayCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates();\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// shadow map\n\n\tconst shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tconst programInfo = properties.get( material ).program;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tconst compiled = new WeakMap();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet program = materialProperties.program;\n\t\tlet programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list, envMap still needs the update here to avoid a frame-late effect\n\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || environment );\n\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = materialProperties.program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( _gl.FRAMEBUFFER, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderList = function () {\n\n\t\treturn currentRenderList;\n\n\t};\n\n\tthis.setRenderList = function ( renderList ) {\n\n\t\tcurrentRenderList = renderList;\n\n\t};\n\n\tthis.getRenderState = function () {\n\n\t\treturn currentRenderState;\n\n\t};\n\n\tthis.setRenderState = function ( renderState ) {\n\n\t\tcurrentRenderState = renderState;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = _framebuffer;\n\t\tlet isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tlet restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nexport { WebGLRenderer };\n"],"names":["DataTexture","data","width","height","format","type","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","Texture","call","this","image","undefined","NearestFilter","generateMipmaps","flipY","unpackAlignment","needsUpdate","WebGLAnimation","context","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","start","stop","cancelAnimationFrame","setAnimationLoop","callback","setContext","value","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","attribute","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","update","bufferType","isGLBufferAttribute","cached","version","set","bytesPerElement","elementSize","array","usage","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","BYTES_PER_ELEMENT","updateRange","count","bufferSubData","offset","subarray","updateBuffer","prototype","Object","create","constructor","isDataTexture","BoxBufferGeometry","BufferGeometry","[object Object]","depth","widthSegments","heightSegments","depthSegments","super","parameters","scope","Math","floor","indices","vertices","normals","uvs","numberOfVertices","groupStart","buildPlane","u","v","w","udir","vdir","gridX","gridY","materialIndex","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","Vector3","iy","y","ix","x","push","z","a","b","c","d","addGroup","setIndex","setAttribute","Float32BufferAttribute","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","cloneUniforms","src","dst","p","property","isColor","isMatrix3","isMatrix4","isVector2","isVector3","isVector4","isTexture","clone","Array","isArray","slice","mergeUniforms","uniforms","merged","length","tmp","UniformsUtils","merge","ShaderMaterial","Material","defines","vertexShader","fragmentShader","linewidth","wireframe","wireframeLinewidth","fog","lights","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","color","uv","uv2","index0AttributeName","uniformsNeedUpdate","glslVersion","attributes","setValues","isShaderMaterial","copy","source","assign","toJSON","meta","name","uuid","getHex","toArray","keys","key","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","Color","opacity","map","uvTransform","Matrix3","uv2Transform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","Vector2","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","direction","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","position","distance","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","points","size","scale","sprite","center","rotation","ShaderLib","basic","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","toon","matcap","dashed","dashSize","totalSize","normal","background","t2D","cube","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","renderer","cubemaps","state","objects","premultipliedAlpha","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","alpha","r","g","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","renderList","scene","camera","forceClear","isScene","xr","session","getSession","environmentBlendMode","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","isWebGLCubeRenderTarget","isWebGLCubeRenderTargetTexture","CubeUVReflectionMapping","Mesh","side","BackSide","depthTest","depthWrite","geometry","deleteAttribute","onBeforeRender","matrixWorld","copyPosition","defineProperty","material","texture","toneMapping","unshift","FrontSide","matrixAutoUpdate","updateMatrix","matrix","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","i","program","object","index","initAttributes","il","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","normalized","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","id","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","cache","saveCache","isInstancedMesh","ELEMENT_ARRAY_BUFFER","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","itemSize","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","instanceMatrix","instanceColor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dispose","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","plane","Plane","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","planes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","matrixWorldInverse","getNormalMatrix","i4","applyMatrix4","constant","init","enableLocalClipping","enabled","beginShadows","endShadows","setState","useCache","clippingPlanes","clipIntersection","clipShadows","materialProperties","nGlobal","lGlobal","clippingState","WebGLRenderTarget","options","scissor","Vector4","scissorTest","viewport","LinearFilter","depthBuffer","stencilBuffer","depthTexture","physical","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","sheen","transmission","transmissionMap","EventDispatcher","isWebGLRenderTarget","setSize","dispatchEvent","CubeCamera","near","far","renderTarget","Object3D","cameraPX","PerspectiveCamera","layers","up","lookAt","add","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","parent","updateMatrixWorld","currentXrEnabled","currentRenderTarget","getRenderTarget","setRenderTarget","stencil","WebGLCubeRenderTarget","dummy","Number","isInteger","WebGLCubeMaps","mapTextureMapping","EquirectangularReflectionMapping","CubeReflectionMapping","EquirectangularRefractionMapping","CubeRefractionMapping","has","currentRenderList","getRenderList","currentRenderState","getRenderState","fromEquirectangularTexture","setRenderList","setRenderState","WebGLExtensions","getExtension","WebGLGeometries","geometries","wireframeAttributes","onGeometryDispose","event","target","buffergeometry","removeEventListener","memory","updateWireframeAttribute","geometryIndex","geometryPosition","l","arrayMax","Uint32BufferAttribute","Uint16BufferAttribute","previousAttribute","addEventListener","isBufferGeometry","isGeometry","_bufferGeometry","setFromObject","morphAttributes","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","textures","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","numericalSort","absNumericalSort","abs","WebGLMorphtargets","influencesList","morphInfluences","workInfluences","objectInfluences","morphTargetInfluences","influences","influence","sort","MAX_SAFE_INTEGER","morphInfluencesSum","getAttribute","morphBaseInfluence","morphTargetsRelative","getUniforms","setValue","WebGLObjects","updateMap","updateFromObject","CubeTexture","images","RGBFormat","DataTexture2DArray","wrapR","ClampToEdgeWrapping","DataTexture3D","RGBAFormat","shader","blending","NoBlending","mesh","currentMinFilter","LinearMipmapLinearFilter","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","n","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","string","createShader","shaderSource","compileShader","setOptional","upload","values","seqWithValue","programIdCount","getEncodingComponents","LinearEncoding","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","LogLuvEncoding","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","Error","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","end","snippet","parseInt","generatePrecision","precisionstring","WebGLProgram","cacheKey","getContext","shadowMapTypeDefine","shadowMapType","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","CubeUVRefractionMapping","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","combine","MultiplyOperation","MixOperation","AddOperation","generateEnvMapBlendingDefine","gammaFactorDefine","gammaFactor","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","flatShading","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexColors","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","alphaTest","physicallyCorrectLights","NoToneMapping","dithering","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","GLSL3","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","diagnostics","prefix","cachedUniforms","deleteShader","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","min","getMaxBones","normalMapType","ObjectSpaceNormalMap","TangentSpaceNormalMap","isFogExp2","maxMorphTargets","maxMorphNormals","directional","point","spot","rectArea","hemi","shadowMap","toneMapped","DoubleSide","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","indexOf","pop","WebGLProperties","painterSortStable","groupOrder","renderOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transparent","defaultProgram","getNextRenderItem","group","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","cameras","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","castShadow","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix4","Matrix4","matrix42","intensity","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","multiplyScalar","setFromMatrixPosition","sub","transformDirection","shadowUniforms","bias","normalBias","radius","mapSize","isSpotLight","cos","angle","penumbra","isRectAreaLight","identity","premultiply","extractRotation","isPointLight","isHemisphereLight","normalize","LTC_1","LTC_2","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","BasicDepthPacking","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","Frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowSide","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","BufferAttribute","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","RGBADepthPacking","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","visible","renderObject","shadowCamera","test","isMesh","isLine","isPoints","receiveShadow","frustumCulled","intersectsObject","modelViewMatrix","multiplyMatrices","groups","k","kl","groupMaterial","depthMaterial","children","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","multiply","isPointLightShadow","pars","updateProjectionMatrix","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","equals","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LessEqualDepth","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","parseFloat","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CullFaceBack","CULL_FACE","equationToGL","AddEquation","FUNC_ADD","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","MinEquation","MIN","MaxEquation","MAX","MIN_EXT","MAX_EXT","factorToGL","ZeroFactor","ZERO","OneFactor","ONE","SrcColorFactor","SRC_COLOR","SrcAlphaFactor","SRC_ALPHA","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","DstColorFactor","DST_COLOR","DstAlphaFactor","DST_ALPHA","OneMinusSrcColorFactor","ONE_MINUS_SRC_COLOR","OneMinusSrcAlphaFactor","ONE_MINUS_SRC_ALPHA","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","BLEND","CustomBlending","blendEquationSeparate","blendFuncSeparate","NormalBlending","AdditiveBlending","blendFunc","SubtractiveBlending","MultiplyBlending","frontFace","CW","CCW","cullFace","CullFaceNone","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","useProgram","setMaterial","frontFaceCW","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","setLineWidth","lineWidth","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","error","texImage3D","WebGLTextures","_gl","utils","_videoTextures","_canvas","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","document","createElementNS","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","max","HTMLImageElement","HTMLCanvasElement","ImageBitmap","MathUtils","floorPowerOfTwo","canvas","drawImage","isPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","internalFormat","RED","R32F","HALF_FLOAT","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","f","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LINEAR","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","mipmaps","setTextureParameters","mipmap","mipmapImage","onUpdate","setTextureCubeDynamic","wrappingToGL","RepeatWrapping","REPEAT","CLAMP_TO_EDGE","MirroredRepeatWrapping","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipmapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","UnsignedIntType","DEPTH_COMPONENT24","UnsignedInt248Type","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DepthFormat","UnsignedShortType","DepthStencilFormat","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","samples","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isWebGLMultisampleRenderTarget","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","updateMultisampleRenderTarget","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","mask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","WebGLUtils","UnsignedByteType","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","IntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","RedFormat","RedIntegerFormat","RED_INTEGER","RGFormat","RG","RGIntegerFormat","RG_INTEGER","RGBIntegerFormat","RGB_INTEGER","RGBAIntegerFormat","RGBA_INTEGER","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","RGBA_BPTC_Format","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","WebXRController","_targetRay","_grip","_hand","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","forEach","disconnect","setFramebuffer","animation","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","then","cameraLPos","cameraRPos","updateCamera","getInverse","getCamera","depthNear","depthFar","ipd","distanceTo","projL","projectionMatrix","projR","topFov","bottomFov","leftFov","rightFov","left","right","zOffset","xOffset","decompose","quaternion","translateX","translateZ","compose","near2","far2","left2","right2","top2","bottom2","makePerspective","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","view","fromArray","transform","WebGLMaterials","refreshUniformsCommon","emissiveIntensity","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","negate","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","isMeshBasicMaterial","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","gapSize","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","materials","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","rangeMin","rangeMax","initGLContext","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","getSize","updateStyle","style","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","determinant","setProgram","rangeFactor","dataCount","rangeStart","drawRange","rangeCount","Infinity","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","traverse","isLight","compiled","material2","initMaterial","projectObject","isGroup","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","isArrayCamera","jl","camera2","normalMatrix","renderObjectImmediate","onAfterRender","lightsStateVersion","programCacheKey","programChange","onBeforeCompile","needsLights","materialNeedsLights","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","sqrt","ceilPowerOfTwo","boneMatrices","boneTextureSize","window","isCamera","setFromProjectionMatrix","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","pow","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","__THREE_DEVTOOLS__","CustomEvent","detail","Group","joints","inputState","pinching","XRHand","LITTLE_PHALANX_TIP","joint","inputPose","gripPose","handPose","targetRay","grip","hand","jointPose","getJointPose","jointRadius","indexTip","INDEX_PHALANX_TIP","thumbTip","THUMB_PHALANX_TIP","distanceToPinch","threshold","handedness","getPose","targetRaySpace","gripSpace"],"mappings":"6tDAGA,SAASA,GAAaC,EAAMC,EAAOC,EAAQC,EAAQC,EAAMC,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAYC,GAEjHC,GAAQC,KAAMC,KAAM,KAAMT,EAASC,EAAOC,EAAOC,EAAWC,EAAWN,EAAQC,EAAMM,EAAYC,GAEjGG,KAAKC,MAAQ,CAAEf,KAAMA,GAAQ,KAAMC,MAAOA,GAAS,EAAGC,OAAQA,GAAU,GAExEY,KAAKN,eAA0BQ,IAAdR,EAA0BA,EAAYS,EACvDH,KAAKL,eAA0BO,IAAdP,EAA0BA,EAAYQ,EAEvDH,KAAKI,iBAAkB,EACvBJ,KAAKK,OAAQ,EACbL,KAAKM,gBAAkB,EAEvBN,KAAKO,aAAc,EChBpB,SAASC,KAER,IAAIC,EAAU,KACVC,GAAc,EACdC,EAAgB,KAChBC,EAAY,KAEhB,SAASC,EAAkBC,EAAMC,GAEhCJ,EAAeG,EAAMC,GAErBH,EAAYH,EAAQO,sBAAuBH,GAI5C,MAAO,CAENI,MAAO,YAEe,IAAhBP,GACkB,OAAlBC,IAELC,EAAYH,EAAQO,sBAAuBH,GAE3CH,GAAc,IAIfQ,KAAM,WAELT,EAAQU,qBAAsBP,GAE9BF,GAAc,GAIfU,iBAAkB,SAAWC,GAE5BV,EAAgBU,GAIjBC,WAAY,SAAWC,GAEtBd,EAAUc,IC5Cb,SAASC,GAAiBC,EAAIC,GAE7B,MAAMC,EAAWD,EAAaC,SAExBC,EAAU,IAAIC,QA6JpB,MAAO,CAENC,IAjED,SAAcC,GAIb,OAFKA,EAAUC,+BAA+BD,EAAYA,EAAU7C,MAE7D0C,EAAQE,IAAKC,IA8DpBE,OA1DD,SAAiBF,GAEXA,EAAUC,+BAA+BD,EAAYA,EAAU7C,MAEpE,MAAMA,EAAO0C,EAAQE,IAAKC,GAErB7C,IAEJuC,EAAGS,aAAchD,EAAKiD,QAEtBP,EAAQQ,OAAQL,KAiDjBM,OA3CD,SAAiBN,EAAWO,GAE3B,GAAKP,EAAUQ,oBAAsB,CAEpC,IAAIC,EAASZ,EAAQE,IAAKC,GAa1B,cAXOS,GAAUA,EAAOC,QAAUV,EAAUU,UAE3Cb,EAAQc,IAAKX,EAAW,CACvBI,OAAQJ,EAAUI,OAClB7C,KAAMyC,EAAUzC,KAChBqD,gBAAiBZ,EAAUa,YAC3BH,QAASV,EAAUU,WASjBV,EAAUC,+BAA+BD,EAAYA,EAAU7C,MAEpE,MAAMA,EAAO0C,EAAQE,IAAKC,QAEZ7B,IAAThB,EAEJ0C,EAAQc,IAAKX,EA/If,SAAuBA,EAAWO,GAEjC,MAAMO,EAAQd,EAAUc,MAClBC,EAAQf,EAAUe,MAElBX,EAASV,EAAGsB,eAElBtB,EAAGuB,WAAYV,EAAYH,GAC3BV,EAAGwB,WAAYX,EAAYO,EAAOC,GAElCf,EAAUmB,mBAEV,IAAI5D,EAAOmC,EAAG0B,MAoCd,OAlCKN,aAAiBO,aAErB9D,EAAOmC,EAAG0B,MAECN,aAAiBQ,eAIjBR,aAAiBS,YAE5BhE,EAAOmC,EAAG8B,eAECV,aAAiBW,WAE5BlE,EAAOmC,EAAGgC,MAECZ,aAAiBa,YAE5BpE,EAAOmC,EAAGkC,aAECd,aAAiBe,WAE5BtE,EAAOmC,EAAGoC,IAEChB,aAAiBiB,UAE5BxE,EAAOmC,EAAGsC,KAEClB,aAAiBmB,aAE5B1E,EAAOmC,EAAGwC,gBAIJ,CACN9B,OAAQA,EACR7C,KAAMA,EACNqD,gBAAiBE,EAAMqB,kBACvBzB,QAASV,EAAUU,SA2FKM,CAAchB,EAAWO,IAEtCpD,EAAKuD,QAAUV,EAAUU,WAxFtC,SAAuBN,EAAQJ,EAAWO,GAEzC,MAAMO,EAAQd,EAAUc,MAClBsB,EAAcpC,EAAUoC,YAE9B1C,EAAGuB,WAAYV,EAAYH,IAEE,IAAxBgC,EAAYC,MAIhB3C,EAAG4C,cAAe/B,EAAY,EAAGO,IAI5BlB,EAEJF,EAAG4C,cAAe/B,EAAY6B,EAAYG,OAASzB,EAAMqB,kBACxDrB,EAAOsB,EAAYG,OAAQH,EAAYC,OAIxC3C,EAAG4C,cAAe/B,EAAY6B,EAAYG,OAASzB,EAAMqB,kBACxDrB,EAAM0B,SAAUJ,EAAYG,OAAQH,EAAYG,OAASH,EAAYC,QAIvED,EAAYC,OAAU,GA+DtBI,CAActF,EAAKiD,OAAQJ,EAAWO,GAEtCpD,EAAKuD,QAAUV,EAAUU,WFvI5BxD,GAAYwF,UAAYC,OAAOC,OAAQ7E,GAAQ2E,WAC/CxF,GAAYwF,UAAUG,YAAc3F,GAEpCA,GAAYwF,UAAUI,eAAgB,EGUtC,MAAMC,WAA0BC,GAE/BC,YAAa7F,EAAQ,EAAGC,EAAS,EAAG6F,EAAQ,EAAGC,EAAgB,EAAGC,EAAiB,EAAGC,EAAgB,GAErGC,QAEArF,KAAKV,KAAO,oBAEZU,KAAKsF,WAAa,CACjBnG,MAAOA,EACPC,OAAQA,EACR6F,MAAOA,EACPC,cAAeA,EACfC,eAAgBA,EAChBC,cAAeA,GAGhB,MAAMG,EAAQvF,KAIdkF,EAAgBM,KAAKC,MAAOP,GAC5BC,EAAiBK,KAAKC,MAAON,GAC7BC,EAAgBI,KAAKC,MAAOL,GAI5B,MAAMM,EAAU,GACVC,EAAW,GACXC,EAAU,GACVC,EAAM,GAIZ,IAAIC,EAAmB,EACnBC,EAAa,EAkBjB,SAASC,EAAYC,EAAGC,EAAGC,EAAGC,EAAMC,EAAMlH,EAAOC,EAAQ6F,EAAOqB,EAAOC,EAAOC,GAE7E,MAAMC,EAAetH,EAAQmH,EACvBI,EAAgBtH,EAASmH,EAEzBI,EAAYxH,EAAQ,EACpByH,EAAaxH,EAAS,EACtByH,EAAY5B,EAAQ,EAEpB6B,EAASR,EAAQ,EACjBS,EAASR,EAAQ,EAEvB,IAAIS,EAAgB,EAChBC,EAAa,EAEjB,MAAMC,EAAS,IAAIC,GAInB,IAAM,IAAIC,EAAK,EAAGA,EAAKL,EAAQK,IAAQ,CAEtC,MAAMC,EAAID,EAAKV,EAAgBE,EAE/B,IAAM,IAAIU,EAAK,EAAGA,EAAKR,EAAQQ,IAAQ,CAEtC,MAAMC,EAAID,EAAKb,EAAeE,EAI9BO,EAAQjB,GAAMsB,EAAInB,EAClBc,EAAQhB,GAAMmB,EAAIhB,EAClBa,EAAQf,GAAMU,EAIdlB,EAAS6B,KAAMN,EAAOK,EAAGL,EAAOG,EAAGH,EAAOO,GAI1CP,EAAQjB,GAAM,EACdiB,EAAQhB,GAAM,EACdgB,EAAQf,GAAMlB,EAAQ,EAAI,GAAM,EAIhCW,EAAQ4B,KAAMN,EAAOK,EAAGL,EAAOG,EAAGH,EAAOO,GAIzC5B,EAAI2B,KAAMF,EAAKhB,GACfT,EAAI2B,KAAM,EAAMJ,EAAKb,GAIrBS,GAAiB,GAYnB,IAAM,IAAII,EAAK,EAAGA,EAAKb,EAAOa,IAE7B,IAAM,IAAIE,EAAK,EAAGA,EAAKhB,EAAOgB,IAAQ,CAErC,MAAMI,EAAI5B,EAAmBwB,EAAKR,EAASM,EACrCO,EAAI7B,EAAmBwB,EAAKR,GAAWM,EAAK,GAC5CQ,EAAI9B,GAAqBwB,EAAK,GAAMR,GAAWM,EAAK,GACpDS,EAAI/B,GAAqBwB,EAAK,GAAMR,EAASM,EAInD1B,EAAQ8B,KAAME,EAAGC,EAAGE,GACpBnC,EAAQ8B,KAAMG,EAAGC,EAAGC,GAIpBZ,GAAc,EAQhB1B,EAAMuC,SAAU/B,EAAYkB,EAAYT,GAIxCT,GAAckB,EAIdnB,GAAoBkB,EAhHrBhB,EAAY,IAAK,IAAK,KAAO,GAAK,EAAGf,EAAO7F,EAAQD,EAAOiG,EAAeD,EAAgB,GAC1Fa,EAAY,IAAK,IAAK,IAAK,GAAK,EAAGf,EAAO7F,GAAUD,EAAOiG,EAAeD,EAAgB,GAC1Fa,EAAY,IAAK,IAAK,IAAK,EAAG,EAAG7G,EAAO8F,EAAO7F,EAAQ8F,EAAeE,EAAe,GACrFY,EAAY,IAAK,IAAK,IAAK,GAAK,EAAG7G,EAAO8F,GAAS7F,EAAQ8F,EAAeE,EAAe,GACzFY,EAAY,IAAK,IAAK,IAAK,GAAK,EAAG7G,EAAOC,EAAQ6F,EAAOC,EAAeC,EAAgB,GACxFa,EAAY,IAAK,IAAK,KAAO,GAAK,EAAG7G,EAAOC,GAAU6F,EAAOC,EAAeC,EAAgB,GAI5FnF,KAAK+H,SAAUrC,GACf1F,KAAKgI,aAAc,WAAY,IAAIC,GAAwBtC,EAAU,IACrE3F,KAAKgI,aAAc,SAAU,IAAIC,GAAwBrC,EAAS,IAClE5F,KAAKgI,aAAc,KAAM,IAAIC,GAAwBpC,EAAK,KCtD5D,MAAMqC,WAA4BnD,GAEjCC,YAAa7F,EAAOC,EAAQ8F,EAAeC,GAE1CE,QACArF,KAAKV,KAAO,sBAEZU,KAAKsF,WAAa,CACjBnG,MAAOA,EACPC,OAAQA,EACR8F,cAAeA,EACfC,eAAgBA,GAMjB,MAAMgD,GAHNhJ,EAAQA,GAAS,GAGU,EACrBiJ,GAHNhJ,EAASA,GAAU,GAGU,EAEvBkH,EAAQd,KAAKC,MAAOP,IAAmB,EACvCqB,EAAQf,KAAKC,MAAON,IAAoB,EAExC2B,EAASR,EAAQ,EACjBS,EAASR,EAAQ,EAEjB8B,EAAgBlJ,EAAQmH,EACxBgC,EAAiBlJ,EAASmH,EAI1Bb,EAAU,GACVC,EAAW,GACXC,EAAU,GACVC,EAAM,GAIZ,IAAM,IAAIuB,EAAK,EAAGA,EAAKL,EAAQK,IAAQ,CAEtC,MAAMC,EAAID,EAAKkB,EAAiBF,EAEhC,IAAM,IAAId,EAAK,EAAGA,EAAKR,EAAQQ,IAAQ,CAEtC,MAAMC,EAAID,EAAKe,EAAgBF,EAE/BxC,EAAS6B,KAAMD,GAAKF,EAAG,GAEvBzB,EAAQ4B,KAAM,EAAG,EAAG,GAEpB3B,EAAI2B,KAAMF,EAAKhB,GACfT,EAAI2B,KAAM,EAAMJ,EAAKb,IAQvB,IAAM,IAAIa,EAAK,EAAGA,EAAKb,EAAOa,IAE7B,IAAM,IAAIE,EAAK,EAAGA,EAAKhB,EAAOgB,IAAQ,CAErC,MAAMI,EAAIJ,EAAKR,EAASM,EAClBO,EAAIL,EAAKR,GAAWM,EAAK,GACzBQ,EAAMN,EAAK,EAAMR,GAAWM,EAAK,GACjCS,EAAMP,EAAK,EAAMR,EAASM,EAIhC1B,EAAQ8B,KAAME,EAAGC,EAAGE,GACpBnC,EAAQ8B,KAAMG,EAAGC,EAAGC,GAQtB7H,KAAK+H,SAAUrC,GACf1F,KAAKgI,aAAc,WAAY,IAAIC,GAAwBtC,EAAU,IACrE3F,KAAKgI,aAAc,SAAU,IAAIC,GAAwBrC,EAAS,IAClE5F,KAAKgI,aAAc,KAAM,IAAIC,GAAwBpC,EAAK,KC5GrD,SAAS0C,GAAeC,GAE9B,MAAMC,EAAM,GAEZ,IAAM,MAAMxC,KAAKuC,EAAM,CAEtBC,EAAKxC,GAAM,GAEX,IAAM,MAAMyC,KAAKF,EAAKvC,GAAM,CAE3B,MAAM0C,EAAWH,EAAKvC,GAAKyC,GAEtBC,IAAcA,EAASC,SAC3BD,EAASE,WAAaF,EAASG,WAC/BH,EAASI,WAAaJ,EAASK,WAAaL,EAASM,WACrDN,EAASO,WAETT,EAAKxC,GAAKyC,GAAMC,EAASQ,QAEdC,MAAMC,QAASV,GAE1BF,EAAKxC,GAAKyC,GAAMC,EAASW,QAIzBb,EAAKxC,GAAKyC,GAAMC,GAQnB,OAAOF,EAID,SAASc,GAAeC,GAE9B,MAAMC,EAAS,GAEf,IAAM,IAAIxD,EAAI,EAAGA,EAAIuD,EAASE,OAAQzD,IAAO,CAE5C,MAAM0D,EAAMpB,GAAeiB,EAAUvD,IAErC,IAAM,MAAMyC,KAAKiB,EAEhBF,EAAQf,GAAMiB,EAAKjB,GAMrB,OAAOe,EAMR,MAAMG,GAAgB,CAAET,MAAOZ,GAAesB,MAAON,ICtCrD,SAASO,GAAgBxE,GAExByE,GAAShK,KAAMC,MAEfA,KAAKV,KAAO,iBAEZU,KAAKgK,QAAU,GACfhK,KAAKwJ,SAAW,GAEhBxJ,KAAKiK,aClCmB,oGDmCxBjK,KAAKkK,eEnCmB,qEFqCxBlK,KAAKmK,UAAY,EAEjBnK,KAAKoK,WAAY,EACjBpK,KAAKqK,mBAAqB,EAE1BrK,KAAKsK,KAAM,EACXtK,KAAKuK,QAAS,EACdvK,KAAKwK,UAAW,EAEhBxK,KAAKyK,UAAW,EAChBzK,KAAK0K,cAAe,EACpB1K,KAAK2K,cAAe,EAEpB3K,KAAK4K,WAAa,CACjBC,aAAa,EACbC,WAAW,EACXC,aAAa,EACbC,kBAAkB,GAKnBhL,KAAKiL,uBAAyB,CAC7BC,MAAS,CAAE,EAAG,EAAG,GACjBC,GAAM,CAAE,EAAG,GACXC,IAAO,CAAE,EAAG,IAGbpL,KAAKqL,yBAAsBnL,EAC3BF,KAAKsL,oBAAqB,EAE1BtL,KAAKuL,YAAc,UAECrL,IAAfoF,IAECA,EAAWkG,WAMhBxL,KAAKyL,UAAWnG,IAMlBwE,GAAerF,UAAYC,OAAOC,OAAQoF,GAAStF,WACnDqF,GAAerF,UAAUG,YAAckF,GAEvCA,GAAerF,UAAUiH,kBAAmB,EAE5C5B,GAAerF,UAAUkH,KAAO,SAAWC,GA0B1C,OAxBA7B,GAAStF,UAAUkH,KAAK5L,KAAMC,KAAM4L,GAEpC5L,KAAKkK,eAAiB0B,EAAO1B,eAC7BlK,KAAKiK,aAAe2B,EAAO3B,aAE3BjK,KAAKwJ,SAAWjB,GAAeqD,EAAOpC,UAEtCxJ,KAAKgK,QAAUtF,OAAOmH,OAAQ,GAAID,EAAO5B,SAEzChK,KAAKoK,UAAYwB,EAAOxB,UACxBpK,KAAKqK,mBAAqBuB,EAAOvB,mBAEjCrK,KAAKuK,OAASqB,EAAOrB,OACrBvK,KAAKwK,SAAWoB,EAAOpB,SAEvBxK,KAAKyK,SAAWmB,EAAOnB,SAEvBzK,KAAK0K,aAAekB,EAAOlB,aAC3B1K,KAAK2K,aAAeiB,EAAOjB,aAE3B3K,KAAK4K,WAAalG,OAAOmH,OAAQ,GAAID,EAAOhB,YAE5C5K,KAAKuL,YAAcK,EAAOL,YAEnBvL,MAIR8J,GAAerF,UAAUqH,OAAS,SAAWC,GAE5C,MAAM7M,EAAO6K,GAAStF,UAAUqH,OAAO/L,KAAMC,KAAM+L,GAEnD7M,EAAKqM,YAAcvL,KAAKuL,YACxBrM,EAAKsK,SAAW,GAEhB,IAAM,MAAMwC,KAAQhM,KAAKwJ,SAAW,CAEnC,MACMjI,EADUvB,KAAKwJ,SAAUwC,GACTzK,MAEjBA,GAASA,EAAM2H,UAEnBhK,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,IACNiC,MAAOA,EAAMuK,OAAQC,GAAOE,MAGlB1K,GAASA,EAAMqH,QAE1B1J,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,IACNiC,MAAOA,EAAM2K,UAGH3K,GAASA,EAAMwH,UAE1B7J,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,KACNiC,MAAOA,EAAM4K,WAGH5K,GAASA,EAAMyH,UAE1B9J,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,KACNiC,MAAOA,EAAM4K,WAGH5K,GAASA,EAAM0H,UAE1B/J,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,KACNiC,MAAOA,EAAM4K,WAGH5K,GAASA,EAAMsH,UAE1B3J,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,KACNiC,MAAOA,EAAM4K,WAGH5K,GAASA,EAAMuH,UAE1B5J,EAAKsK,SAAUwC,GAAS,CACvB1M,KAAM,KACNiC,MAAOA,EAAM4K,WAKdjN,EAAKsK,SAAUwC,GAAS,CACvBzK,MAAOA,GASLmD,OAAO0H,KAAMpM,KAAKgK,SAAUN,OAAS,IAAIxK,EAAK8K,QAAUhK,KAAKgK,SAElE9K,EAAK+K,aAAejK,KAAKiK,aACzB/K,EAAKgL,eAAiBlK,KAAKkK,eAE3B,MAAMU,EAAa,GAEnB,IAAM,MAAMyB,KAAOrM,KAAK4K,YAES,IAA3B5K,KAAK4K,WAAYyB,KAAiBzB,EAAYyB,IAAQ,GAM5D,OAFK3H,OAAO0H,KAAMxB,GAAalB,OAAS,IAAIxK,EAAK0L,WAAaA,GAEvD1L,GG5ED,MAAMoN,GAAc,CAC1BC,kBCpIwB,yFDqIxBC,uBErIwB,qEFsIxBC,mBGtIwB,iFHuIxBC,eIvIwB,whBJwIxBC,oBKxIwB,gGLyIxBC,aMzIwB,2CN0IxBC,mBO1IwB,yHP2IxBC,MQ3IwB,utYR4IxBC,sBS5IwB,83CT6IxBC,yBU7IwB,ypBV8IxBC,8BW9IwB,sIX+IxBC,4BY/IwB,6EZgJxBC,uBahJwB,mFbiJxBC,ecjJwB,kEdkJxBC,oBelJwB,2DfmJxBC,kBgBnJwB,sGhBoJxBC,aiBpJwB,kPjBqJxBC,OkBrJwB,u5GlBsJxBC,4BmBtJwB,y7InBuJxBC,qBoBvJwB,qtBpBwJxBC,4BqBxJwB,0JrByJxBC,uBsBzJwB,2KtB0JxBC,qBuB1JwB,yNvB2JxBC,0BwB3JwB,2ExB4JxBC,mByB5JwB,0DzB6JxBC,wB0B7JwB,0jH1B8JxBC,gB2B9JwB,4/C3B+JxBC,4B4B/JwB,iP5BgKxBC,qB6BhKwB,2U7BiKxBC,mB8BjKwB,mT9BkKxBC,8B+BlKwB,yrG/BmKxBC,cgCnKwB,krBhCoKxBC,WiCpKwB,+DjCqKxBC,gBkCrKwB,4DlCsKxBC,amCtKwB,0SnCuKxBC,kBoCvKwB,4NpCwKxBC,0BqCxKwB,gcrCyKxBC,kBsCzKwB,6QtC0KxBC,uBuC1KwB,yGvC2KxBC,sBwC3KwB,mgGxC4KxBC,kByC5KwB,6iKzC6KxBC,qB0C7KwB,wE1C8KxBC,0B2C9KwB,mhC3C+KxBC,sB4C/KwB,0M5CgLxBC,2B6ChLwB,m1C7CiLxBC,yB8CjLwB,y8C9CkLxBC,8B+ClLwB,wqM/CmLxBC,sBgDnLwB,ikJhDoLxBC,qBiDpLwB,4iCjDqLxBC,oBkDrLwB,yRlDsLxBC,qBmDtLwB,4SnDuLxBC,0BoDvLwB,iLpDwLxBC,wBqDxLwB,sMrDyLxBC,mBsDzLwB,qZtD0LxBC,auD1LwB,8JvD2LxBC,kBwD3LwB,2DxD4LxBC,sByD5LwB,sWzD6LxBC,2B0D7LwB,2N1D8LxBC,sB2D9LwB,8Q3D+LxBC,2B4D/LwB,6E5DgMxBC,mB6DhMwB,wrB7DiMxBC,wB8DjMwB,4O9DkMxBC,mB+DlMwB,69B/DmMxBC,sBgEnMwB,8iChEoMxBC,qBiEpMwB,2vBjEqMxBC,wBkErMwB,qrClEsMxBC,gCmEtMwB,6EnEuMxBC,+BoEvMwB,sXpEwMxBC,wBqExMwB,ySrEyMxBC,QsEzMwB,wvDtE0MxBC,6BuE1MwB,8MvE2MxBC,ewE3MwB,kOxE4MxBC,mByE5MwB,wFzE6MxBC,wB0E7MwB,2mB1E8MxBC,sB2E9MwB,8Q3E+MxBC,2B4E/MwB,6E5EgNxBC,wB6EhNwB,yqV7EiNxBC,sB8EjNwB,86C9EkNxBC,iB+ElNwB,slD/EmNxBC,yBgFnNwB,wjDhFoNxBC,gBiFpNwB,0OjFqNxBC,qBkFrNwB,wjClFsNxBC,gBmFtNwB,2YnFuNxBC,kBoFvNwB,qepFwNxBC,qBqFxNwB,wMrFyNxBC,0BsFzNwB,2EtF0NxBC,qBuF1NwB,qGvF2NxBC,0BwF3NwB,4hExF4NxBC,yByF5NwB,0GzF6NxBC,8B0F7NwB,mF1F8NxBC,iB2F9NwB,iG3F+NxBC,e4F/NwB,0J5FgOxBC,U6FhOwB,6E7FiOxBC,kB8FjOwB,4F9FkOxBC,gB+FlOwB,mJ/FmOxBC,WgGnOwB,sHhGoOxBC,gBiGpOwB,kSjGsOxBC,gBkGtOwB,4OlGuOxBC,gBmGvOwB,0KnGwOxBC,UoGxOwB,4WpGyOxBC,UqGzOwB,wQrG0OxBC,WsG1OwB,s/BtG2OxBC,WuG3OwB,qjCvG4OxBC,kBwG5OwB,wuBxG6OxBC,kByG7OwB,4uBzG8OxBC,c0G9OwB,gY1G+OxBC,c2G/OwB,6M3GgPxBC,gB4GhPwB,o1B5GiPxBC,gB6GjPwB,+iB7GkPxBC,e8GlPwB,+wD9GmPxBC,e+GnPwB,y3B/GoPxBC,iBgHpPwB,66EhHqPxBC,iBiHrPwB,ipCjHsPxBC,gBkHtPwB,0nDlHuPxBC,gBmHvPwB,ojCnHwPxBC,coHxPwB,yzDpHyPxBC,cqHzPwB,gsCrH0PxBC,esH1PwB,omEtH2PxBC,euH3PwB,4vCvH4PxBC,kBwH5PwB,ytGxH6PxBC,kByH7PwB,k8CzH8PxBC,Y0H9PwB,qwB1H+PxBC,Y2H/PwB,44C3HgQxBC,Y4HhQwB,0wB5HiQxBC,Y6HjQwB,6sB7HkQxBC,Y8HlQwB,ib9HmQxBC,Y+HnQwB,ma/HoQxBC,YgIpQwB,gvBhIqQxBC,YiIrQwB,ypCCQnBC,GAAc,CAEnBhH,OAAQ,CAEPiH,QAAS,CAAElT,MAAO,IAAImT,GAAO,WAC7BC,QAAS,CAAEpT,MAAO,GAElBqT,IAAK,CAAErT,MAAO,MACdsT,YAAa,CAAEtT,MAAO,IAAIuT,IAC1BC,aAAc,CAAExT,MAAO,IAAIuT,IAE3BE,SAAU,CAAEzT,MAAO,OAIpB0T,YAAa,CAEZC,YAAa,CAAE3T,MAAO,OAIvB4T,OAAQ,CAEPC,OAAQ,CAAE7T,MAAO,MACjB8T,WAAY,CAAE9T,OAAS,GACvB+T,aAAc,CAAE/T,MAAO,GACvBgU,gBAAiB,CAAEhU,MAAO,KAC1BiU,YAAa,CAAEjU,MAAO,IAIvBkU,MAAO,CAENC,MAAO,CAAEnU,MAAO,MAChBoU,eAAgB,CAAEpU,MAAO,IAI1BqU,SAAU,CAETC,SAAU,CAAEtU,MAAO,MACnBuU,kBAAmB,CAAEvU,MAAO,IAI7BwU,YAAa,CAEZC,YAAa,CAAEzU,MAAO,OAIvB0U,QAAS,CAERC,QAAS,CAAE3U,MAAO,MAClB4U,UAAW,CAAE5U,MAAO,IAIrB6U,UAAW,CAEVC,UAAW,CAAE9U,MAAO,MACpB+U,YAAa,CAAE/U,MAAO,IAAIgV,GAAS,EAAG,KAIvCC,gBAAiB,CAEhBC,gBAAiB,CAAElV,MAAO,MAC1BmV,kBAAmB,CAAEnV,MAAO,GAC5BoV,iBAAkB,CAAEpV,MAAO,IAI5BqV,aAAc,CAEbC,aAAc,CAAEtV,MAAO,OAIxBuV,aAAc,CAEbC,aAAc,CAAExV,MAAO,OAIxByV,YAAa,CAEZC,YAAa,CAAE1V,MAAO,OAIvB+I,IAAK,CAEJ4M,WAAY,CAAE3V,MAAO,OACrB4V,QAAS,CAAE5V,MAAO,GAClB6V,OAAQ,CAAE7V,MAAO,KACjB8V,SAAU,CAAE9V,MAAO,IAAImT,GAAO,YAI/BnK,OAAQ,CAEP+M,kBAAmB,CAAE/V,MAAO,IAE5BgW,WAAY,CAAEhW,MAAO,IAErBiW,kBAAmB,CAAEjW,MAAO,GAAIkW,WAAY,CAC3CC,UAAW,GACXxM,MAAO,KAGRyM,wBAAyB,CAAEpW,MAAO,GAAIkW,WAAY,CACjDG,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,cAAe,KAGhBC,qBAAsB,CAAEzW,MAAO,IAC/B0W,wBAAyB,CAAE1W,MAAO,IAElC2W,WAAY,CAAE3W,MAAO,GAAIkW,WAAY,CACpCvM,MAAO,GACPiN,SAAU,GACVT,UAAW,GACXU,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,MAAO,KAGRC,iBAAkB,CAAEjX,MAAO,GAAIkW,WAAY,CAC1CG,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,cAAe,KAGhBU,cAAe,CAAElX,MAAO,IACxBmX,iBAAkB,CAAEnX,MAAO,IAE3BoX,YAAa,CAAEpX,MAAO,GAAIkW,WAAY,CACrCvM,MAAO,GACPiN,SAAU,GACVI,MAAO,GACPH,SAAU,KAGXQ,kBAAmB,CAAErX,MAAO,GAAIkW,WAAY,CAC3CG,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,cAAe,GACfc,iBAAkB,GAClBC,gBAAiB,KAGlBC,eAAgB,CAAExX,MAAO,IACzByX,kBAAmB,CAAEzX,MAAO,IAE5B0X,iBAAkB,CAAE1X,MAAO,GAAIkW,WAAY,CAC1CC,UAAW,GACXwB,SAAU,GACVC,YAAa,KAIdC,eAAgB,CAAE7X,MAAO,GAAIkW,WAAY,CACxCvM,MAAO,GACPiN,SAAU,GACVhZ,MAAO,GACPC,OAAQ,KAGTia,MAAO,CAAE9X,MAAO,MAChB+X,MAAO,CAAE/X,MAAO,OAIjBgY,OAAQ,CAEP9E,QAAS,CAAElT,MAAO,IAAImT,GAAO,WAC7BC,QAAS,CAAEpT,MAAO,GAClBiY,KAAM,CAAEjY,MAAO,GACfkY,MAAO,CAAElY,MAAO,GAChBqT,IAAK,CAAErT,MAAO,MACdyT,SAAU,CAAEzT,MAAO,MACnBsT,YAAa,CAAEtT,MAAO,IAAIuT,KAI3B4E,OAAQ,CAEPjF,QAAS,CAAElT,MAAO,IAAImT,GAAO,WAC7BC,QAAS,CAAEpT,MAAO,GAClBoY,OAAQ,CAAEpY,MAAO,IAAIgV,GAAS,GAAK,KACnCqD,SAAU,CAAErY,MAAO,GACnBqT,IAAK,CAAErT,MAAO,MACdyT,SAAU,CAAEzT,MAAO,MACnBsT,YAAa,CAAEtT,MAAO,IAAIuT,MCvMtB+E,GAAY,CAEjBC,MAAO,CAENtQ,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYS,YACZT,GAAYW,OACZX,GAAYiB,MACZjB,GAAYoB,SACZpB,GAAYlK,MAGbL,aAAcqC,GAAY+G,eAC1BnJ,eAAgBoC,GAAY8G,gBAI7B2G,QAAS,CAERvQ,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYS,YACZT,GAAYW,OACZX,GAAYiB,MACZjB,GAAYoB,SACZpB,GAAYuB,YACZvB,GAAYlK,IACZkK,GAAYjK,OACZ,CACCyP,SAAU,CAAEzY,MAAO,IAAImT,GAAO,OAIhCzK,aAAcqC,GAAYiH,iBAC1BrJ,eAAgBoC,GAAYgH,kBAI7B2G,MAAO,CAENzQ,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYS,YACZT,GAAYW,OACZX,GAAYiB,MACZjB,GAAYoB,SACZpB,GAAYuB,YACZvB,GAAYyB,QACZzB,GAAY4B,UACZ5B,GAAYgC,gBACZhC,GAAYlK,IACZkK,GAAYjK,OACZ,CACCyP,SAAU,CAAEzY,MAAO,IAAImT,GAAO,IAC9BwF,SAAU,CAAE3Y,MAAO,IAAImT,GAAO,UAC9ByF,UAAW,CAAE5Y,MAAO,OAItB0I,aAAcqC,GAAYuH,eAC1B3J,eAAgBoC,GAAYsH,gBAI7BwG,SAAU,CAET5Q,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYW,OACZX,GAAYiB,MACZjB,GAAYoB,SACZpB,GAAYuB,YACZvB,GAAYyB,QACZzB,GAAY4B,UACZ5B,GAAYgC,gBACZhC,GAAYoC,aACZpC,GAAYsC,aACZtC,GAAYlK,IACZkK,GAAYjK,OACZ,CACCyP,SAAU,CAAEzY,MAAO,IAAImT,GAAO,IAC9B2F,UAAW,CAAE9Y,MAAO,GACpB+Y,UAAW,CAAE/Y,MAAO,GACpBgZ,gBAAiB,CAAEhZ,MAAO,MAI5B0I,aAAcqC,GAAYyH,kBAC1B7J,eAAgBoC,GAAYwH,mBAI7B0G,KAAM,CAELhR,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYiB,MACZjB,GAAYoB,SACZpB,GAAYuB,YACZvB,GAAYyB,QACZzB,GAAY4B,UACZ5B,GAAYgC,gBACZhC,GAAYwC,YACZxC,GAAYlK,IACZkK,GAAYjK,OACZ,CACCyP,SAAU,CAAEzY,MAAO,IAAImT,GAAO,OAIhCzK,aAAcqC,GAAYqH,cAC1BzJ,eAAgBoC,GAAYoH,eAI7B+G,OAAQ,CAEPjR,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYyB,QACZzB,GAAY4B,UACZ5B,GAAYgC,gBACZhC,GAAYlK,IACZ,CACCmQ,OAAQ,CAAElZ,MAAO,SAInB0I,aAAcqC,GAAYmH,gBAC1BvJ,eAAgBoC,GAAYkH,iBAI7B+F,OAAQ,CAEP/P,SAAUD,GAAe,CACxBiL,GAAY+E,OACZ/E,GAAYlK,MAGbL,aAAcqC,GAAY6H,YAC1BjK,eAAgBoC,GAAY4H,aAI7BwG,OAAQ,CAEPlR,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYlK,IACZ,CACCmP,MAAO,CAAElY,MAAO,GAChBoZ,SAAU,CAAEpZ,MAAO,GACnBqZ,UAAW,CAAErZ,MAAO,MAItB0I,aAAcqC,GAAY6G,gBAC1BjJ,eAAgBoC,GAAY4G,iBAI7BjO,MAAO,CAENuE,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYgC,kBAGbvM,aAAcqC,GAAYuG,WAC1B3I,eAAgBoC,GAAYsG,YAI7BiI,OAAQ,CAEPrR,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYyB,QACZzB,GAAY4B,UACZ5B,GAAYgC,gBACZ,CACC7B,QAAS,CAAEpT,MAAO,MAIpB0I,aAAcqC,GAAY2H,YAC1B/J,eAAgBoC,GAAY0H,aAI7B0F,OAAQ,CAEPlQ,SAAUD,GAAe,CACxBiL,GAAYkF,OACZlF,GAAYlK,MAGbL,aAAcqC,GAAYiI,YAC1BrK,eAAgBoC,GAAYgI,aAI7BwG,WAAY,CAEXtR,SAAU,CACTqL,YAAa,CAAEtT,MAAO,IAAIuT,IAC1BiG,IAAK,CAAExZ,MAAO,OAGf0I,aAAcqC,GAAYmG,gBAC1BvI,eAAgBoC,GAAYkG,iBAO7BwI,KAAM,CAELxR,SAAUD,GAAe,CACxBiL,GAAYW,OACZ,CACCR,QAAS,CAAEpT,MAAO,MAIpB0I,aAAcqC,GAAYqG,UAC1BzI,eAAgBoC,GAAYoG,WAI7BuI,SAAU,CAETzR,SAAU,CACT0R,UAAW,CAAE3Z,MAAO,OAGrB0I,aAAcqC,GAAY2G,cAC1B/I,eAAgBoC,GAAY0G,eAI7BmI,aAAc,CAEb3R,SAAUD,GAAe,CACxBiL,GAAYhH,OACZgH,GAAYgC,gBACZ,CACC4E,kBAAmB,CAAE7Z,MAAO,IAAI4F,IAChCkU,aAAc,CAAE9Z,MAAO,GACvB+Z,YAAa,CAAE/Z,MAAO,QAIxB0I,aAAcqC,GAAYyG,kBAC1B7I,eAAgBoC,GAAYwG,mBAI7ByI,OAAQ,CAEP/R,SAAUD,GAAe,CACxBiL,GAAYjK,OACZiK,GAAYlK,IACZ,CACCY,MAAO,CAAE3J,MAAO,IAAImT,GAAO,IAC3BC,QAAS,CAAEpT,MAAO,MAIpB0I,aAAcqC,GAAY+H,YAC1BnK,eAAgBoC,GAAY8H,cChR9B,SAASoH,GAAiBC,EAAUC,EAAUC,EAAOC,EAASC,GAE7D,MAAMC,EAAa,IAAIpH,GAAO,GAC9B,IAEIqH,EACAC,EAHAC,EAAa,EAKbC,EAAoB,KACpBC,EAA2B,EAC3BC,EAAqB,KA8KzB,SAASC,EAAUnR,EAAOoR,GAEzBX,EAAM/Z,QAAQsJ,MAAMmR,SAAUnR,EAAMqR,EAAGrR,EAAMsR,EAAGtR,EAAMvD,EAAG2U,EAAOT,GAIjE,MAAO,CAENY,cAAe,WAEd,OAAOX,GAGRY,cAAe,SAAWxR,EAAOoR,GAEhCR,EAAWpZ,IAAKwI,GAChB+Q,OAAuB/b,IAAVoc,EAAsBA,EAAQ,EAC3CD,EAAUP,EAAYG,IAGvBU,cAAe,WAEd,OAAOV,GAGRW,cAAe,SAAWN,GAEzBL,EAAaK,EACbD,EAAUP,EAAYG,IAGvBY,OA3MD,SAAiBC,EAAYC,EAAOC,EAAQC,GAE3C,IAAInC,GAA+B,IAAlBiC,EAAMG,QAAmBH,EAAMjC,WAAa,KAExDA,GAAcA,EAAW5R,YAE7B4R,EAAaY,EAAS5Z,IAAKgZ,IAO5B,MAAMqC,EAAK1B,EAAS0B,GACdC,EAAUD,EAAGE,YAAcF,EAAGE,aAE/BD,GAA4C,aAAjCA,EAAQE,uBAEvBxC,EAAa,MAIM,OAAfA,EAEJuB,EAAUP,EAAYG,GAEXnB,GAAcA,EAAWlS,UAEpCyT,EAAUvB,EAAY,GACtBmC,GAAa,IAITxB,EAAS8B,WAAaN,IAE1BxB,EAAS+B,MAAO/B,EAASgC,eAAgBhC,EAASiC,eAAgBjC,EAASkC,kBAIvE7C,IAAgBA,EAAW8C,eAAiB9C,EAAW+C,yBAA2B/C,EAAWgD,gCAAkChD,EAAWvb,UAAYwe,SAEzI7d,IAAZ8b,IAEJA,EAAU,IAAIgC,GACb,IAAIlZ,GAAmB,EAAG,EAAG,GAC7B,IAAIgF,GAAgB,CACnBkC,KAAM,yBACNxC,SAAUjB,GAAesR,GAAUmB,KAAKxR,UACxCS,aAAc4P,GAAUmB,KAAK/Q,aAC7BC,eAAgB2P,GAAUmB,KAAK9Q,eAC/B+T,KAAMC,EACNC,WAAW,EACXC,YAAY,EACZ9T,KAAK,KAIP0R,EAAQqC,SAASC,gBAAiB,UAClCtC,EAAQqC,SAASC,gBAAiB,MAElCtC,EAAQuC,eAAiB,SAAW9C,EAAUsB,EAAOC,GAEpDhd,KAAKwe,YAAYC,aAAczB,EAAOwB,cAKvC9Z,OAAOga,eAAgB1C,EAAQ2C,SAAU,SAAU,CAElD7c,IAAK,WAEJ,OAAO9B,KAAKwJ,SAAS4L,OAAO7T,SAM9Bqa,EAAQvZ,OAAQ2Z,IAIZlB,EAAW+C,0BAIf/C,EAAaA,EAAW8D,SAIzB5C,EAAQ2C,SAASnV,SAAS4L,OAAO7T,MAAQuZ,EACzCkB,EAAQ2C,SAASnV,SAAS6L,WAAW9T,MAAQuZ,EAAW8C,eAAkB,EAAI,EAEzE1B,IAAsBpB,GAC1BqB,IAA6BrB,EAAWrY,SACxC2Z,IAAuBX,EAASoD,cAEhC7C,EAAQ2C,SAASpe,aAAc,EAE/B2b,EAAoBpB,EACpBqB,EAA2BrB,EAAWrY,QACtC2Z,EAAqBX,EAASoD,aAK/B/B,EAAWgC,QAAS9C,EAASA,EAAQqC,SAAUrC,EAAQ2C,SAAU,EAAG,EAAG,OAE5D7D,GAAcA,EAAW5R,iBAEjBhJ,IAAd6b,IAEJA,EAAY,IAAIiC,GACf,IAAI9V,GAAqB,EAAG,GAC5B,IAAI4B,GAAgB,CACnBkC,KAAM,qBACNxC,SAAUjB,GAAesR,GAAUiB,WAAWtR,UAC9CS,aAAc4P,GAAUiB,WAAW7Q,aACnCC,eAAgB2P,GAAUiB,WAAW5Q,eACrC+T,KAAMc,EACNZ,WAAW,EACXC,YAAY,EACZ9T,KAAK,KAIPyR,EAAUsC,SAASC,gBAAiB,UAGpC5Z,OAAOga,eAAgB3C,EAAU4C,SAAU,MAAO,CAEjD7c,IAAK,WAEJ,OAAO9B,KAAKwJ,SAASuR,IAAIxZ,SAM3Bqa,EAAQvZ,OAAQ0Z,IAIjBA,EAAU4C,SAASnV,SAASuR,IAAIxZ,MAAQuZ,GAEH,IAAhCA,EAAWkE,kBAEflE,EAAWmE,eAIZlD,EAAU4C,SAASnV,SAASqL,YAAYtT,MAAMoK,KAAMmP,EAAWoE,QAE1DhD,IAAsBpB,GAC1BqB,IAA6BrB,EAAWrY,SACxC2Z,IAAuBX,EAASoD,cAEhC9C,EAAU4C,SAASpe,aAAc,EAEjC2b,EAAoBpB,EACpBqB,EAA2BrB,EAAWrY,QACtC2Z,EAAqBX,EAASoD,aAM/B/B,EAAWgC,QAAS/C,EAAWA,EAAUsC,SAAUtC,EAAU4C,SAAU,EAAG,EAAG,SC3L/E,SAASQ,GAAoB1d,EAAImJ,EAAYY,EAAY9J,GAEzD,MAAM0d,EAAsB3d,EAAG4d,aAAc5d,EAAG6d,oBAE1CC,EAAY7d,EAAaC,SAAW,KAAOiJ,EAAW9I,IAAK,2BAC3D0d,EAAe9d,EAAaC,UAA0B,OAAd4d,EAExCE,EAAgB,GAEhBC,EAAeC,EAAoB,MACzC,IAAIC,EAAeF,EAyEnB,SAASG,EAAuBC,GAE/B,OAAKpe,EAAaC,SAAkBF,EAAGse,gBAAiBD,GAEjDP,EAAUS,mBAAoBF,GAItC,SAASG,EAAyBH,GAEjC,OAAKpe,EAAaC,SAAkBF,EAAGye,kBAAmBJ,GAEnDP,EAAUY,qBAAsBL,GAuCxC,SAASH,EAAoBG,GAE5B,MAAMM,EAAgB,GAChBC,EAAoB,GACpBC,EAAoB,GAE1B,IAAM,IAAIC,EAAI,EAAGA,EAAInB,EAAqBmB,IAEzCH,EAAeG,GAAM,EACrBF,EAAmBE,GAAM,EACzBD,EAAmBC,GAAM,EAI1B,MAAO,CAGNlC,SAAU,KACVmC,QAAS,KACTpW,WAAW,EAEXgW,cAAeA,EACfC,kBAAmBA,EACnBC,kBAAmBA,EACnBG,OAAQX,EACRtU,WAAY,GACZkV,MAAO,MA4DT,SAASC,IAER,MAAMP,EAAgBR,EAAaQ,cAEnC,IAAM,IAAIG,EAAI,EAAGK,EAAKR,EAAc1W,OAAQ6W,EAAIK,EAAIL,IAEnDH,EAAeG,GAAM,EAMvB,SAASM,EAAiB9e,GAEzB+e,EAA2B/e,EAAW,GAIvC,SAAS+e,EAA2B/e,EAAWgf,GAE9C,MAAMX,EAAgBR,EAAaQ,cAC7BC,EAAoBT,EAAaS,kBACjCC,EAAoBV,EAAaU,kBAWvC,GATAF,EAAere,GAAc,EAEW,IAAnCse,EAAmBte,KAEvBN,EAAGuf,wBAAyBjf,GAC5Bse,EAAmBte,GAAc,GAI7Bue,EAAmBve,KAAgBgf,EAAmB,EAExCrf,EAAaC,SAAWF,EAAKmJ,EAAW9I,IAAK,2BAEpDJ,EAAaC,SAAW,sBAAwB,4BAA8BI,EAAWgf,GACpGT,EAAmBve,GAAcgf,GAMnC,SAASE,IAER,MAAMb,EAAgBR,EAAaQ,cAC7BC,EAAoBT,EAAaS,kBAEvC,IAAM,IAAIE,EAAI,EAAGK,EAAKP,EAAkB3W,OAAQ6W,EAAIK,EAAIL,IAElDF,EAAmBE,KAAQH,EAAeG,KAE9C9e,EAAGyf,yBAA0BX,GAC7BF,EAAmBE,GAAM,GAQ5B,SAASY,EAAqBT,EAAOlH,EAAMla,EAAM8hB,EAAYC,EAAQ/c,IAErC,IAA1B5C,EAAaC,UAAuBrC,IAASmC,EAAGoC,KAAOvE,IAASmC,EAAGkC,aAMvElC,EAAG0f,oBAAqBT,EAAOlH,EAAMla,EAAM8hB,EAAYC,EAAQ/c,GAJ/D7C,EAAG6f,qBAAsBZ,EAAOlH,EAAMla,EAAM+hB,EAAQ/c,GA8PtD,SAASid,IAERC,IAEK5B,IAAiBF,IAEtBE,EAAeF,EACfG,EAAuBD,EAAaa,SAMrC,SAASe,IAER9B,EAAarB,SAAW,KACxBqB,EAAac,QAAU,KACvBd,EAAatV,WAAY,EAI1B,MAAO,CAENqX,MAviBD,SAAgBhB,EAAQ9B,EAAU6B,EAASnC,EAAUqC,GAEpD,IAAIgB,GAAgB,EAEpB,GAAKlC,EAAe,CAEnB,MAAM7D,EAiFR,SAA0B0C,EAAUmC,EAAS7B,GAE5C,MAAMvU,GAAqC,IAAvBuU,EAASvU,UAE7B,IAAIuX,EAAalC,EAAepB,EAASuD,SAErB1hB,IAAfyhB,IAEJA,EAAa,GACblC,EAAepB,EAASuD,IAAOD,GAIhC,IAAIE,EAAWF,EAAYnB,EAAQoB,SAEjB1hB,IAAb2hB,IAEJA,EAAW,GACXF,EAAYnB,EAAQoB,IAAOC,GAI5B,IAAIlG,EAAQkG,EAAUzX,QAEPlK,IAAVyb,IAEJA,EAAQgE,EAhDJje,EAAaC,SAAkBF,EAAGqgB,oBAEhCvC,EAAUwC,wBA+ChBF,EAAUzX,GAAcuR,GAIzB,OAAOA,EAhHQqG,CAAiB3D,EAAUmC,EAAS7B,GAE7CiB,IAAiBjE,IAErBiE,EAAejE,EACfkE,EAAuBD,EAAaa,SAIrCiB,EA2IF,SAAsBrD,EAAUqC,GAE/B,MAAMuB,EAAmBrC,EAAapU,WAChC0W,EAAqB7D,EAAS7S,WAEpC,GAAK9G,OAAO0H,KAAM6V,GAAmBvY,SAAWhF,OAAO0H,KAAM8V,GAAqBxY,OAAS,OAAO,EAElG,IAAM,MAAM2C,KAAO6V,EAAqB,CAEvC,MAAMC,EAAkBF,EAAkB5V,GACpC+V,EAAoBF,EAAoB7V,GAE9C,QAAyBnM,IAApBiiB,EAAgC,OAAO,EAE5C,GAAKA,EAAgBpgB,YAAcqgB,EAAoB,OAAO,EAE9D,GAAKD,EAAgBjjB,OAASkjB,EAAkBljB,KAAO,OAAO,EAI/D,OAAK0gB,EAAac,QAAUA,EA/JXngB,CAAa8d,EAAUqC,GAElCgB,GAmKP,SAAoBrD,EAAUqC,GAE7B,MAAM2B,EAAQ,GACR7W,EAAa6S,EAAS7S,WAE5B,IAAM,MAAMa,KAAOb,EAAa,CAE/B,MAAMzJ,EAAYyJ,EAAYa,GAExBnN,EAAO,GACbA,EAAK6C,UAAYA,EAEZA,EAAU7C,OAEdA,EAAKA,KAAO6C,EAAU7C,MAIvBmjB,EAAOhW,GAAQnN,EAIhB0gB,EAAapU,WAAa6W,EAE1BzC,EAAac,MAAQA,EA3LC4B,CAAWjE,EAAUqC,OAEpC,CAEN,MAAMtW,GAAqC,IAAvBuU,EAASvU,UAExBwV,EAAavB,WAAaA,EAASuD,IACvChC,EAAaY,UAAYA,EAAQoB,IACjChC,EAAaxV,YAAcA,IAE3BwV,EAAavB,SAAWA,EAASuD,GACjChC,EAAaY,QAAUA,EAAQoB,GAC/BhC,EAAaxV,UAAYA,EAEzBsX,GAAgB,IAMc,IAA3BjB,EAAO8B,kBAEXb,GAAgB,GAIF,OAAVhB,GAEJlV,EAAWnJ,OAAQqe,EAAOjf,EAAG+gB,sBAIzBd,KA2ON,SAAgCjB,EAAQ9B,EAAU6B,EAASnC,GAE1D,IAA+B,IAA1B3c,EAAaC,WAAwB8e,EAAO8B,iBAAmBlE,EAASoE,4BAExB,OAA/C7X,EAAW9I,IAAK,0BAAsC,OAI5D6e,IAEA,MAAMuB,EAAqB7D,EAAS7S,WAE9BkX,EAAoBlC,EAAQmC,gBAE5BC,EAAiCjE,EAAS1T,uBAEhD,IAAM,MAAMe,KAAQ0W,EAAoB,CAEvC,MAAMG,EAAmBH,EAAmB1W,GAE5C,GAAK6W,GAAoB,EAAI,CAE5B,MAAMT,EAAoBF,EAAoBlW,GAE9C,QAA2B9L,IAAtBkiB,EAAkC,CAEtC,MAAMhB,EAAagB,EAAkBhB,WAC/B5H,EAAO4I,EAAkBU,SAEzB/gB,EAAYyJ,EAAW1J,IAAKsgB,GAIlC,QAAmBliB,IAAd6B,EAA0B,SAE/B,MAAMI,EAASJ,EAAUI,OACnB7C,EAAOyC,EAAUzC,KACjBqD,EAAkBZ,EAAUY,gBAElC,GAAKyf,EAAkBpgB,6BAA+B,CAErD,MAAM9C,EAAOkjB,EAAkBljB,KACzBmiB,EAASniB,EAAKmiB,OACd/c,EAAS8d,EAAkB9d,OAE5BpF,GAAQA,EAAK6jB,8BAEjBjC,EAA2B+B,EAAkB3jB,EAAK6hB,uBAEd7gB,IAA/Bme,EAAS2E,oBAEb3E,EAAS2E,kBAAoB9jB,EAAK6hB,iBAAmB7hB,EAAKkF,QAM3Dyc,EAAiBgC,GAIlBphB,EAAGuB,WAAYvB,EAAGwhB,aAAc9gB,GAChCgf,EAAqB0B,EAAkBrJ,EAAMla,EAAM8hB,EAAYC,EAAS1e,EAAiB2B,EAAS3B,QAI7Fyf,EAAkBc,4BAEtBpC,EAA2B+B,EAAkBT,EAAkBrB,uBAE3B7gB,IAA/Bme,EAAS2E,oBAEb3E,EAAS2E,kBAAoBZ,EAAkBrB,iBAAmBqB,EAAkBhe,QAMrFyc,EAAiBgC,GAIlBphB,EAAGuB,WAAYvB,EAAGwhB,aAAc9gB,GAChCgf,EAAqB0B,EAAkBrJ,EAAMla,EAAM8hB,EAAY,EAAG,QAI7D,GAAc,mBAATpV,EAA4B,CAEvC,MAAMjK,EAAYyJ,EAAW1J,IAAK2e,EAAO0C,gBAIzC,QAAmBjjB,IAAd6B,EAA0B,SAE/B,MAAMI,EAASJ,EAAUI,OACnB7C,EAAOyC,EAAUzC,KAEvBwhB,EAA2B+B,EAAmB,EAAG,GACjD/B,EAA2B+B,EAAmB,EAAG,GACjD/B,EAA2B+B,EAAmB,EAAG,GACjD/B,EAA2B+B,EAAmB,EAAG,GAEjDphB,EAAGuB,WAAYvB,EAAGwhB,aAAc9gB,GAEhCV,EAAG0f,oBAAqB0B,EAAmB,EAAG,EAAGvjB,GAAM,EAAO,GAAI,GAClEmC,EAAG0f,oBAAqB0B,EAAmB,EAAG,EAAGvjB,GAAM,EAAO,GAAI,IAClEmC,EAAG0f,oBAAqB0B,EAAmB,EAAG,EAAGvjB,GAAM,EAAO,GAAI,IAClEmC,EAAG0f,oBAAqB0B,EAAmB,EAAG,EAAGvjB,GAAM,EAAO,GAAI,SAE5D,GAAc,kBAAT0M,EAA2B,CAEtC,MAAMjK,EAAYyJ,EAAW1J,IAAK2e,EAAO2C,eAIzC,QAAmBljB,IAAd6B,EAA0B,SAE/B,MAAMI,EAASJ,EAAUI,OACnB7C,EAAOyC,EAAUzC,KAEvBwhB,EAA2B+B,EAAkB,GAE7CphB,EAAGuB,WAAYvB,EAAGwhB,aAAc9gB,GAEhCV,EAAG0f,oBAAqB0B,EAAkB,EAAGvjB,GAAM,EAAO,GAAI,QAExD,QAAwCY,IAAnC0iB,EAA+C,CAE1D,MAAMrhB,EAAQqhB,EAAgC5W,GAE9C,QAAe9L,IAAVqB,EAEJ,OAASA,EAAMmI,QAEd,KAAK,EACJjI,EAAG4hB,gBAAiBR,EAAkBthB,GACtC,MAED,KAAK,EACJE,EAAG6hB,gBAAiBT,EAAkBthB,GACtC,MAED,KAAK,EACJE,EAAG8hB,gBAAiBV,EAAkBthB,GACtC,MAED,QACCE,EAAG+hB,gBAAiBX,EAAkBthB,MAY5C0f,IAzYCwC,CAAuBhD,EAAQ9B,EAAU6B,EAASnC,GAEnC,OAAVqC,GAEJjf,EAAGuB,WAAYvB,EAAG+gB,qBAAsBhX,EAAW1J,IAAK4e,GAAQve,UAiflEof,MAAOA,EACPC,kBAAmBA,EACnBkC,QA1GD,WAECnC,IAEA,IAAM,MAAMoC,KAAclE,EAAgB,CAEzC,MAAMkC,EAAalC,EAAekE,GAElC,IAAM,MAAMC,KAAajC,EAAa,CAErC,MAAME,EAAWF,EAAYiC,GAE7B,IAAM,MAAMxZ,KAAayX,EAExB5B,EAAyB4B,EAAUzX,GAAYqW,eAExCoB,EAAUzX,UAIXuX,EAAYiC,UAIbnE,EAAekE,KAmFvBE,wBA7ED,SAAkCxF,GAEjC,QAAsCne,IAAjCuf,EAAepB,EAASuD,IAAqB,OAElD,MAAMD,EAAalC,EAAepB,EAASuD,IAE3C,IAAM,MAAMgC,KAAajC,EAAa,CAErC,MAAME,EAAWF,EAAYiC,GAE7B,IAAM,MAAMxZ,KAAayX,EAExB5B,EAAyB4B,EAAUzX,GAAYqW,eAExCoB,EAAUzX,UAIXuX,EAAYiC,UAIbnE,EAAepB,EAASuD,KAwD/BkC,uBApDD,SAAiCtD,GAEhC,IAAM,MAAMmD,KAAclE,EAAgB,CAEzC,MAAMkC,EAAalC,EAAekE,GAElC,QAAkCzjB,IAA7ByhB,EAAYnB,EAAQoB,IAAqB,SAE9C,MAAMC,EAAWF,EAAYnB,EAAQoB,IAErC,IAAM,MAAMxX,KAAayX,EAExB5B,EAAyB4B,EAAUzX,GAAYqW,eAExCoB,EAAUzX,UAIXuX,EAAYnB,EAAQoB,MAoC5BjB,eAAgBA,EAChBE,gBAAiBA,EACjBI,wBAAyBA,GC5jB3B,SAAS8C,GAAqBtiB,EAAImJ,EAAYoZ,EAAMtiB,GAEnD,MAAMC,EAAWD,EAAaC,SAE9B,IAAIsiB,EAiDJjkB,KAAKkkB,QA/CL,SAAkB3iB,GAEjB0iB,EAAO1iB,GA8CRvB,KAAK6c,OA1CL,SAAiB5b,EAAOmD,GAEvB3C,EAAG0iB,WAAYF,EAAMhjB,EAAOmD,GAE5B4f,EAAK3hB,OAAQ+B,EAAO6f,EAAM,IAuC3BjkB,KAAKokB,gBAnCL,SAA0BnjB,EAAOmD,EAAOigB,GAEvC,GAAmB,IAAdA,EAAkB,OAEvB,IAAI9E,EAAW+E,EAEf,GAAK3iB,EAEJ4d,EAAY9d,EACZ6iB,EAAa,2BAOb,GAHA/E,EAAY3U,EAAW9I,IAAK,0BAC5BwiB,EAAa,2BAEM,OAAd/E,EAGJ,OAMFA,EAAW+E,GAAcL,EAAMhjB,EAAOmD,EAAOigB,GAE7CL,EAAK3hB,OAAQ+B,EAAO6f,EAAMI,IC/C5B,SAASE,GAAmB9iB,EAAImJ,EAAYtF,GAE3C,IAAIkf,EAsBJ,SAASC,EAAiBC,GAEzB,GAAmB,UAAdA,EAAwB,CAE5B,GAAKjjB,EAAGkjB,yBAA0BljB,EAAGmjB,cAAenjB,EAAGojB,YAAaH,UAAY,GAC/EjjB,EAAGkjB,yBAA0BljB,EAAGqjB,gBAAiBrjB,EAAGojB,YAAaH,UAAY,EAE7E,MAAO,QAIRA,EAAY,UAIb,MAAmB,YAAdA,GAECjjB,EAAGkjB,yBAA0BljB,EAAGmjB,cAAenjB,EAAGsjB,cAAeL,UAAY,GACjFjjB,EAAGkjB,yBAA0BljB,EAAGqjB,gBAAiBrjB,EAAGsjB,cAAeL,UAAY,EAExE,UAMF,OAKR,MAAM/iB,EAA+C,oBAA3BqjB,wBAA0CvjB,aAAcujB,wBACtC,oBAAlCC,+BAAiDxjB,aAAcwjB,8BAGzE,IAAIP,OAAqCxkB,IAAzBoF,EAAWof,UAA0Bpf,EAAWof,UAAY,QAC5E,MAAMQ,EAAeT,EAAiBC,GAEjCQ,IAAiBR,IAGrBA,EAAYQ,GAIb,MAAMC,GAA+D,IAAtC7f,EAAW6f,uBAEpCC,EAAc3jB,EAAG4d,aAAc5d,EAAG4jB,yBAClCC,EAAoB7jB,EAAG4d,aAAc5d,EAAG8jB,gCACxCC,EAAiB/jB,EAAG4d,aAAc5d,EAAGgkB,kBACrCC,EAAiBjkB,EAAG4d,aAAc5d,EAAGkkB,2BAErCC,EAAgBnkB,EAAG4d,aAAc5d,EAAG6d,oBACpCuG,EAAoBpkB,EAAG4d,aAAc5d,EAAGqkB,4BACxCC,EAActkB,EAAG4d,aAAc5d,EAAGukB,qBAClCC,EAAsBxkB,EAAG4d,aAAc5d,EAAGykB,8BAE1CC,EAAiBb,EAAoB,EACrCc,EAAwBzkB,KAAeiJ,EAAW9I,IAAK,qBAK7D,MAAO,CAENH,SAAUA,EAEV0kB,iBAvFD,WAEC,QAAuBnmB,IAAlBskB,EAA8B,OAAOA,EAE1C,MAAMjF,EAAY3U,EAAW9I,IAAK,kCAYlC,OARC0iB,EAFkB,OAAdjF,EAEY9d,EAAG4d,aAAcE,EAAU+G,gCAI3B,EAIV9B,GAwEPC,gBAAiBA,EAEjBC,UAAWA,EACXS,uBAAwBA,EAExBC,YAAaA,EACbE,kBAAmBA,EACnBE,eAAgBA,EAChBE,eAAgBA,EAEhBE,cAAeA,EACfC,kBAAmBA,EACnBE,YAAaA,EACbE,oBAAqBA,EAErBE,eAAgBA,EAChBC,sBAAuBA,EACvBG,oBA1B2BJ,GAAkBC,EA4B7CI,WA1BkB7kB,EAAWF,EAAG4d,aAAc5d,EAAGglB,aAAgB,GClFnE,SAASC,GAAejP,GAEvB,MAAMlS,EAAQvF,KAEd,IAAI2mB,EAAc,KACjBC,EAAkB,EAClBC,GAAuB,EACvBC,GAAmB,EAEpB,MAAMC,EAAQ,IAAIC,GACjBC,EAAmB,IAAInS,GAEvBoS,EAAU,CAAE3lB,MAAO,KAAMhB,aAAa,GAyFvC,SAAS4mB,IAEHD,EAAQ3lB,QAAUolB,IAEtBO,EAAQ3lB,MAAQolB,EAChBO,EAAQ3mB,YAAcqmB,EAAkB,GAIzCrhB,EAAM6hB,UAAYR,EAClBrhB,EAAM8hB,gBAAkB,EAIzB,SAASC,EAAeC,EAAQvK,EAAQwK,EAAWC,GAElD,MAAMC,EAAqB,OAAXH,EAAkBA,EAAO7d,OAAS,EAClD,IAAIie,EAAW,KAEf,GAAiB,IAAZD,EAAgB,CAIpB,GAFAC,EAAWT,EAAQ3lB,OAEI,IAAlBkmB,GAAuC,OAAbE,EAAoB,CAElD,MAAMC,EAAWJ,EAAsB,EAAVE,EAC5BG,EAAa7K,EAAO8K,mBAErBb,EAAiBc,gBAAiBF,IAEhB,OAAbF,GAAqBA,EAASje,OAASke,KAE3CD,EAAW,IAAIvkB,aAAcwkB,IAI9B,IAAM,IAAIrH,EAAI,EAAGyH,EAAKR,EAAWjH,IAAMmH,IAAYnH,EAAGyH,GAAM,EAE3DjB,EAAMpb,KAAM4b,EAAQhH,IAAM0H,aAAcJ,EAAYZ,GAEpDF,EAAMlM,OAAO1O,QAASwb,EAAUK,GAChCL,EAAUK,EAAK,GAAMjB,EAAMmB,SAM7BhB,EAAQ3lB,MAAQomB,EAChBT,EAAQ3mB,aAAc,EAOvB,OAHAgF,EAAM6hB,UAAYM,EAClBniB,EAAM8hB,gBAAkB,EAEjBM,EA9IR3nB,KAAKknB,QAAUA,EACflnB,KAAKonB,UAAY,EACjBpnB,KAAKqnB,gBAAkB,EAEvBrnB,KAAKmoB,KAAO,SAAWZ,EAAQa,EAAqBpL,GAEnD,MAAMqL,EACa,IAAlBd,EAAO7d,QACP0e,GAGoB,IAApBxB,GACAC,EAOD,OALAA,EAAuBuB,EAEvBzB,EAAcW,EAAeC,EAAQvK,EAAQ,GAC7C4J,EAAkBW,EAAO7d,OAElB2e,GAIRroB,KAAKsoB,aAAe,WAEnBxB,GAAmB,EACnBQ,EAAe,OAIhBtnB,KAAKuoB,WAAa,WAEjBzB,GAAmB,EACnBK,KAIDnnB,KAAKwoB,SAAW,SAAW7J,EAAU3B,EAAQyL,GAE5C,MAAMlB,EAAS5I,EAAS+J,eACvBC,EAAmBhK,EAASgK,iBAC5BC,EAAcjK,EAASiK,YAElBC,EAAqBpR,EAAW3V,IAAK6c,GAE3C,IAAOkI,GAAmC,OAAXU,GAAqC,IAAlBA,EAAO7d,QAAgBod,IAAsB8B,EAIzF9B,EAIJQ,EAAe,MAIfH,QAIK,CAEN,MAAM2B,EAAUhC,EAAmB,EAAIF,EACtCmC,EAAoB,EAAVD,EAEX,IAAInB,EAAWkB,EAAmBG,eAAiB,KAEnD9B,EAAQ3lB,MAAQomB,EAEhBA,EAAWL,EAAeC,EAAQvK,EAAQ+L,EAASN,GAEnD,IAAM,IAAIlI,EAAI,EAAGA,IAAMwI,IAAYxI,EAElCoH,EAAUpH,GAAMoG,EAAapG,GAI9BsI,EAAmBG,cAAgBrB,EACnC3nB,KAAKqnB,gBAAkBsB,EAAmB3oB,KAAKonB,UAAY,EAC3DpnB,KAAKonB,WAAa0B,ICvFrB,SAASG,GAAmB9pB,EAAOC,EAAQ8pB,GAE1ClpB,KAAKb,MAAQA,EACba,KAAKZ,OAASA,EAEdY,KAAKmpB,QAAU,IAAIC,GAAS,EAAG,EAAGjqB,EAAOC,GACzCY,KAAKqpB,aAAc,EAEnBrpB,KAAKspB,SAAW,IAAIF,GAAS,EAAG,EAAGjqB,EAAOC,GAE1C8pB,EAAUA,GAAW,GAErBlpB,KAAK4e,QAAU,IAAI9e,QAASI,EAAWgpB,EAAQ3pB,QAAS2pB,EAAQ1pB,MAAO0pB,EAAQzpB,MAAOypB,EAAQxpB,UAAWwpB,EAAQvpB,UAAWupB,EAAQ7pB,OAAQ6pB,EAAQ5pB,KAAM4pB,EAAQtpB,WAAYspB,EAAQrpB,UAEtLG,KAAK4e,QAAQ3e,MAAQ,GACrBD,KAAK4e,QAAQ3e,MAAMd,MAAQA,EAC3Ba,KAAK4e,QAAQ3e,MAAMb,OAASA,EAE5BY,KAAK4e,QAAQxe,qBAA8CF,IAA5BgpB,EAAQ9oB,iBAAgC8oB,EAAQ9oB,gBAC/EJ,KAAK4e,QAAQjf,eAAkCO,IAAtBgpB,EAAQvpB,UAA0BupB,EAAQvpB,UAAY4pB,EAE/EvpB,KAAKwpB,iBAAsCtpB,IAAxBgpB,EAAQM,aAA4BN,EAAQM,YAC/DxpB,KAAKypB,mBAA0CvpB,IAA1BgpB,EAAQO,eAA8BP,EAAQO,cACnEzpB,KAAK0pB,kBAAwCxpB,IAAzBgpB,EAAQQ,aAA6BR,EAAQQ,aAAe,KN8PjF7P,GAAU8P,SAAW,CAEpBngB,SAAUD,GAAe,CACxBsQ,GAAUO,SAAS5Q,SACnB,CACCogB,UAAW,CAAEroB,MAAO,GACpBsoB,aAAc,CAAEtoB,MAAO,MACvBuoB,mBAAoB,CAAEvoB,MAAO,GAC7BwoB,sBAAuB,CAAExoB,MAAO,MAChCyoB,qBAAsB,CAAEzoB,MAAO,IAAIgV,GAAS,EAAG,IAC/C0T,mBAAoB,CAAE1oB,MAAO,MAC7B2oB,MAAO,CAAE3oB,MAAO,IAAImT,GAAO,IAC3ByV,aAAc,CAAE5oB,MAAO,GACvB6oB,gBAAiB,CAAE7oB,MAAO,SAI5B0I,aAAcqC,GAAYyH,kBAC1B7J,eAAgBoC,GAAYwH,mBM5Q7BmV,GAAkBxkB,UAAYC,OAAOmH,OAAQnH,OAAOC,OAAQ0lB,EAAgB5lB,WAAa,CAExFG,YAAaqkB,GAEbqB,qBAAqB,EAErBC,QAAS,SAAWprB,EAAOC,GAErBY,KAAKb,QAAUA,GAASa,KAAKZ,SAAWA,IAE5CY,KAAKb,MAAQA,EACba,KAAKZ,OAASA,EAEdY,KAAK4e,QAAQ3e,MAAMd,MAAQA,EAC3Ba,KAAK4e,QAAQ3e,MAAMb,OAASA,EAE5BY,KAAK0jB,WAIN1jB,KAAKspB,SAAS5mB,IAAK,EAAG,EAAGvD,EAAOC,GAChCY,KAAKmpB,QAAQzmB,IAAK,EAAG,EAAGvD,EAAOC,IAIhC+J,MAAO,WAEN,OAAO,IAAInJ,KAAK4E,aAAc+G,KAAM3L,OAIrC2L,KAAM,SAAWC,GAahB,OAXA5L,KAAKb,MAAQyM,EAAOzM,MACpBa,KAAKZ,OAASwM,EAAOxM,OAErBY,KAAKspB,SAAS3d,KAAMC,EAAO0d,UAE3BtpB,KAAK4e,QAAUhT,EAAOgT,QAAQzV,QAE9BnJ,KAAKwpB,YAAc5d,EAAO4d,YAC1BxpB,KAAKypB,cAAgB7d,EAAO6d,cAC5BzpB,KAAK0pB,aAAe9d,EAAO8d,aAEpB1pB,MAIR0jB,QAAS,WAER1jB,KAAKwqB,cAAe,CAAElrB,KAAM,eCjF9B,SAASmrB,GAAYC,EAAMC,EAAKC,GAM/B,GAJAC,GAAS9qB,KAAMC,MAEfA,KAAKV,KAAO,cAEkC,IAAzCsrB,EAAa/M,wBAGjB,OAID7d,KAAK4qB,aAAeA,EAEpB,MAAME,EAAW,IAAIC,GAjBV,GAAa,EAiB6BL,EAAMC,GAC3DG,EAASE,OAAShrB,KAAKgrB,OACvBF,EAASG,GAAGvoB,IAAK,GAAK,EAAG,GACzBooB,EAASI,OAAQ,IAAI/jB,GAAS,EAAG,EAAG,IACpCnH,KAAKmrB,IAAKL,GAEV,MAAMM,EAAW,IAAIL,GAvBV,GAAa,EAuB6BL,EAAMC,GAC3DS,EAASJ,OAAShrB,KAAKgrB,OACvBI,EAASH,GAAGvoB,IAAK,GAAK,EAAG,GACzB0oB,EAASF,OAAQ,IAAI/jB,IAAW,EAAG,EAAG,IACtCnH,KAAKmrB,IAAKC,GAEV,MAAMC,EAAW,IAAIN,GA7BV,GAAa,EA6B6BL,EAAMC,GAC3DU,EAASL,OAAShrB,KAAKgrB,OACvBK,EAASJ,GAAGvoB,IAAK,EAAG,EAAG,GACvB2oB,EAASH,OAAQ,IAAI/jB,GAAS,EAAG,EAAG,IACpCnH,KAAKmrB,IAAKE,GAEV,MAAMC,EAAW,IAAIP,GAnCV,GAAa,EAmC6BL,EAAMC,GAC3DW,EAASN,OAAShrB,KAAKgrB,OACvBM,EAASL,GAAGvoB,IAAK,EAAG,GAAK,GACzB4oB,EAASJ,OAAQ,IAAI/jB,GAAS,GAAK,EAAG,IACtCnH,KAAKmrB,IAAKG,GAEV,MAAMC,EAAW,IAAIR,GAzCV,GAAa,EAyC6BL,EAAMC,GAC3DY,EAASP,OAAShrB,KAAKgrB,OACvBO,EAASN,GAAGvoB,IAAK,GAAK,EAAG,GACzB6oB,EAASL,OAAQ,IAAI/jB,GAAS,EAAG,EAAG,IACpCnH,KAAKmrB,IAAKI,GAEV,MAAMC,EAAW,IAAIT,GA/CV,GAAa,EA+C6BL,EAAMC,GAC3Da,EAASR,OAAShrB,KAAKgrB,OACvBQ,EAASP,GAAGvoB,IAAK,GAAK,EAAG,GACzB8oB,EAASN,OAAQ,IAAI/jB,GAAS,EAAG,GAAK,IACtCnH,KAAKmrB,IAAKK,GAEVxrB,KAAKqC,OAAS,SAAWoZ,EAAUsB,GAEb,OAAhB/c,KAAKyrB,QAAkBzrB,KAAK0rB,oBAEjC,MAAMC,EAAmBlQ,EAAS0B,GAAGkL,QAC/BuD,EAAsBnQ,EAASoQ,kBAErCpQ,EAAS0B,GAAGkL,SAAU,EAEtB,MAAMjoB,EAAkBwqB,EAAahM,QAAQxe,gBAE7CwqB,EAAahM,QAAQxe,iBAAkB,EAEvCqb,EAASqQ,gBAAiBlB,EAAc,GACxCnP,EAASoB,OAAQE,EAAO+N,GAExBrP,EAASqQ,gBAAiBlB,EAAc,GACxCnP,EAASoB,OAAQE,EAAOqO,GAExB3P,EAASqQ,gBAAiBlB,EAAc,GACxCnP,EAASoB,OAAQE,EAAOsO,GAExB5P,EAASqQ,gBAAiBlB,EAAc,GACxCnP,EAASoB,OAAQE,EAAOuO,GAExB7P,EAASqQ,gBAAiBlB,EAAc,GACxCnP,EAASoB,OAAQE,EAAOwO,GAExBX,EAAahM,QAAQxe,gBAAkBA,EAEvCqb,EAASqQ,gBAAiBlB,EAAc,GACxCnP,EAASoB,OAAQE,EAAOyO,GAExB/P,EAASqQ,gBAAiBF,GAE1BnQ,EAAS0B,GAAGkL,QAAUsD,GAIvB3rB,KAAKwd,MAAQ,SAAW/B,EAAUvQ,EAAOjG,EAAO8mB,GAE/C,MAAMH,EAAsBnQ,EAASoQ,kBAErC,IAAM,IAAItL,EAAI,EAAGA,EAAI,EAAGA,IAEvB9E,EAASqQ,gBAAiBlB,EAAcrK,GAExC9E,EAAS+B,MAAOtS,EAAOjG,EAAO8mB,GAI/BtQ,EAASqQ,gBAAiBF,ICpG5B,SAASI,GAAuBxS,EAAM0P,EAAS+C,GAEzCC,OAAOC,UAAWjD,KAItBA,EAAU+C,GAIXhD,GAAkBlpB,KAAMC,KAAMwZ,EAAMA,EAAM0P,GAE1ClpB,KAAK4e,QAAQd,gCAAiC,ECjB/C,SAASsO,GAAe3Q,GAEvB,IAAIC,EAAW,IAAI7Z,QAEnB,SAASwqB,EAAmBzN,EAASrf,GAYpC,OAVKA,IAAY+sB,EAEhB1N,EAAQrf,QAAUgtB,EAEPhtB,IAAYitB,IAEvB5N,EAAQrf,QAAUktB,GAIZ7N,EA6DR,MAAO,CACN9c,IA1DD,SAAc8c,GAEb,GAAKA,GAAWA,EAAQ1V,UAAY,CAEnC,MAAM3J,EAAUqf,EAAQrf,QAExB,GAAKA,IAAY+sB,GAAoC/sB,IAAYitB,EAAmC,CAEnG,GAAK9Q,EAASgR,IAAK9N,GAAY,CAG9B,OAAOyN,EADS3Q,EAAS5Z,IAAK8c,GAAUA,QACLA,EAAQrf,SAErC,CAEN,MAAMU,EAAQ2e,EAAQ3e,MAEtB,GAAKA,GAASA,EAAMb,OAAS,EAAI,CAEhC,MAAMutB,EAAoBlR,EAASmR,gBAC7BhB,EAAsBnQ,EAASoQ,kBAC/BgB,EAAqBpR,EAASqR,iBAE9BlC,EAAe,IAAIoB,GAAuB/rB,EAAMb,OAAS,GAQ/D,OAPAwrB,EAAamC,2BAA4BtR,EAAUmD,GACnDlD,EAAShZ,IAAKkc,EAASgM,GAEvBnP,EAASqQ,gBAAiBF,GAC1BnQ,EAASuR,cAAeL,GACxBlR,EAASwR,eAAgBJ,GAElBR,EAAmBzB,EAAahM,QAASA,EAAQrf,SAMxD,OAAO,OAUX,OAAOqf,GAYP8E,QARD,WAEChI,EAAW,IAAI7Z,UC5EjB,SAASqrB,GAAiBzrB,GAEzB,MAAMmJ,EAAa,GAEnB,MAAO,CAEN8hB,IAAK,SAAW1gB,GAEf,QAA4B9L,IAAvB0K,EAAYoB,GAEhB,OAA8B,OAAvBpB,EAAYoB,GAIpB,IAAIuT,EAEJ,OAASvT,GAER,IAAK,sBACJuT,EAAY9d,EAAG0rB,aAAc,wBAA2B1rB,EAAG0rB,aAAc,4BAA+B1rB,EAAG0rB,aAAc,8BACzH,MAED,IAAK,iCACJ5N,EAAY9d,EAAG0rB,aAAc,mCAAsC1rB,EAAG0rB,aAAc,uCAA0C1rB,EAAG0rB,aAAc,yCAC/I,MAED,IAAK,gCACJ5N,EAAY9d,EAAG0rB,aAAc,kCAAqC1rB,EAAG0rB,aAAc,sCAAyC1rB,EAAG0rB,aAAc,wCAC7I,MAED,IAAK,iCACJ5N,EAAY9d,EAAG0rB,aAAc,mCAAsC1rB,EAAG0rB,aAAc,yCACpF,MAED,QACC5N,EAAY9d,EAAG0rB,aAAcnhB,GAM/B,OAFApB,EAAYoB,GAASuT,EAEA,OAAdA,GAIRzd,IAAK,SAAWkK,GAQf,OANOhM,KAAK0sB,IAAK1gB,GAMVpB,EAAYoB,KCjDtB,SAASohB,GAAiB3rB,EAAI+J,EAAYwY,EAAMvE,GAE/C,MAAM4N,EAAa,IAAIxrB,QACjByrB,EAAsB,IAAIzrB,QAEhC,SAAS0rB,EAAmBC,GAE3B,MAAMnP,EAAWmP,EAAMC,OACjBC,EAAiBL,EAAWvrB,IAAKuc,GAET,OAAzBqP,EAAehN,OAEnBlV,EAAWvJ,OAAQyrB,EAAehN,OAInC,IAAM,MAAM1U,KAAQ0hB,EAAeliB,WAElCA,EAAWvJ,OAAQyrB,EAAeliB,WAAYQ,IAI/CqS,EAASsP,oBAAqB,UAAWJ,GAEzCF,EAAWjrB,OAAQic,GAEnB,MAAMtc,EAAYurB,EAAoBxrB,IAAK4rB,GAEtC3rB,IAEJyJ,EAAWvJ,OAAQF,GACnBurB,EAAoBlrB,OAAQsrB,IAI7BjO,EAAcoE,wBAAyBxF,IAEK,IAAvCA,EAASoE,kCAENpE,EAAS2E,kBAMjBgB,EAAK4J,OAAOP,aAkEb,SAASQ,EAA0BxP,GAElC,MAAM3Y,EAAU,GAEVooB,EAAgBzP,EAASqC,MACzBqN,EAAmB1P,EAAS7S,WAAW2M,SAC7C,IAAI1V,EAAU,EAEd,GAAuB,OAAlBqrB,EAAyB,CAE7B,MAAMjrB,EAAQirB,EAAcjrB,MAC5BJ,EAAUqrB,EAAcrrB,QAExB,IAAM,IAAI8d,EAAI,EAAGyN,EAAInrB,EAAM6G,OAAQ6W,EAAIyN,EAAGzN,GAAK,EAAI,CAElD,MAAM7Y,EAAI7E,EAAO0d,EAAI,GACf5Y,EAAI9E,EAAO0d,EAAI,GACf3Y,EAAI/E,EAAO0d,EAAI,GAErB7a,EAAQ8B,KAAME,EAAGC,EAAGA,EAAGC,EAAGA,EAAGF,QAIxB,CAEN,MAAM7E,EAAQkrB,EAAiBlrB,MAC/BJ,EAAUsrB,EAAiBtrB,QAE3B,IAAM,IAAI8d,EAAI,EAAGyN,EAAMnrB,EAAM6G,OAAS,EAAM,EAAG6W,EAAIyN,EAAGzN,GAAK,EAAI,CAE9D,MAAM7Y,EAAI6Y,EAAI,EACR5Y,EAAI4Y,EAAI,EACR3Y,EAAI2Y,EAAI,EAEd7a,EAAQ8B,KAAME,EAAGC,EAAGA,EAAGC,EAAGA,EAAGF,IAM/B,MAAM3F,EAAY,IAAMksB,GAAUvoB,GAAY,MAAQwoB,GAAwBC,IAAyBzoB,EAAS,GAChH3D,EAAUU,QAAUA,EAMpB,MAAM2rB,EAAoBd,EAAoBxrB,IAAKuc,GAE9C+P,GAAoB5iB,EAAWvJ,OAAQmsB,GAI5Cd,EAAoB5qB,IAAK2b,EAAUtc,GAkCpC,MAAO,CAEND,IAvJD,SAAc2e,EAAQpC,GAErB,IAAIqP,EAAiBL,EAAWvrB,IAAKuc,GAErC,OAAKqP,IAELrP,EAASgQ,iBAAkB,UAAWd,GAEjClP,EAASiQ,iBAEbZ,EAAiBrP,EAENA,EAASkQ,kBAEcruB,IAA7Bme,EAASmQ,kBAEbnQ,EAASmQ,iBAAkB,IAAIzpB,IAAiB0pB,cAAehO,IAIhEiN,EAAiBrP,EAASmQ,iBAI3BnB,EAAW3qB,IAAK2b,EAAUqP,GAE1B1J,EAAK4J,OAAOP,aAELK,IA4HPrrB,OAxHD,SAAiBgc,GAEhB,MAAM6D,EAAqB7D,EAAS7S,WAIpC,IAAM,MAAMQ,KAAQkW,EAEnB1W,EAAWnJ,OAAQ6f,EAAoBlW,GAAQvK,EAAGwhB,cAMnD,MAAMyL,EAAkBrQ,EAASqQ,gBAEjC,IAAM,MAAM1iB,KAAQ0iB,EAAkB,CAErC,MAAM7rB,EAAQ6rB,EAAiB1iB,GAE/B,IAAM,IAAIuU,EAAI,EAAGyN,EAAInrB,EAAM6G,OAAQ6W,EAAIyN,EAAGzN,IAEzC/U,EAAWnJ,OAAQQ,EAAO0d,GAAK9e,EAAGwhB,gBAoGpC0L,sBAnCD,SAAgCtQ,GAE/B,MAAMuQ,EAAmBtB,EAAoBxrB,IAAKuc,GAElD,GAAKuQ,EAAmB,CAEvB,MAAMd,EAAgBzP,EAASqC,MAER,OAAlBoN,GAICc,EAAiBnsB,QAAUqrB,EAAcrrB,SAE7CorB,EAA0BxP,QAQ5BwP,EAA0BxP,GAI3B,OAAOiP,EAAoBxrB,IAAKuc,KCtMlC,SAASwQ,GAA4BptB,EAAImJ,EAAYoZ,EAAMtiB,GAE1D,MAAMC,EAAWD,EAAaC,SAE9B,IAAIsiB,EAQA3kB,EAAMqD,EAkDV3C,KAAKkkB,QAxDL,SAAkB3iB,GAEjB0iB,EAAO1iB,GAuDRvB,KAAK+H,SAjDL,SAAmBxG,GAElBjC,EAAOiC,EAAMjC,KACbqD,EAAkBpB,EAAMoB,iBA+CzB3C,KAAK6c,OA3CL,SAAiB5b,EAAOmD,GAEvB3C,EAAGqtB,aAAc7K,EAAM7f,EAAO9E,EAAM2B,EAAQ0B,GAE5CqhB,EAAK3hB,OAAQ+B,EAAO6f,EAAM,IAwC3BjkB,KAAKokB,gBApCL,SAA0BnjB,EAAOmD,EAAOigB,GAEvC,GAAmB,IAAdA,EAAkB,OAEvB,IAAI9E,EAAW+E,EAEf,GAAK3iB,EAEJ4d,EAAY9d,EACZ6iB,EAAa,6BAOb,GAHA/E,EAAY3U,EAAW9I,IAAK,0BAC5BwiB,EAAa,6BAEM,OAAd/E,EAGJ,OAMFA,EAAW+E,GAAcL,EAAM7f,EAAO9E,EAAM2B,EAAQ0B,EAAiB0hB,GAErEL,EAAK3hB,OAAQ+B,EAAO6f,EAAMI,ICxD5B,SAAS0K,GAAWttB,GAEnB,MAKMob,EAAS,CACd9b,MAAO,EACPiuB,MAAO,EACPC,UAAW,EACX1V,OAAQ,EACR2V,MAAO,GA+CR,MAAO,CACNtB,OA1Dc,CACdP,WAAY,EACZ8B,SAAU,GAyDVtS,OAAQA,EACRuS,SAAU,KACVC,WAAW,EACX9N,MAfD,WAEC1E,EAAO9b,QACP8b,EAAOmS,MAAQ,EACfnS,EAAOoS,UAAY,EACnBpS,EAAOtD,OAAS,EAChBsD,EAAOqS,MAAQ,GAUf7sB,OAlDD,SAAiB+B,EAAO6f,EAAMqL,GAI7B,OAFAzS,EAAOmS,QAEE/K,GAER,KAAKxiB,EAAG8tB,UACP1S,EAAOoS,WAAaK,GAAkBlrB,EAAQ,GAC9C,MAED,KAAK3C,EAAG+tB,MACP3S,EAAOqS,OAASI,GAAkBlrB,EAAQ,GAC1C,MAED,KAAK3C,EAAGguB,WACP5S,EAAOqS,OAASI,GAAkBlrB,EAAQ,GAC1C,MAED,KAAK3C,EAAGiuB,UACP7S,EAAOqS,OAASI,EAAgBlrB,EAChC,MAED,KAAK3C,EAAGkuB,OACP9S,EAAOtD,QAAU+V,EAAgBlrB,KCtCrC,SAASwrB,GAAeloB,EAAGC,GAE1B,OAAOD,EAAG,GAAMC,EAAG,GAIpB,SAASkoB,GAAkBnoB,EAAGC,GAE7B,OAAOnC,KAAKsqB,IAAKnoB,EAAG,IAAQnC,KAAKsqB,IAAKpoB,EAAG,IAI1C,SAASqoB,GAAmBtuB,GAE3B,MAAMuuB,EAAiB,GACjBC,EAAkB,IAAI7sB,aAAc,GAEpC8sB,EAAiB,GAEvB,IAAM,IAAI3P,EAAI,EAAGA,EAAI,EAAGA,IAEvB2P,EAAgB3P,GAAM,CAAEA,EAAG,GAwH5B,MAAO,CAENle,OAtHD,SAAiBoe,EAAQpC,EAAUM,EAAU6B,GAE5C,MAAM2P,EAAmB1P,EAAO2P,sBAK1B1mB,OAA8BxJ,IAArBiwB,EAAiC,EAAIA,EAAiBzmB,OAErE,IAAI2mB,EAAaL,EAAgB3R,EAASuD,IAE1C,QAAoB1hB,IAAfmwB,EAA2B,CAI/BA,EAAa,GAEb,IAAM,IAAI9P,EAAI,EAAGA,EAAI7W,EAAQ6W,IAE5B8P,EAAY9P,GAAM,CAAEA,EAAG,GAIxByP,EAAgB3R,EAASuD,IAAOyO,EAMjC,IAAM,IAAI9P,EAAI,EAAGA,EAAI7W,EAAQ6W,IAAO,CAEnC,MAAM+P,EAAYD,EAAY9P,GAE9B+P,EAAW,GAAM/P,EACjB+P,EAAW,GAAMH,EAAkB5P,GAIpC8P,EAAWE,KAAMV,IAEjB,IAAM,IAAItP,EAAI,EAAGA,EAAI,EAAGA,IAElBA,EAAI7W,GAAU2mB,EAAY9P,GAAK,IAEnC2P,EAAgB3P,GAAK,GAAM8P,EAAY9P,GAAK,GAC5C2P,EAAgB3P,GAAK,GAAM8P,EAAY9P,GAAK,KAI5C2P,EAAgB3P,GAAK,GAAM2L,OAAOsE,iBAClCN,EAAgB3P,GAAK,GAAM,GAM7B2P,EAAeK,KAAMX,IAErB,MAAMllB,EAAeiU,EAASjU,cAAgB2T,EAASqQ,gBAAgBvW,SACjExN,EAAegU,EAAShU,cAAgB0T,EAASqQ,gBAAgB7T,OAEvE,IAAI4V,EAAqB,EAEzB,IAAM,IAAIlQ,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAM+P,EAAYJ,EAAgB3P,GAC5BG,EAAQ4P,EAAW,GACnB/uB,EAAQ+uB,EAAW,GAEpB5P,IAAUwL,OAAOsE,kBAAoBjvB,GAEpCmJ,GAAgB2T,EAASqS,aAAc,cAAgBnQ,KAAQ7V,EAAcgW,IAEjFrC,EAASrW,aAAc,cAAgBuY,EAAG7V,EAAcgW,IAIpD/V,GAAgB0T,EAASqS,aAAc,cAAgBnQ,KAAQ5V,EAAc+V,IAEjFrC,EAASrW,aAAc,cAAgBuY,EAAG5V,EAAc+V,IAIzDuP,EAAiB1P,GAAMhf,EACvBkvB,GAAsBlvB,IAIjBmJ,QAA+DxK,IAA/Cme,EAASqS,aAAc,cAAgBnQ,IAE3DlC,EAASC,gBAAiB,cAAgBiC,GAItC5V,QAA+DzK,IAA/Cme,EAASqS,aAAc,cAAgBnQ,IAE3DlC,EAASC,gBAAiB,cAAgBiC,GAI3C0P,EAAiB1P,GAAM,GASzB,MAAMoQ,EAAqBtS,EAASuS,qBAAuB,EAAI,EAAIH,EAEnEjQ,EAAQqQ,cAAcC,SAAUrvB,EAAI,2BAA4BkvB,GAChEnQ,EAAQqQ,cAAcC,SAAUrvB,EAAI,wBAAyBwuB,KCzI/D,SAASc,GAActvB,EAAI4rB,EAAY7hB,EAAYwY,GAElD,IAAIgN,EAAY,IAAInvB,QA+CpB,MAAO,CAENQ,OA/CD,SAAiBoe,GAEhB,MAAM1f,EAAQijB,EAAKnH,OAAO9b,MAEpBsd,EAAWoC,EAAOpC,SAClBqP,EAAiBL,EAAWvrB,IAAK2e,EAAQpC,GA8B/C,OA1BK2S,EAAUlvB,IAAK4rB,KAAqB3sB,IAEnCsd,EAASkQ,YAEbb,EAAeuD,iBAAkBxQ,GAIlC4M,EAAWhrB,OAAQqrB,GAEnBsD,EAAUtuB,IAAKgrB,EAAgB3sB,IAI3B0f,EAAO8B,kBAEX/W,EAAWnJ,OAAQoe,EAAO0C,eAAgB1hB,EAAGwhB,cAEf,OAAzBxC,EAAO2C,eAEX5X,EAAWnJ,OAAQoe,EAAO2C,cAAe3hB,EAAGwhB,eAMvCyK,GAaPhK,QATD,WAECsN,EAAY,IAAInvB,UC1ClB,SAASqvB,GAAaC,EAAQ5xB,EAASC,EAAOC,EAAOC,EAAWC,EAAWN,EAAQC,EAAMM,EAAYC,GAEpGsxB,OAAoBjxB,IAAXixB,EAAuBA,EAAS,GACzC5xB,OAAsBW,IAAZX,EAAwBA,EAAUgtB,EAC5CltB,OAAoBa,IAAXb,EAAuBA,EAAS+xB,EAEzCtxB,GAAQC,KAAMC,KAAMmxB,EAAQ5xB,EAASC,EAAOC,EAAOC,EAAWC,EAAWN,EAAQC,EAAMM,EAAYC,GAEnGG,KAAKK,OAAQ,ECRd,SAASgxB,GAAoBnyB,EAAMC,EAAOC,EAAQ6F,GAEjDnF,GAAQC,KAAMC,KAAM,MAEpBA,KAAKC,MAAQ,CAAEf,KAAMA,GAAQ,KAAMC,MAAOA,GAAS,EAAGC,OAAQA,GAAU,EAAG6F,MAAOA,GAAS,GAE3FjF,KAAKN,UAAYS,EACjBH,KAAKL,UAAYQ,EAEjBH,KAAKsxB,MAAQC,EAEbvxB,KAAKI,iBAAkB,EACvBJ,KAAKK,OAAQ,EAEbL,KAAKO,aAAc,ECdpB,SAASixB,GAAetyB,EAAMC,EAAOC,EAAQ6F,GAU5CnF,GAAQC,KAAMC,KAAM,MAEpBA,KAAKC,MAAQ,CAAEf,KAAMA,GAAQ,KAAMC,MAAOA,GAAS,EAAGC,OAAQA,GAAU,EAAG6F,MAAOA,GAAS,GAE3FjF,KAAKN,UAAYS,EACjBH,KAAKL,UAAYQ,EAEjBH,KAAKsxB,MAAQC,EAEbvxB,KAAKI,iBAAkB,EACvBJ,KAAKK,OAAQ,EAEbL,KAAKO,aAAc,EXyFpBkqB,GAAWhmB,UAAYC,OAAOC,OAAQkmB,GAASpmB,WAC/CgmB,GAAWhmB,UAAUG,YAAc6lB,GC3FnCuB,GAAsBvnB,UAAYC,OAAOC,OAAQskB,GAAkBxkB,WACnEunB,GAAsBvnB,UAAUG,YAAconB,GAE9CA,GAAsBvnB,UAAUoZ,yBAA0B,EAE1DmO,GAAsBvnB,UAAUsoB,2BAA6B,SAAWtR,EAAUmD,GAEjF5e,KAAK4e,QAAQtf,KAAOsf,EAAQtf,KAC5BU,KAAK4e,QAAQvf,OAASoyB,EACtBzxB,KAAK4e,QAAQ/e,SAAW+e,EAAQ/e,SAEhCG,KAAK4e,QAAQxe,gBAAkBwe,EAAQxe,gBACvCJ,KAAK4e,QAAQjf,UAAYif,EAAQjf,UACjCK,KAAK4e,QAAQlf,UAAYkf,EAAQlf,UAEjC,MAAMgyB,EAAS,CAEdloB,SAAU,CACT0R,UAAW,CAAE3Z,MAAO,OAGrB0I,aAAwB,iXAoBxBC,eAA0B,8TAoBrBmU,EAAW,IAAIvZ,GAAmB,EAAG,EAAG,GAExC6Z,EAAW,IAAI7U,GAAgB,CAEpCkC,KAAM,sBAENxC,SAAUjB,GAAempB,EAAOloB,UAChCS,aAAcynB,EAAOznB,aACrBC,eAAgBwnB,EAAOxnB,eACvB+T,KAAMC,EACNyT,SAAUC,IAIXjT,EAASnV,SAAS0R,UAAU3Z,MAAQqd,EAEpC,MAAMiT,EAAO,IAAI7T,GAAMK,EAAUM,GAE3BmT,EAAmBlT,EAAQjf,UAG5Bif,EAAQjf,YAAcoyB,IAA2BnT,EAAQjf,UAAY4pB,GAU1E,OARe,IAAIkB,GAAY,EAAG,GAAIzqB,MAC/BqC,OAAQoZ,EAAUoW,GAEzBjT,EAAQjf,UAAYmyB,EAEpBD,EAAKxT,SAASqF,UACdmO,EAAKlT,SAAS+E,UAEP1jB,MQrGRkxB,GAAYzsB,UAAYC,OAAOC,OAAQ7E,GAAQ2E,WAC/CysB,GAAYzsB,UAAUG,YAAcssB,GAEpCA,GAAYzsB,UAAUmZ,eAAgB,EAEtClZ,OAAOga,eAAgBwS,GAAYzsB,UAAW,SAAU,CAEvD3C,IAAK,WAEJ,OAAO9B,KAAKC,OAIbyC,IAAK,SAAWnB,GAEfvB,KAAKC,MAAQsB,KCTf8vB,GAAmB5sB,UAAYC,OAAOC,OAAQ7E,GAAQ2E,WACtD4sB,GAAmB5sB,UAAUG,YAAcysB,GAC3CA,GAAmB5sB,UAAUutB,sBAAuB,ECOpDR,GAAc/sB,UAAYC,OAAOC,OAAQ7E,GAAQ2E,WACjD+sB,GAAc/sB,UAAUG,YAAc4sB,GACtCA,GAAc/sB,UAAUwtB,iBAAkB,ECgB1C,MAAMC,GAAe,IAAIpyB,GACnBqyB,GAAsB,IAAId,GAC1Be,GAAiB,IAAIZ,GACrBa,GAAmB,IAAInB,GAMvBoB,GAAgB,GAChBC,GAAgB,GAIhBC,GAAY,IAAIpvB,aAAc,IAC9BqvB,GAAY,IAAIrvB,aAAc,GAC9BsvB,GAAY,IAAItvB,aAAc,GAIpC,SAASuvB,GAAS9vB,EAAO+vB,EAASC,GAEjC,MAAMC,EAAYjwB,EAAO,GAEzB,GAAKiwB,GAAa,GAAKA,EAAY,EAAI,OAAOjwB,EAI9C,MAAMkwB,EAAIH,EAAUC,EACpB,IAAItW,EAAI+V,GAAeS,GASvB,QAPW7yB,IAANqc,IAEJA,EAAI,IAAInZ,aAAc2vB,GACtBT,GAAeS,GAAMxW,GAIL,IAAZqW,EAAgB,CAEpBE,EAAU3mB,QAASoQ,EAAG,GAEtB,IAAM,IAAIgE,EAAI,EAAGjc,EAAS,EAAGic,IAAMqS,IAAYrS,EAE9Cjc,GAAUuuB,EACVhwB,EAAO0d,GAAIpU,QAASoQ,EAAGjY,GAMzB,OAAOiY,EAIR,SAASyW,GAAatrB,EAAGC,GAExB,GAAKD,EAAEgC,SAAW/B,EAAE+B,OAAS,OAAO,EAEpC,IAAM,IAAI6W,EAAI,EAAGyN,EAAItmB,EAAEgC,OAAQ6W,EAAIyN,EAAGzN,IAErC,GAAK7Y,EAAG6Y,KAAQ5Y,EAAG4Y,GAAM,OAAO,EAIjC,OAAO,EAIR,SAAS0S,GAAWvrB,EAAGC,GAEtB,IAAM,IAAI4Y,EAAI,EAAGyN,EAAIrmB,EAAE+B,OAAQ6W,EAAIyN,EAAGzN,IAErC7Y,EAAG6Y,GAAM5Y,EAAG4Y,GAQd,SAAS2S,GAAe/D,EAAU4D,GAEjC,IAAIxW,EAAIgW,GAAeQ,QAEZ7yB,IAANqc,IAEJA,EAAI,IAAI3Y,WAAYmvB,GACpBR,GAAeQ,GAAMxW,GAItB,IAAM,IAAIgE,EAAI,EAAGA,IAAMwS,IAAMxS,EAE5BhE,EAAGgE,GAAM4O,EAASgE,sBAInB,OAAO5W,EAWR,SAAS6W,GAAa3xB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEdA,EAAO,KAAQnc,IAEpBzE,EAAG4xB,UAAWrzB,KAAKszB,KAAMptB,GAEzBmc,EAAO,GAAMnc,GAMd,SAASqtB,GAAa9xB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEnB,QAAaniB,IAARgG,EAAEqB,EAED8a,EAAO,KAAQnc,EAAEqB,GAAK8a,EAAO,KAAQnc,EAAEmB,IAE3C5F,EAAG+xB,UAAWxzB,KAAKszB,KAAMptB,EAAEqB,EAAGrB,EAAEmB,GAEhCgb,EAAO,GAAMnc,EAAEqB,EACf8a,EAAO,GAAMnc,EAAEmB,OAIV,CAEN,GAAK2rB,GAAa3Q,EAAOnc,GAAM,OAE/BzE,EAAGgyB,WAAYzzB,KAAKszB,KAAMptB,GAE1B+sB,GAAW5Q,EAAOnc,IAMpB,SAASwtB,GAAajyB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEnB,QAAaniB,IAARgG,EAAEqB,EAED8a,EAAO,KAAQnc,EAAEqB,GAAK8a,EAAO,KAAQnc,EAAEmB,GAAKgb,EAAO,KAAQnc,EAAEuB,IAEjEhG,EAAGkyB,UAAW3zB,KAAKszB,KAAMptB,EAAEqB,EAAGrB,EAAEmB,EAAGnB,EAAEuB,GAErC4a,EAAO,GAAMnc,EAAEqB,EACf8a,EAAO,GAAMnc,EAAEmB,EACfgb,EAAO,GAAMnc,EAAEuB,QAIV,QAAavH,IAARgG,EAAEqW,EAER8F,EAAO,KAAQnc,EAAEqW,GAAK8F,EAAO,KAAQnc,EAAEsW,GAAK6F,EAAO,KAAQnc,EAAEyB,IAEjElG,EAAGkyB,UAAW3zB,KAAKszB,KAAMptB,EAAEqW,EAAGrW,EAAEsW,EAAGtW,EAAEyB,GAErC0a,EAAO,GAAMnc,EAAEqW,EACf8F,EAAO,GAAMnc,EAAEsW,EACf6F,EAAO,GAAMnc,EAAEyB,OAIV,CAEN,GAAKqrB,GAAa3Q,EAAOnc,GAAM,OAE/BzE,EAAGmyB,WAAY5zB,KAAKszB,KAAMptB,GAE1B+sB,GAAW5Q,EAAOnc,IAMpB,SAAS2tB,GAAapyB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEnB,QAAaniB,IAARgG,EAAEqB,EAED8a,EAAO,KAAQnc,EAAEqB,GAAK8a,EAAO,KAAQnc,EAAEmB,GAAKgb,EAAO,KAAQnc,EAAEuB,GAAK4a,EAAO,KAAQnc,EAAEC,IAEvF1E,EAAGqyB,UAAW9zB,KAAKszB,KAAMptB,EAAEqB,EAAGrB,EAAEmB,EAAGnB,EAAEuB,EAAGvB,EAAEC,GAE1Ckc,EAAO,GAAMnc,EAAEqB,EACf8a,EAAO,GAAMnc,EAAEmB,EACfgb,EAAO,GAAMnc,EAAEuB,EACf4a,EAAO,GAAMnc,EAAEC,OAIV,CAEN,GAAK6sB,GAAa3Q,EAAOnc,GAAM,OAE/BzE,EAAGsyB,WAAY/zB,KAAKszB,KAAMptB,GAE1B+sB,GAAW5Q,EAAOnc,IAQpB,SAAS8tB,GAAYvyB,EAAIyE,GAExB,MAAMmc,EAAQriB,KAAKqiB,MACb4R,EAAW/tB,EAAE+tB,SAEnB,QAAkB/zB,IAAb+zB,EAAyB,CAE7B,GAAKjB,GAAa3Q,EAAOnc,GAAM,OAE/BzE,EAAGyyB,iBAAkBl0B,KAAKszB,MAAM,EAAOptB,GAEvC+sB,GAAW5Q,EAAOnc,OAEZ,CAEN,GAAK8sB,GAAa3Q,EAAO4R,GAAa,OAEtCvB,GAAUhwB,IAAKuxB,GAEfxyB,EAAGyyB,iBAAkBl0B,KAAKszB,MAAM,EAAOZ,IAEvCO,GAAW5Q,EAAO4R,IAMpB,SAASE,GAAY1yB,EAAIyE,GAExB,MAAMmc,EAAQriB,KAAKqiB,MACb4R,EAAW/tB,EAAE+tB,SAEnB,QAAkB/zB,IAAb+zB,EAAyB,CAE7B,GAAKjB,GAAa3Q,EAAOnc,GAAM,OAE/BzE,EAAG2yB,iBAAkBp0B,KAAKszB,MAAM,EAAOptB,GAEvC+sB,GAAW5Q,EAAOnc,OAEZ,CAEN,GAAK8sB,GAAa3Q,EAAO4R,GAAa,OAEtCxB,GAAU/vB,IAAKuxB,GAEfxyB,EAAG2yB,iBAAkBp0B,KAAKszB,MAAM,EAAOb,IAEvCQ,GAAW5Q,EAAO4R,IAMpB,SAASI,GAAY5yB,EAAIyE,GAExB,MAAMmc,EAAQriB,KAAKqiB,MACb4R,EAAW/tB,EAAE+tB,SAEnB,QAAkB/zB,IAAb+zB,EAAyB,CAE7B,GAAKjB,GAAa3Q,EAAOnc,GAAM,OAE/BzE,EAAG6yB,iBAAkBt0B,KAAKszB,MAAM,EAAOptB,GAEvC+sB,GAAW5Q,EAAOnc,OAEZ,CAEN,GAAK8sB,GAAa3Q,EAAO4R,GAAa,OAEtCzB,GAAU9vB,IAAKuxB,GAEfxyB,EAAG6yB,iBAAkBt0B,KAAKszB,MAAM,EAAOd,IAEvCS,GAAW5Q,EAAO4R,IAQpB,SAASM,GAAY9yB,EAAIyE,EAAGipB,GAE3B,MAAM9M,EAAQriB,KAAKqiB,MACbmS,EAAOrF,EAASgE,sBAEjB9Q,EAAO,KAAQmS,IAEnB/yB,EAAGgzB,UAAWz0B,KAAKszB,KAAMkB,GACzBnS,EAAO,GAAMmS,GAIdrF,EAASuF,iBAAkBxuB,GAAKgsB,GAAcsC,GAI/C,SAASG,GAAmBlzB,EAAIyE,EAAGipB,GAElC,MAAM9M,EAAQriB,KAAKqiB,MACbmS,EAAOrF,EAASgE,sBAEjB9Q,EAAO,KAAQmS,IAEnB/yB,EAAGgzB,UAAWz0B,KAAKszB,KAAMkB,GACzBnS,EAAO,GAAMmS,GAIdrF,EAASyF,kBAAmB1uB,GAAKisB,GAAqBqC,GAIvD,SAASK,GAAcpzB,EAAIyE,EAAGipB,GAE7B,MAAM9M,EAAQriB,KAAKqiB,MACbmS,EAAOrF,EAASgE,sBAEjB9Q,EAAO,KAAQmS,IAEnB/yB,EAAGgzB,UAAWz0B,KAAKszB,KAAMkB,GACzBnS,EAAO,GAAMmS,GAIdrF,EAAS2F,aAAc5uB,GAAKksB,GAAgBoC,GAI7C,SAASO,GAAYtzB,EAAIyE,EAAGipB,GAE3B,MAAM9M,EAAQriB,KAAKqiB,MACbmS,EAAOrF,EAASgE,sBAEjB9Q,EAAO,KAAQmS,IAEnB/yB,EAAGgzB,UAAWz0B,KAAKszB,KAAMkB,GACzBnS,EAAO,GAAMmS,GAIdrF,EAAS6F,mBAAoB9uB,GAAKmsB,GAAkBmC,GAMrD,SAASS,GAAaxzB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEdA,EAAO,KAAQnc,IAEpBzE,EAAGgzB,UAAWz0B,KAAKszB,KAAMptB,GAEzBmc,EAAO,GAAMnc,GAId,SAASgvB,GAAazzB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEd2Q,GAAa3Q,EAAOnc,KAEzBzE,EAAG0zB,WAAYn1B,KAAKszB,KAAMptB,GAE1B+sB,GAAW5Q,EAAOnc,IAInB,SAASkvB,GAAa3zB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEd2Q,GAAa3Q,EAAOnc,KAEzBzE,EAAG4zB,WAAYr1B,KAAKszB,KAAMptB,GAE1B+sB,GAAW5Q,EAAOnc,IAInB,SAASovB,GAAa7zB,EAAIyE,GAEzB,MAAMmc,EAAQriB,KAAKqiB,MAEd2Q,GAAa3Q,EAAOnc,KAEzBzE,EAAG8zB,WAAYv1B,KAAKszB,KAAMptB,GAE1B+sB,GAAW5Q,EAAOnc,IAMnB,SAASsvB,GAAc/zB,EAAIyE,GAE1B,MAAMmc,EAAQriB,KAAKqiB,MAEdA,EAAO,KAAQnc,IAEpBzE,EAAGg0B,WAAYz1B,KAAKszB,KAAMptB,GAE1Bmc,EAAO,GAAMnc,GAuDd,SAASwvB,GAAkBj0B,EAAIyE,GAE9BzE,EAAGk0B,WAAY31B,KAAKszB,KAAMptB,GAK3B,SAAS0vB,GAAkBn0B,EAAIyE,GAE9BzE,EAAGo0B,WAAY71B,KAAKszB,KAAMptB,GAI3B,SAAS4vB,GAAkBr0B,EAAIyE,GAE9BzE,EAAG0zB,WAAYn1B,KAAKszB,KAAMptB,GAI3B,SAAS6vB,GAAkBt0B,EAAIyE,GAE9BzE,EAAG4zB,WAAYr1B,KAAKszB,KAAMptB,GAI3B,SAAS8vB,GAAkBv0B,EAAIyE,GAE9BzE,EAAG8zB,WAAYv1B,KAAKszB,KAAMptB,GAO3B,SAAS+vB,GAAkBx0B,EAAIyE,GAE9B,MAAMhH,EAAOyzB,GAASzsB,EAAGlG,KAAKwZ,KAAM,GAEpC/X,EAAGgyB,WAAYzzB,KAAKszB,KAAMp0B,GAI3B,SAASg3B,GAAkBz0B,EAAIyE,GAE9B,MAAMhH,EAAOyzB,GAASzsB,EAAGlG,KAAKwZ,KAAM,GAEpC/X,EAAGmyB,WAAY5zB,KAAKszB,KAAMp0B,GAI3B,SAASi3B,GAAkB10B,EAAIyE,GAE9B,MAAMhH,EAAOyzB,GAASzsB,EAAGlG,KAAKwZ,KAAM,GAEpC/X,EAAGsyB,WAAY/zB,KAAKszB,KAAMp0B,GAM3B,SAASk3B,GAAiB30B,EAAIyE,GAE7B,MAAMhH,EAAOyzB,GAASzsB,EAAGlG,KAAKwZ,KAAM,GAEpC/X,EAAGyyB,iBAAkBl0B,KAAKszB,MAAM,EAAOp0B,GAIxC,SAASm3B,GAAiB50B,EAAIyE,GAE7B,MAAMhH,EAAOyzB,GAASzsB,EAAGlG,KAAKwZ,KAAM,GAEpC/X,EAAG2yB,iBAAkBp0B,KAAKszB,MAAM,EAAOp0B,GAIxC,SAASo3B,GAAiB70B,EAAIyE,GAE7B,MAAMhH,EAAOyzB,GAASzsB,EAAGlG,KAAKwZ,KAAM,IAEpC/X,EAAG6yB,iBAAkBt0B,KAAKszB,MAAM,EAAOp0B,GAMxC,SAASq3B,GAAiB90B,EAAIyE,EAAGipB,GAEhC,MAAM4D,EAAI7sB,EAAEwD,OAEN8sB,EAAQtD,GAAe/D,EAAU4D,GAEvCtxB,EAAGo0B,WAAY71B,KAAKszB,KAAMkD,GAE1B,IAAM,IAAIjW,EAAI,EAAGA,IAAMwS,IAAMxS,EAE5B4O,EAASuF,iBAAkBxuB,EAAGqa,IAAO2R,GAAcsE,EAAOjW,IAM5D,SAASkW,GAAiBh1B,EAAIyE,EAAGipB,GAEhC,MAAM4D,EAAI7sB,EAAEwD,OAEN8sB,EAAQtD,GAAe/D,EAAU4D,GAEvCtxB,EAAGo0B,WAAY71B,KAAKszB,KAAMkD,GAE1B,IAAM,IAAIjW,EAAI,EAAGA,IAAMwS,IAAMxS,EAE5B4O,EAAS6F,mBAAoB9uB,EAAGqa,IAAO8R,GAAkBmE,EAAOjW,IA6ClE,SAASmW,GAAe9U,EAAI+U,EAAYrD,GAEvCtzB,KAAK4hB,GAAKA,EACV5hB,KAAKszB,KAAOA,EACZtzB,KAAKqiB,MAAQ,GACbriB,KAAK8wB,SAnNN,SAA4BxxB,GAE3B,OAASA,GAER,KAAK,KAAQ,OAAO8zB,GACpB,KAAK,MAAQ,OAAOG,GACpB,KAAK,MAAQ,OAAOG,GACpB,KAAK,MAAQ,OAAOG,GAEpB,KAAK,MAAQ,OAAOG,GACpB,KAAK,MAAQ,OAAOG,GACpB,KAAK,MAAQ,OAAOE,GAEpB,KAAK,KAAQ,KAAK,MAAQ,OAAOY,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOC,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOE,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOE,GAEjC,KAAK,KAAQ,OAAOE,GAEpB,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOjB,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOM,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOE,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOJ,IAyKOiC,CAAmBD,EAAWr3B,MAM/C,SAASu3B,GAAkBjV,EAAI+U,EAAYrD,GAE1CtzB,KAAK4hB,GAAKA,EACV5hB,KAAKszB,KAAOA,EACZtzB,KAAKqiB,MAAQ,GACbriB,KAAKwZ,KAAOmd,EAAWnd,KACvBxZ,KAAK8wB,SAtDN,SAA6BxxB,GAE5B,OAASA,GAER,KAAK,KAAQ,OAAOo2B,GACpB,KAAK,MAAQ,OAAOO,GACpB,KAAK,MAAQ,OAAOC,GACpB,KAAK,MAAQ,OAAOC,GAEpB,KAAK,MAAQ,OAAOC,GACpB,KAAK,MAAQ,OAAOC,GACpB,KAAK,MAAQ,OAAOC,GAEpB,KAAK,KAAQ,KAAK,MAAQ,OAAOV,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOE,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOC,GACjC,KAAK,MAAQ,KAAK,MAAQ,OAAOC,GAEjC,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOO,GAER,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACJ,OAAOE,IAyBOK,CAAoBH,EAAWr3B,MAoBhD,SAASy3B,GAAmBnV,GAE3B5hB,KAAK4hB,GAAKA,EAEV5hB,KAAKg3B,IAAM,GACXh3B,KAAK4U,IAAM,GAnBZiiB,GAAiBpyB,UAAUwyB,YAAc,SAAW/3B,GAEnD,MAAMmjB,EAAQriB,KAAKqiB,MAEdnjB,aAAgBkE,cAAgBif,EAAM3Y,SAAWxK,EAAKwK,SAE1D1J,KAAKqiB,MAAQ,IAAIjf,aAAclE,EAAKwK,SAIrCupB,GAAW5Q,EAAOnjB,IAanB63B,GAAkBtyB,UAAUqsB,SAAW,SAAWrvB,EAAIF,EAAO4tB,GAE5D,MAAM6H,EAAMh3B,KAAKg3B,IAEjB,IAAM,IAAIzW,EAAI,EAAGwS,EAAIiE,EAAIttB,OAAQ6W,IAAMwS,IAAMxS,EAAI,CAEhD,MAAMta,EAAI+wB,EAAKzW,GACfta,EAAE6qB,SAAUrvB,EAAIF,EAAO0E,EAAE2b,IAAMuN,KAUjC,MAAM+H,GAAa,2BAWnB,SAASC,GAAYC,EAAWC,GAE/BD,EAAUJ,IAAIxvB,KAAM6vB,GACpBD,EAAUxiB,IAAKyiB,EAAczV,IAAOyV,EAIrC,SAASC,GAAcX,EAAYrD,EAAM8D,GAExC,MAAMG,EAAOZ,EAAW3qB,KACvBwrB,EAAaD,EAAK7tB,OAKnB,IAFAwtB,GAAWO,UAAY,IAER,CAEd,MAAMC,EAAQR,GAAWS,KAAMJ,GAC9BK,EAAWV,GAAWO,UAEvB,IAAI7V,EAAK8V,EAAO,GAChB,MAAMG,EAA2B,MAAfH,EAAO,GACxBI,EAAYJ,EAAO,GAIpB,GAFKG,IAAYjW,GAAU,QAER1hB,IAAd43B,GAAyC,MAAdA,GAAqBF,EAAW,IAAMJ,EAAa,CAIlFL,GAAYC,OAAyBl3B,IAAd43B,EACtB,IAAIpB,GAAe9U,EAAI+U,EAAYrD,GACnC,IAAIuD,GAAkBjV,EAAI+U,EAAYrD,IAEvC,MAEM,CAKN,IAAIyE,EADQX,EAAUxiB,IACNgN,QAEF1hB,IAAT63B,IAEJA,EAAO,IAAIhB,GAAmBnV,GAC9BuV,GAAYC,EAAWW,IAIxBX,EAAYW,IAUf,SAASC,GAAev2B,EAAI+e,GAE3BxgB,KAAKg3B,IAAM,GACXh3B,KAAK4U,IAAM,GAEX,MAAMme,EAAItxB,EAAGw2B,oBAAqBzX,EAAS/e,EAAGy2B,iBAE9C,IAAM,IAAI3X,EAAI,EAAGA,EAAIwS,IAAMxS,EAAI,CAE9B,MAAMyD,EAAOviB,EAAG02B,iBAAkB3X,EAASD,GAG3C+W,GAActT,EAFNviB,EAAG22B,mBAAoB5X,EAASwD,EAAKhY,MAEnBhM,OCl0B5B,SAASq4B,GAAa52B,EAAInC,EAAMg5B,GAE/B,MAAM5G,EAASjwB,EAAG82B,aAAcj5B,GAKhC,OAHAmC,EAAG+2B,aAAc9G,EAAQ4G,GACzB72B,EAAGg3B,cAAe/G,GAEXA,EDi0BRsG,GAAcvzB,UAAUqsB,SAAW,SAAWrvB,EAAIuK,EAAMzK,EAAO4tB,GAE9D,MAAMlpB,EAAIjG,KAAK4U,IAAK5I,QAET9L,IAAN+F,GAAkBA,EAAE6qB,SAAUrvB,EAAIF,EAAO4tB,IAI/C6I,GAAcvzB,UAAUi0B,YAAc,SAAWj3B,EAAIgf,EAAQzU,GAE5D,MAAM9F,EAAIua,EAAQzU,QAEP9L,IAANgG,GAAkBlG,KAAK8wB,SAAUrvB,EAAIuK,EAAM9F,IAOjD8xB,GAAcW,OAAS,SAAWl3B,EAAIu1B,EAAK4B,EAAQzJ,GAElD,IAAM,IAAI5O,EAAI,EAAGwS,EAAIiE,EAAIttB,OAAQ6W,IAAMwS,IAAMxS,EAAI,CAEhD,MAAMta,EAAI+wB,EAAKzW,GACdra,EAAI0yB,EAAQ3yB,EAAE2b,KAEQ,IAAlB1b,EAAE3F,aAGN0F,EAAE6qB,SAAUrvB,EAAIyE,EAAE3E,MAAO4tB,KAQ5B6I,GAAca,aAAe,SAAW7B,EAAK4B,GAE5C,MAAMrc,EAAI,GAEV,IAAM,IAAIgE,EAAI,EAAGwS,EAAIiE,EAAIttB,OAAQ6W,IAAMwS,IAAMxS,EAAI,CAEhD,MAAMta,EAAI+wB,EAAKzW,GACVta,EAAE2b,MAAMgX,GAASrc,EAAE/U,KAAMvB,GAI/B,OAAOsW,GEn3BR,IAAIuc,GAAiB,EAgBrB,SAASC,GAAuBl5B,GAE/B,OAASA,GAER,KAAKm5B,EACJ,MAAO,CAAE,SAAU,aACpB,KAAKC,EACJ,MAAO,CAAE,OAAQ,aAClB,KAAKC,EACJ,MAAO,CAAE,OAAQ,aAClB,KAAKC,EACJ,MAAO,CAAE,OAAQ,kBAClB,KAAKC,EACJ,MAAO,CAAE,OAAQ,mBAClB,KAAKC,EACJ,MAAO,CAAE,OAAQ,oBAClB,KAAKC,EACJ,MAAO,CAAE,QAAS,oCACnB,KAAKC,EACJ,MAAO,CAAE,SAAU,aACpB,QAEC,MAAO,CAAE,SAAU,cAMtB,SAASC,GAAiB/3B,EAAIiwB,EAAQpyB,GAErC,MAAMm6B,EAASh4B,EAAGi4B,mBAAoBhI,EAAQjwB,EAAGk4B,gBAC3CC,EAAMn4B,EAAGo4B,iBAAkBnI,GAASoI,OAE1C,GAAKL,GAAkB,KAARG,EAAa,MAAO,GAOnC,MAAO,4CAA8Ct6B,EAAO,KAAOs6B,EAtDpE,SAAyBtB,GAExB,MAAMpJ,EAAQoJ,EAAOyB,MAAO,MAE5B,IAAM,IAAIxZ,EAAI,EAAGA,EAAI2O,EAAMxlB,OAAQ6W,IAElC2O,EAAO3O,GAAQA,EAAI,EAAM,KAAO2O,EAAO3O,GAIxC,OAAO2O,EAAM8K,KAAM,MA4CsDC,CAF1Dx4B,EAAGy4B,gBAAiBxI,IAMpC,SAASyI,GAA0BC,EAAcv6B,GAEhD,MAAMw6B,EAAatB,GAAuBl5B,GAC1C,MAAO,QAAUu6B,EAAe,2BAA6BC,EAAY,GAAM,WAAaA,EAAY,GAAM,MAI/G,SAASC,GAA0BF,EAAcv6B,GAEhD,MAAMw6B,EAAatB,GAAuBl5B,GAC1C,MAAO,QAAUu6B,EAAe,mCAAqCC,EAAY,GAAMA,EAAY,GAAM,MAI1G,SAASE,GAAwBH,EAAcvb,GAE9C,IAAI2b,EAEJ,OAAS3b,GAER,KAAK4b,EACJD,EAAkB,SAClB,MAED,KAAKE,EACJF,EAAkB,WAClB,MAED,KAAKG,EACJH,EAAkB,kBAClB,MAED,KAAKI,EACJJ,EAAkB,aAClB,MAED,KAAKK,EACJL,EAAkB,SAClB,MAED,QAECA,EAAkB,SAIpB,MAAO,QAAUJ,EAAe,2BAA6BI,EAAkB,0BAwDhF,SAASM,GAAiBxC,GAEzB,MAAkB,KAAXA,EAIR,SAASyC,GAAkBzC,EAAQhzB,GAElC,OAAOgzB,EACL0C,QAAS,kBAAmB11B,EAAW21B,cACvCD,QAAS,mBAAoB11B,EAAW41B,eACxCF,QAAS,wBAAyB11B,EAAW61B,mBAC7CH,QAAS,oBAAqB11B,EAAW81B,gBACzCJ,QAAS,mBAAoB11B,EAAW+1B,eACxCL,QAAS,yBAA0B11B,EAAWg2B,oBAC9CN,QAAS,0BAA2B11B,EAAWi2B,qBAC/CP,QAAS,2BAA4B11B,EAAWk2B,sBAInD,SAASC,GAA0BnD,EAAQhzB,GAE1C,OAAOgzB,EACL0C,QAAS,uBAAwB11B,EAAWo2B,mBAC5CV,QAAS,yBAA4B11B,EAAWo2B,kBAAoBp2B,EAAWq2B,qBAMlF,MAAMC,GAAiB,mCAEvB,SAASC,GAAiBvD,GAEzB,OAAOA,EAAO0C,QAASY,GAAgBE,IAIxC,SAASA,GAAiBpE,EAAOqE,GAEhC,MAAMzD,EAAShsB,GAAayvB,GAE5B,QAAgB77B,IAAXo4B,EAEJ,MAAM,IAAI0D,MAAO,6BAA+BD,EAAU,KAI3D,OAAOF,GAAiBvD,GAMzB,MAAM2D,GAA8B,+FAC9BC,GAAoB,+IAE1B,SAASC,GAAa7D,GAErB,OAAOA,EACL0C,QAASkB,GAAmBE,IAC5BpB,QAASiB,GAA6BI,IAIzC,SAASA,GAAwB3E,EAAOz2B,EAAOq7B,EAAKC,GAGnD,OAAOH,GAAc1E,EAAOz2B,EAAOq7B,EAAKC,GAIzC,SAASH,GAAc1E,EAAOz2B,EAAOq7B,EAAKC,GAEzC,IAAIjE,EAAS,GAEb,IAAM,IAAI/X,EAAIic,SAAUv7B,GAASsf,EAAIic,SAAUF,GAAO/b,IAErD+X,GAAUiE,EACRvB,QAAS,eAAgB,KAAOza,EAAI,MACpCya,QAAS,uBAAwBza,GAIpC,OAAO+X,EAMR,SAASmE,GAAmBn3B,GAE3B,IAAIo3B,EAAkB,aAAep3B,EAAWof,UAAY,sBAAwBpf,EAAWof,UAAY,QAgB3G,MAd8B,UAAzBpf,EAAWof,UAEfgY,GAAmB,2BAEiB,YAAzBp3B,EAAWof,UAEtBgY,GAAmB,6BAEiB,SAAzBp3B,EAAWof,YAEtBgY,GAAmB,2BAIbA,EAsGR,SAASC,GAAclhB,EAAUmhB,EAAUt3B,EAAYma,GAEtD,MAAMhe,EAAKga,EAASohB,aAEd7yB,EAAU1E,EAAW0E,QAE3B,IAAIC,EAAe3E,EAAW2E,aAC1BC,EAAiB5E,EAAW4E,eAEhC,MAAM4yB,EA3GP,SAAsCx3B,GAErC,IAAIw3B,EAAsB,uBAgB1B,OAdKx3B,EAAWy3B,gBAAkBC,EAEjCF,EAAsB,qBAEXx3B,EAAWy3B,gBAAkBE,EAExCH,EAAsB,0BAEXx3B,EAAWy3B,gBAAkBG,IAExCJ,EAAsB,sBAIhBA,EAyFqBK,CAA6B73B,GACnD83B,EAtFP,SAAmC93B,GAElC,IAAI83B,EAAmB,mBAEvB,GAAK93B,EAAW8P,OAEf,OAAS9P,EAAW+3B,YAEnB,KAAK9Q,EACL,KAAKE,EACJ2Q,EAAmB,mBACnB,MAED,KAAKrf,EACL,KAAKuf,EACJF,EAAmB,sBAOtB,OAAOA,EAgEkBG,CAA0Bj4B,GAC7Ck4B,EA7DP,SAAmCl4B,GAElC,IAAIk4B,EAAmB,yBAEvB,GAAKl4B,EAAW8P,OAEf,OAAS9P,EAAW+3B,YAEnB,KAAK5Q,EACL,KAAK6Q,EAEJE,EAAmB,yBAOtB,OAAOA,EA2CkBC,CAA0Bn4B,GAC7Co4B,EAxCP,SAAuCp4B,GAEtC,IAAIo4B,EAAuB,uBAE3B,GAAKp4B,EAAW8P,OAEf,OAAS9P,EAAWq4B,SAEnB,KAAKC,EACJF,EAAuB,2BACvB,MAED,KAAKG,EACJH,EAAuB,sBACvB,MAED,KAAKI,EACJJ,EAAuB,sBAO1B,OAAOA,EAgBsBK,CAA8Bz4B,GAGrD04B,EAAsBviB,EAASwiB,YAAc,EAAMxiB,EAASwiB,YAAc,EAE1EC,EAAmB54B,EAAW3D,SAAW,GAvRhD,SAA6B2D,GAS5B,MAPe,CACZA,EAAW64B,sBAAwB74B,EAAW84B,cAAgB94B,EAAW4Q,SAAW5Q,EAAW+4B,uBAAyB/4B,EAAW2kB,oBAAsB3kB,EAAWg5B,aAAuC,aAAxBh5B,EAAWi5B,SAA4B,kDAAoD,IAC9Qj5B,EAAWk5B,oBAAsBl5B,EAAW6f,yBAA4B7f,EAAWm5B,2BAA6B,wCAA0C,GAC1Jn5B,EAAWo5B,sBAAwBp5B,EAAWq5B,6BAAiC,2CAA6C,IAC5Hr5B,EAAWs5B,2BAA6Bt5B,EAAW8P,SAAY9P,EAAWu5B,kCAAoC,gDAAkD,IAGrJC,OAAQhE,IAAkBd,KAAM,MA8QM+E,CAAoBz5B,GAElE05B,EA5QP,SAA0Bh1B,GAEzB,MAAMi1B,EAAS,GAEf,IAAM,MAAMjzB,KAAQhC,EAAU,CAE7B,MAAMzI,EAAQyI,EAASgC,IAER,IAAVzK,GAEL09B,EAAOz3B,KAAM,WAAawE,EAAO,IAAMzK,GAIxC,OAAO09B,EAAOjF,KAAM,MA8PEkF,CAAiBl1B,GAEjCwW,EAAU/e,EAAG09B,gBAEnB,IAAIC,EAAcC,EACdC,EAAgBh6B,EAAWiG,YAAc,YAAcjG,EAAWiG,YAAc,KAAO,GAEtFjG,EAAWi6B,qBAEfH,EAAe,CAEdJ,GAECF,OAAQhE,IAAkBd,KAAM,MAE7BoF,EAAa11B,OAAS,IAE1B01B,GAAgB,MAIjBC,EAAiB,CAEhBnB,EACAc,GAECF,OAAQhE,IAAkBd,KAAM,MAE7BqF,EAAe31B,OAAS,IAE5B21B,GAAkB,QAMnBD,EAAe,CAEd3C,GAAmBn3B,GAEnB,uBAAyBA,EAAWk6B,WAEpCR,EAEA15B,EAAWm6B,WAAa,yBAA2B,GACnDn6B,EAAWo6B,gBAAkB,+BAAiC,GAE9Dp6B,EAAWq6B,uBAAyB,0BAA4B,GAEhE,wBAA0B3B,EAE1B,qBAAuB14B,EAAWs6B,SAChCt6B,EAAWu6B,QAAUv6B,EAAWgF,IAAQ,kBAAoB,GAC5DhF,EAAWu6B,QAAUv6B,EAAWw6B,QAAY,mBAAqB,GAEnEx6B,EAAWsP,IAAM,kBAAoB,GACrCtP,EAAW8P,OAAS,qBAAuB,GAC3C9P,EAAW8P,OAAS,WAAaooB,EAAmB,GACpDl4B,EAAWuQ,SAAW,uBAAyB,GAC/CvQ,EAAWoQ,MAAQ,oBAAsB,GACzCpQ,EAAW0Q,YAAc,0BAA4B,GACrD1Q,EAAW4Q,QAAU,sBAAwB,GAC7C5Q,EAAW+Q,UAAY,wBAA0B,GAC/C/Q,EAAW+Q,WAAa/Q,EAAWy6B,qBAAyB,gCAAkC,GAC9Fz6B,EAAW+Q,WAAa/Q,EAAW+4B,sBAA0B,iCAAmC,GAElG/4B,EAAWukB,aAAe,2BAA6B,GACvDvkB,EAAWykB,sBAAwB,qCAAuC,GAC1EzkB,EAAW2kB,mBAAqB,kCAAoC,GACpE3kB,EAAWmR,iBAAmBnR,EAAWq6B,uBAAyB,8BAAgC,GAClGr6B,EAAW4P,YAAc,0BAA4B,GACrD5P,EAAWuR,aAAe,2BAA6B,GACvDvR,EAAWyR,aAAe,2BAA6B,GACvDzR,EAAW0P,SAAW,uBAAyB,GAC/C1P,EAAW8kB,gBAAkB,8BAAgC,GAE7D9kB,EAAW06B,eAAiB,sBAAwB,GACpD16B,EAAW26B,aAAe,oBAAsB,GAChD36B,EAAW46B,UAAY,iBAAmB,GAC1C56B,EAAW66B,cAAgB,0BAA4B,GAEvD76B,EAAWg5B,YAAc,sBAAwB,GAEjDh5B,EAAWmF,SAAW,uBAAyB,GAC/CnF,EAAW86B,iBAAmB,uBAAyB,GAEvD96B,EAAWoF,aAAe,2BAA6B,GACvDpF,EAAWqF,eAA2C,IAA3BrF,EAAWg5B,YAAwB,2BAA6B,GAC3Fh5B,EAAW+6B,YAAc,uBAAyB,GAClD/6B,EAAWg7B,UAAY,qBAAuB,GAE9Ch7B,EAAWi7B,iBAAmB,wBAA0B,GACxDj7B,EAAWi7B,iBAAmB,WAAazD,EAAsB,GAEjEx3B,EAAWk7B,gBAAkB,8BAAgC,GAE7Dl7B,EAAW6f,uBAAyB,0BAA4B,GAC9D7f,EAAW6f,wBAA0B7f,EAAWm5B,2BAA+B,8BAAgC,GAEjH,4BACA,gCACA,iCACA,2BACA,6BACA,+BACA,+BAEA,wBAEA,mCAEA,SAEA,8BAEA,kCAEA,SAEA,2BACA,yBACA,qBAEA,qBAEA,4BAEA,SAEA,mBAEA,0BAEA,SAEA,0BAEA,iCACA,iCACA,iCACA,iCAEA,4BAEA,mCACA,mCACA,mCACA,mCAEA,UAEA,mCACA,mCACA,mCACA,mCAEA,WAEA,SAEA,sBAEA,8BACA,+BAEA,SAEA,MAECK,OAAQhE,IAAkBd,KAAM,MAElCqF,EAAiB,CAEhBnB,EAEAzB,GAAmBn3B,GAEnB,uBAAyBA,EAAWk6B,WAEpCR,EAEA15B,EAAWm7B,UAAY,qBAAuBn7B,EAAWm7B,WAAcn7B,EAAWm7B,UAAY,EAAI,GAAK,MAAS,GAEhH,wBAA0BzC,EAExB14B,EAAWu6B,QAAUv6B,EAAWgF,IAAQ,kBAAoB,GAC5DhF,EAAWu6B,QAAUv6B,EAAWw6B,QAAY,mBAAqB,GAEnEx6B,EAAWsP,IAAM,kBAAoB,GACrCtP,EAAWmV,OAAS,qBAAuB,GAC3CnV,EAAW8P,OAAS,qBAAuB,GAC3C9P,EAAW8P,OAAS,WAAagoB,EAAmB,GACpD93B,EAAW8P,OAAS,WAAaooB,EAAmB,GACpDl4B,EAAW8P,OAAS,WAAasoB,EAAuB,GACxDp4B,EAAWuQ,SAAW,uBAAyB,GAC/CvQ,EAAWoQ,MAAQ,oBAAsB,GACzCpQ,EAAW0Q,YAAc,0BAA4B,GACrD1Q,EAAW4Q,QAAU,sBAAwB,GAC7C5Q,EAAW+Q,UAAY,wBAA0B,GAC/C/Q,EAAW+Q,WAAa/Q,EAAWy6B,qBAAyB,gCAAkC,GAC9Fz6B,EAAW+Q,WAAa/Q,EAAW+4B,sBAA0B,iCAAmC,GAClG/4B,EAAWukB,aAAe,2BAA6B,GACvDvkB,EAAWykB,sBAAwB,qCAAuC,GAC1EzkB,EAAW2kB,mBAAqB,kCAAoC,GACpE3kB,EAAW4P,YAAc,0BAA4B,GACrD5P,EAAWuR,aAAe,2BAA6B,GACvDvR,EAAWyR,aAAe,2BAA6B,GACvDzR,EAAW0P,SAAW,uBAAyB,GAE/C1P,EAAW4kB,MAAQ,oBAAsB,GACzC5kB,EAAW8kB,gBAAkB,8BAAgC,GAE7D9kB,EAAW06B,eAAiB,sBAAwB,GACpD16B,EAAW26B,cAAgB36B,EAAWo6B,gBAAkB,oBAAsB,GAC9Ep6B,EAAW46B,UAAY,iBAAmB,GAC1C56B,EAAW66B,cAAgB,0BAA4B,GAEvD76B,EAAW2R,YAAc,0BAA4B,GAErD3R,EAAWg5B,YAAc,sBAAwB,GAEjDh5B,EAAW+6B,YAAc,uBAAyB,GAClD/6B,EAAWg7B,UAAY,qBAAuB,GAE9Ch7B,EAAWi7B,iBAAmB,wBAA0B,GACxDj7B,EAAWi7B,iBAAmB,WAAazD,EAAsB,GAEjEx3B,EAAWuW,mBAAqB,8BAAgC,GAEhEvW,EAAWo7B,wBAA0B,oCAAsC,GAE3Ep7B,EAAW6f,uBAAyB,0BAA4B,GAC9D7f,EAAW6f,wBAA0B7f,EAAWm5B,2BAA+B,8BAAgC,IAE7Gn5B,EAAWs5B,2BAA6Bt5B,EAAW8P,SAAY9P,EAAWu5B,kCAAsC,0BAA4B,GAEhJ,2BACA,+BACA,+BAEEv5B,EAAWuZ,cAAgB8hB,EAAkB,uBAAyB,GACtEr7B,EAAWuZ,cAAgB8hB,EAAkBr0B,6BAA6C,GAC1FhH,EAAWuZ,cAAgB8hB,EAAkBpG,GAAwB,cAAej1B,EAAWuZ,aAAgB,GAEjHvZ,EAAWs7B,UAAY,oBAAsB,GAE7Ct0B,2BACAhH,EAAWsP,IAAMulB,GAA0B,mBAAoB70B,EAAWu7B,aAAgB,GAC1Fv7B,EAAWmV,OAAS0f,GAA0B,sBAAuB70B,EAAWw7B,gBAAmB,GACnGx7B,EAAW8P,OAAS+kB,GAA0B,sBAAuB70B,EAAWy7B,gBAAmB,GACnGz7B,EAAW0Q,YAAcmkB,GAA0B,2BAA4B70B,EAAW07B,qBAAwB,GAClH17B,EAAWuQ,SAAWskB,GAA0B,wBAAyB70B,EAAW27B,kBAAqB,GACzG3G,GAA0B,sBAAuBh1B,EAAW47B,gBAE5D57B,EAAW67B,aAAe,yBAA2B77B,EAAW67B,aAAe,GAE/E,MAECrC,OAAQhE,IAAkBd,KAAM,OAInC/vB,EAAe4xB,GAAiB5xB,GAChCA,EAAe8wB,GAAkB9wB,EAAc3E,GAC/C2E,EAAewxB,GAA0BxxB,EAAc3E,GAEvD4E,EAAiB2xB,GAAiB3xB,GAClCA,EAAiB6wB,GAAkB7wB,EAAgB5E,GACnD4E,EAAiBuxB,GAA0BvxB,EAAgB5E,GAE3D2E,EAAekyB,GAAalyB,GAC5BC,EAAiBiyB,GAAajyB,GAEzB5E,EAAW3D,WAA+C,IAAnC2D,EAAWi6B,sBAItCD,EAAgB,oBAEhBF,EAAe,CACd,uBACA,sBACA,6BACCpF,KAAM,MAAS,KAAOoF,EAExBC,EAAiB,CAChB,qBACE/5B,EAAWiG,cAAgB61B,EAAU,GAAK,+BAC1C97B,EAAWiG,cAAgB61B,EAAU,GAAK,oCAC5C,uCACA,4BACA,8BACA,oCACA,qCACA,6CACA,uCACA,uCACA,+CACA,0CACCpH,KAAM,MAAS,KAAOqF,GAIzB,MAAMgC,EAAa/B,EAAgBF,EAAen1B,EAC5Cq3B,EAAehC,EAAgBD,EAAiBn1B,EAKhDq3B,EAAiBlJ,GAAa52B,EAAIA,EAAGmjB,cAAeyc,GACpDG,EAAmBnJ,GAAa52B,EAAIA,EAAGqjB,gBAAiBwc,GAqB9D,GAnBA7/B,EAAGggC,aAAcjhB,EAAS+gB,GAC1B9/B,EAAGggC,aAAcjhB,EAASghB,QAIcthC,IAAnCoF,EAAW+F,oBAEf5J,EAAGigC,mBAAoBlhB,EAAS,EAAGlb,EAAW+F,sBAEP,IAA5B/F,EAAWoF,cAGtBjJ,EAAGigC,mBAAoBlhB,EAAS,EAAG,YAIpC/e,EAAGkgC,YAAanhB,GAGX/E,EAASmmB,MAAMC,kBAAoB,CAEvC,MAAMC,EAAargC,EAAGsgC,kBAAmBvhB,GAAUsZ,OAC7CkI,EAAYvgC,EAAGo4B,iBAAkB0H,GAAiBzH,OAClDmI,EAAcxgC,EAAGo4B,iBAAkB2H,GAAmB1H,OAE5D,IAAIoI,GAAW,EACXC,GAAkB,EAEtB,IAA2D,IAAtD1gC,EAAGw2B,oBAAqBzX,EAAS/e,EAAG2gC,aAA0B,CAElEF,GAAW,EAEU1I,GAAiB/3B,EAAI8/B,EAAgB,UACnC/H,GAAiB/3B,EAAI+/B,EAAkB,gBAIpC,KAAfM,GAIc,KAAdE,GAAoC,KAAhBC,IAE/BE,GAAkB,GAIdA,IAEJniC,KAAKqiC,YAAc,CAElBH,SAAUA,EAEVJ,WAAYA,EAEZ73B,aAAc,CAEb2vB,IAAKoI,EACLM,OAAQlD,GAITl1B,eAAgB,CAEf0vB,IAAKqI,EACLK,OAAQjD,KAqBZ,IAAIkD,EAgBAtgB,EAmCJ,OAxDAxgB,EAAG+gC,aAAcjB,GACjB9/B,EAAG+gC,aAAchB,GAMjBxhC,KAAK6wB,YAAc,WAQlB,YANwB3wB,IAAnBqiC,IAEJA,EAAiB,IAAIvK,GAAev2B,EAAI+e,IAIlC+hB,GAQRviC,KAAK2iB,cAAgB,WAQpB,YAN0BziB,IAArB+hB,IAEJA,EA9pBH,SAAkCxgB,EAAI+e,GAErC,MAAMhV,EAAa,GAEbunB,EAAItxB,EAAGw2B,oBAAqBzX,EAAS/e,EAAGghC,mBAE9C,IAAM,IAAIliB,EAAI,EAAGA,EAAIwS,EAAGxS,IAAO,CAE9B,MACMvU,EADOvK,EAAGihC,gBAAiBliB,EAASD,GACxBvU,KAIlBR,EAAYQ,GAASvK,EAAGkhC,kBAAmBniB,EAASxU,GAIrD,OAAOR,EA6oBco3B,CAAyBnhC,EAAI+e,IAI1CyB,GAMRjiB,KAAK6iC,QAAU,WAEdpjB,EAAcqE,uBAAwB9jB,MAEtCyB,EAAGqhC,cAAetiB,GAClBxgB,KAAKwgB,aAAUtgB,GAMhBF,KAAKgM,KAAO1G,EAAWk6B,WACvBx/B,KAAK4hB,GAAKkX,KACV94B,KAAK48B,SAAWA,EAChB58B,KAAK+iC,UAAY,EACjB/iC,KAAKwgB,QAAUA,EACfxgB,KAAKiK,aAAes3B,EACpBvhC,KAAKkK,eAAiBs3B,EAEfxhC,KCx0BR,SAASgjC,GAAevnB,EAAUC,EAAU9Q,EAAYlJ,EAAc+d,EAAejV,GAEpF,MAAM4kB,EAAW,GAEXztB,EAAWD,EAAaC,SACxBwjB,EAAyBzjB,EAAayjB,uBACtCoB,EAAsB7kB,EAAa6kB,oBACnCV,EAAoBnkB,EAAamkB,kBACjCM,EAAiBzkB,EAAaykB,eAEpC,IAAIzB,EAAYhjB,EAAagjB,UAE7B,MAAMue,EAAY,CACjBC,kBAAmB,QACnBC,qBAAsB,eACtBC,mBAAoB,SACpBC,kBAAmB,QACnBC,oBAAqB,UACrBC,kBAAmB,QACnBC,iBAAkB,OAClBC,qBAAsB,WACtBC,qBAAsB,WACtBC,mBAAoB,SACpBC,kBAAmB,QACnBC,mBAAoB,SACpBC,eAAgB,SAChBC,eAAgB,SAChBC,eAAgB,UAGXC,EAAiB,CACtB,YAAa,WAAY,yBAA0B,iBAAkB,aAAc,kBACnF,MAAO,cAAe,SAAU,iBAAkB,SAAU,aAAc,iBAAkB,eAC5F,WAAY,mBAAoB,QAAS,cAAe,sBAAuB,UAAW,YAAa,uBAAwB,wBAAyB,eAAgB,wBAAyB,qBAAsB,kBAAmB,cAC1O,eAAgB,eAAgB,cAChC,WAAY,UAAW,eAAgB,iBAAkB,YAAa,gBAAiB,MAAO,SAAU,UACxG,cAAe,kBAAmB,yBAA0B,WAC5D,WAAY,mBAAoB,eAAgB,eAChD,kBAAmB,kBAAmB,qBACtC,eAAgB,iBAAkB,gBAAiB,gBAAiB,oBACpE,qBAAsB,uBAAwB,sBAC9C,mBAAoB,gBAAiB,cAAe,0BACpD,YAAa,cAAe,YAAa,oBAAqB,sBAAuB,eAAgB,YACrG,QAAS,mBAuCV,SAASC,EAA2BtvB,GAEnC,IAAI/U,EAiBJ,OAfO+U,EAIKA,EAAI1L,UAEfrJ,EAAW+U,EAAI/U,SAEJ+U,EAAI0V,sBAGfzqB,EAAW+U,EAAIgK,QAAQ/e,UATvBA,EAAWm5B,EAaLn5B,EA8RR,MAAO,CACNskC,cA3RD,SAAwBxlB,EAAUpU,EAAQ65B,EAASrnB,EAAO0D,GAEzD,MAAMnW,EAAMyS,EAAMzS,IACZ+5B,EAAc1lB,EAAS2lB,uBAAyBvnB,EAAMsnB,YAAc,KAEpEjvB,EAASsG,EAAS5Z,IAAK6c,EAASvJ,QAAUivB,GAE1C9F,EAAW0E,EAAWtkB,EAASrf,MAK/BsgC,EAAWnf,EAAO8jB,cAvEzB,SAAsB9jB,GAErB,MACM+jB,EADW/jB,EAAOgkB,SACDD,MAEvB,GAAKje,EAEJ,OAAO,KAED,CASN,MAAMme,EAAkB7e,EAClB8e,EAAkBn/B,KAAKC,OAASi/B,EAAkB,IAAO,GAEzD9E,EAAWp6B,KAAKo/B,IAAKD,EAAiBH,EAAM96B,QAElD,OAAKk2B,EAAW4E,EAAM96B,OAGd,EAIDk2B,GAyCgCiF,CAAapkB,GAAW,EAchE,IAAIxW,EAAcC,EAElB,GAd4B,OAAvByU,EAAS+F,YAEbA,EAAYhjB,EAAa+iB,gBAAiB9F,EAAS+F,WAEhC/F,EAAS+F,WAUxB6Z,EAAW,CAEf,MAAM7M,EAAS7X,GAAW0kB,GAE1Bt0B,EAAeynB,EAAOznB,aACtBC,EAAiBwnB,EAAOxnB,oBAIxBD,EAAe0U,EAAS1U,aACxBC,EAAiByU,EAASzU,eAI3B,MAAM0hB,EAAsBnQ,EAASoQ,kBA4HrC,MA1HmB,CAElBlqB,SAAUA,EAEV48B,SAAUA,EACViB,WAAY7gB,EAASrf,KAErB2K,aAAcA,EACdC,eAAgBA,EAChBF,QAAS2U,EAAS3U,QAElBu1B,qBAAsD,IAAjC5gB,EAAS4gB,oBAC9Bh0B,YAAaoT,EAASpT,YAEtBmZ,UAAWA,EAEX+a,YAAuC,IAA3Bhf,EAAO8B,gBACnBmd,iBAA4C,IAA3Bjf,EAAO8B,iBAAqD,OAAzB9B,EAAO2C,cAE3Duc,uBAAwBxZ,EACxB+a,eAA0C,OAAxBtV,EAAiCsY,EAA2BtY,EAAoBhN,SAAYnD,EAASylB,eACvHtsB,MAAQ+J,EAAS/J,IACjBisB,YAAaqD,EAA2BvlB,EAAS/J,KACjD6F,SAAWkE,EAASlE,OACpBqmB,eAAgBoD,EAA2BvlB,EAASlE,QACpDrF,SAAWA,EACXioB,WAAYjoB,GAAUA,EAAO7V,QAC7BwhC,eAAgBmD,EAA2B9uB,GAC3CgpB,eAAmBhpB,IAAgBA,EAAO7V,UAAYwe,GAA+B3I,EAAO7V,UAAY+9B,GACxGznB,WAAa8I,EAAS9I,SACtBorB,iBAAkBiD,EAA2BvlB,EAAS9I,UACtDH,QAAUiJ,EAASjJ,MACnBM,cAAgB2I,EAAS3I,YACzBgrB,oBAAqBkD,EAA2BvlB,EAAS3I,aACzDE,UAAYyI,EAASzI,QACrBG,YAAcsI,EAAStI,UACvB0pB,qBAAsBphB,EAASmmB,gBAAkBC,EACjD1G,sBAAuB1f,EAASmmB,gBAAkBE,EAClDnb,eAAiBlL,EAASkL,aAC1BE,wBAA0BpL,EAASoL,sBACnCE,qBAAuBtL,EAASsL,mBAChCxT,kBAAoBkI,EAASlI,gBAC7BI,eAAiB8H,EAAS9H,aAC1BE,eAAiB4H,EAAS5H,aAC1B7B,cAAgByJ,EAASzJ,YACzBF,WAAa2J,EAAS3J,SAEtBiC,cAAgB0H,EAAS1H,YAEzBiT,QAAUvL,EAASuL,MAEnBE,kBAAoBzL,EAASyL,gBAE7BuT,QAAShf,EAASgf,QAElBqC,eAAkBrhB,EAAStI,WAAasI,EAASqhB,eACjDC,aAActhB,EAASshB,aACvBC,aAAcvhB,EAAS/J,KAAU+J,EAASzI,SAAcyI,EAAStI,WAAgBsI,EAASzJ,aAAkByJ,EAAS3J,UAAe2J,EAAS3I,aAAkB2I,EAAS9H,cAAmB8H,EAAS5H,cAAmB4H,EAASkL,cAAmBlL,EAASoL,uBAA4BpL,EAASsL,oBAAyBtL,EAASlI,iBAAsBkI,EAASyL,iBAClW+V,gBAAsBxhB,EAAS/J,KAAU+J,EAASzI,SAAcyI,EAAStI,WAAgBsI,EAASzJ,aAAkByJ,EAAS3J,UAAe2J,EAAS3I,aAAkB2I,EAAS9H,cAAmB8H,EAAS5H,cAAmB4H,EAASsL,oBAAyBtL,EAASyL,kBAAwBzL,EAASlI,iBAE3SnM,MAAQA,EACRu1B,OAAQlhB,EAASrU,IACjBw1B,QAAWx1B,GAAOA,EAAI26B,UAEtB3G,YAAa3f,EAAS2f,YAEtBkC,gBAAiB7hB,EAAS6hB,gBAC1Brb,uBAAwBA,EAExB1a,SAAUkU,EAASlU,UAAYm1B,EAAW,EAC1CA,SAAUA,EACVQ,iBAAkB7Z,EAElB7b,aAAciU,EAASjU,aACvBC,aAAcgU,EAAShU,aACvBu6B,gBAAiBzpB,EAASypB,gBAC1BC,gBAAiB1pB,EAAS0pB,gBAE1BlK,aAAc1wB,EAAO66B,YAAY17B,OACjC0xB,eAAgB7wB,EAAO86B,MAAM37B,OAC7BwxB,cAAe3wB,EAAO+6B,KAAK57B,OAC3ByxB,kBAAmB5wB,EAAOg7B,SAAS77B,OACnC2xB,cAAe9wB,EAAOi7B,KAAK97B,OAE3B4xB,mBAAoB/wB,EAAOyN,qBAAqBtO,OAChD8xB,qBAAsBjxB,EAAOwO,eAAerP,OAC5C6xB,oBAAqBhxB,EAAOkO,cAAc/O,OAE1CgyB,kBAAmBlxB,EAAS4c,UAC5BuU,oBAAqBnxB,EAAS6c,gBAE9BuZ,UAAWjiB,EAASiiB,UAEpBL,iBAAkB9kB,EAASgqB,UAAUpd,SAAW+b,EAAQ16B,OAAS,EACjEqzB,cAAethB,EAASgqB,UAAUnmC,KAElCuf,YAAaF,EAAS+mB,WAAajqB,EAASoD,YAAc8hB,EAC1DD,wBAAyBjlB,EAASilB,wBAElC7kB,mBAAoB8C,EAAS9C,mBAE7B4kB,UAAW9hB,EAAS8hB,UACpBJ,YAAa1hB,EAASV,OAAS0nB,EAC/BrF,UAAW3hB,EAASV,OAASC,EAE7BijB,kBAA0CjhC,IAA1Bye,EAASwiB,cAA+BxiB,EAASwiB,aAEjE91B,oBAAqBsT,EAAStT,oBAE9B8yB,qBAAsBxf,EAAS/T,YAAc+T,EAAS/T,WAAWC,YACjE2zB,mBAAoB7f,EAAS/T,YAAc+T,EAAS/T,WAAWE,UAC/D4zB,qBAAsB/f,EAAS/T,YAAc+T,EAAS/T,WAAWG,YACjE6zB,0BAA2BjgB,EAAS/T,YAAc+T,EAAS/T,WAAWI,iBAEtEyzB,2BAA4B98B,GAAYiJ,EAAW8hB,IAAK,kBACxDiS,6BAA8Bh9B,GAAYiJ,EAAW8hB,IAAK,sBAC1DmS,kCAAmCl9B,GAAYiJ,EAAW8hB,IAAK,0BAE/DkZ,sBAAuBjnB,EAASinB,0BA0HjCC,mBAlHD,SAA6BvgC,GAE5B,MAAMzC,EAAQ,GAad,GAXKyC,EAAWi5B,SAEf17B,EAAM2E,KAAMlC,EAAWi5B,WAIvB17B,EAAM2E,KAAMlC,EAAW4E,gBACvBrH,EAAM2E,KAAMlC,EAAW2E,oBAII/J,IAAvBoF,EAAW0E,QAEf,IAAM,MAAMgC,KAAQ1G,EAAW0E,QAE9BnH,EAAM2E,KAAMwE,GACZnJ,EAAM2E,KAAMlC,EAAW0E,QAASgC,IAMlC,IAAwC,IAAnC1G,EAAWi6B,oBAAgC,CAE/C,IAAM,IAAIhf,EAAI,EAAGA,EAAI0jB,EAAev6B,OAAQ6W,IAE3C1d,EAAM2E,KAAMlC,EAAY2+B,EAAgB1jB,KAIzC1d,EAAM2E,KAAMiU,EAASylB,gBACrBr+B,EAAM2E,KAAMiU,EAASwiB,aAMtB,OAFAp7B,EAAM2E,KAAMlC,EAAWsgC,uBAEhB/iC,EAAMm3B,QA0EbnJ,YAtED,SAAsBlS,GAErB,MAAM4f,EAAW0E,EAAWtkB,EAASrf,MACrC,IAAIkK,EAEJ,GAAK+0B,EAAW,CAEf,MAAM7M,EAAS7X,GAAW0kB,GAC1B/0B,EAAWI,GAAcT,MAAOuoB,EAAOloB,eAIvCA,EAAWmV,EAASnV,SAIrB,OAAOA,GAuDPs8B,eAnDD,SAAyBxgC,EAAYs3B,GAEpC,IAAIpc,EAGJ,IAAM,IAAI9X,EAAI,EAAGq9B,EAAK3W,EAAS1lB,OAAQhB,EAAIq9B,EAAIr9B,IAAO,CAErD,MAAMs9B,EAAqB5W,EAAU1mB,GAErC,GAAKs9B,EAAmBpJ,WAAaA,EAAW,CAE/Cpc,EAAUwlB,IACPxlB,EAAQuiB,UAEX,OAaF,YAPiB7iC,IAAZsgB,IAEJA,EAAU,IAAImc,GAAclhB,EAAUmhB,EAAUt3B,EAAYma,GAC5D2P,EAAS5nB,KAAMgZ,IAITA,GAyBPylB,eArBD,SAAyBzlB,GAExB,GAA8B,KAAtBA,EAAQuiB,UAAkB,CAGjC,MAAMxiB,EAAI6O,EAAS8W,QAAS1lB,GAC5B4O,EAAU7O,GAAM6O,EAAUA,EAAS1lB,OAAS,GAC5C0lB,EAAS+W,MAGT3lB,EAAQqiB,YAaTzT,SAAUA,GC/YZ,SAASgX,KAER,IAAI3uB,EAAa,IAAI5V,QAmCrB,MAAO,CACNC,IAlCD,SAAc2e,GAEb,IAAI7L,EAAM6C,EAAW3V,IAAK2e,GAS1B,YAPavgB,IAAR0U,IAEJA,EAAM,GACN6C,EAAW/U,IAAK+d,EAAQ7L,IAIlBA,GAwBP3S,OApBD,SAAiBwe,GAEhBhJ,EAAWrV,OAAQqe,IAmBnBpe,OAfD,SAAiBoe,EAAQpU,EAAK9K,GAE7BkW,EAAW3V,IAAK2e,GAAUpU,GAAQ9K,GAclCmiB,QAVD,WAECjM,EAAa,IAAI5V,UCjCnB,SAASwkC,GAAmB3+B,EAAGC,GAE9B,OAAKD,EAAE4+B,aAAe3+B,EAAE2+B,WAEhB5+B,EAAE4+B,WAAa3+B,EAAE2+B,WAEb5+B,EAAE6+B,cAAgB5+B,EAAE4+B,YAExB7+B,EAAE6+B,YAAc5+B,EAAE4+B,YAEd7+B,EAAE8Y,UAAY7Y,EAAE6Y,QAEpB9Y,EAAE8Y,QAAQoB,GAAKja,EAAE6Y,QAAQoB,GAErBla,EAAEiX,SAASiD,KAAOja,EAAEgX,SAASiD,GAEjCla,EAAEiX,SAASiD,GAAKja,EAAEgX,SAASiD,GAEvBla,EAAED,IAAME,EAAEF,EAEdC,EAAED,EAAIE,EAAEF,EAIRC,EAAEka,GAAKja,EAAEia,GAMlB,SAAS4kB,GAA0B9+B,EAAGC,GAErC,OAAKD,EAAE4+B,aAAe3+B,EAAE2+B,WAEhB5+B,EAAE4+B,WAAa3+B,EAAE2+B,WAEb5+B,EAAE6+B,cAAgB5+B,EAAE4+B,YAExB7+B,EAAE6+B,YAAc5+B,EAAE4+B,YAEd7+B,EAAED,IAAME,EAAEF,EAEdE,EAAEF,EAAIC,EAAED,EAIRC,EAAEka,GAAKja,EAAEia,GAOlB,SAAS6kB,GAAiBhvB,GAEzB,MAAMivB,EAAc,GACpB,IAAIC,EAAmB,EAEvB,MAAMC,EAAS,GACTC,EAAc,GAEdC,EAAiB,CAAEllB,IAAM,GAW/B,SAASmlB,EAAmBtmB,EAAQpC,EAAUM,EAAU2nB,EAAY7+B,EAAGu/B,GAEtE,IAAIC,EAAaP,EAAaC,GAC9B,MAAM9d,EAAqBpR,EAAW3V,IAAK6c,GAkC3C,YAhCoBze,IAAf+mC,GAEJA,EAAa,CACZrlB,GAAInB,EAAOmB,GACXnB,OAAQA,EACRpC,SAAUA,EACVM,SAAUA,EACV6B,QAASqI,EAAmBrI,SAAWsmB,EACvCR,WAAYA,EACZC,YAAa9lB,EAAO8lB,YACpB9+B,EAAGA,EACHu/B,MAAOA,GAGRN,EAAaC,GAAqBM,IAIlCA,EAAWrlB,GAAKnB,EAAOmB,GACvBqlB,EAAWxmB,OAASA,EACpBwmB,EAAW5oB,SAAWA,EACtB4oB,EAAWtoB,SAAWA,EACtBsoB,EAAWzmB,QAAUqI,EAAmBrI,SAAWsmB,EACnDG,EAAWX,WAAaA,EACxBW,EAAWV,YAAc9lB,EAAO8lB,YAChCU,EAAWx/B,EAAIA,EACfw/B,EAAWD,MAAQA,GAIpBL,IAEOM,EAgDR,MAAO,CAENL,OAAQA,EACRC,YAAaA,EAEb1e,KAnGD,WAECwe,EAAmB,EAEnBC,EAAOl9B,OAAS,EAChBm9B,EAAYn9B,OAAS,GA+FrBlC,KAlDD,SAAeiZ,EAAQpC,EAAUM,EAAU2nB,EAAY7+B,EAAGu/B,GAEzD,MAAMC,EAAaF,EAAmBtmB,EAAQpC,EAAUM,EAAU2nB,EAAY7+B,EAAGu/B,KAEtD,IAAzBroB,EAASkoB,YAAuBA,EAAcD,GAASp/B,KAAMy/B,IA+C/DnoB,QA3CD,SAAkB2B,EAAQpC,EAAUM,EAAU2nB,EAAY7+B,EAAGu/B,GAE5D,MAAMC,EAAaF,EAAmBtmB,EAAQpC,EAAUM,EAAU2nB,EAAY7+B,EAAGu/B,KAEtD,IAAzBroB,EAASkoB,YAAuBA,EAAcD,GAAS9nB,QAASmoB,IAwClEC,OA7BD,WAIC,IAAM,IAAI3mB,EAAIomB,EAAkB/lB,EAAK8lB,EAAYh9B,OAAQ6W,EAAIK,EAAIL,IAAO,CAEvE,MAAM0mB,EAAaP,EAAanmB,GAEhC,GAAuB,OAAlB0mB,EAAWrlB,GAAc,MAE9BqlB,EAAWrlB,GAAK,KAChBqlB,EAAWxmB,OAAS,KACpBwmB,EAAW5oB,SAAW,KACtB4oB,EAAWtoB,SAAW,KACtBsoB,EAAWzmB,QAAU,KACrBymB,EAAWD,MAAQ,OAgBpBzW,KAtCD,SAAe4W,EAAkBC,GAE3BR,EAAOl9B,OAAS,GAAIk9B,EAAOrW,KAAM4W,GAAoBd,IACrDQ,EAAYn9B,OAAS,GAAIm9B,EAAYtW,KAAM6W,GAAyBZ,MAwC3E,SAASa,GAAkB5vB,GAE1B,IAAI6vB,EAAQ,IAAIzlC,QAmChB,MAAO,CACNC,IAlCD,SAAcib,EAAOC,GAEpB,MAAMuqB,EAAUD,EAAMxlC,IAAKib,GAC3B,IAAIyqB,EAoBJ,YAlBiBtnC,IAAZqnC,GAEJC,EAAO,IAAIf,GAAiBhvB,GAC5B6vB,EAAM5kC,IAAKqa,EAAO,IAAIlb,SACtBylC,EAAMxlC,IAAKib,GAAQra,IAAKsa,EAAQwqB,KAIhCA,EAAOD,EAAQzlC,IAAKkb,QACN9c,IAATsnC,IAEJA,EAAO,IAAIf,GAAiBhvB,GAC5B8vB,EAAQ7kC,IAAKsa,EAAQwqB,KAMhBA,GAYP9jB,QARD,WAEC4jB,EAAQ,IAAIzlC,UCvMd,SAAS4lC,KAER,MAAMl9B,EAAS,GAEf,MAAO,CAENzI,IAAK,SAAW4lC,GAEf,QAA4BxnC,IAAvBqK,EAAQm9B,EAAM9lB,IAElB,OAAOrX,EAAQm9B,EAAM9lB,IAItB,IAAIpY,EAEJ,OAASk+B,EAAMpoC,MAEd,IAAK,mBACJkK,EAAW,CACVkO,UAAW,IAAIvQ,GACf+D,MAAO,IAAIwJ,IAEZ,MAED,IAAK,YACJlL,EAAW,CACV2O,SAAU,IAAIhR,GACduQ,UAAW,IAAIvQ,GACf+D,MAAO,IAAIwJ,GACX0D,SAAU,EACVC,QAAS,EACTC,YAAa,EACbC,MAAO,GAER,MAED,IAAK,aACJ/O,EAAW,CACV2O,SAAU,IAAIhR,GACd+D,MAAO,IAAIwJ,GACX0D,SAAU,EACVG,MAAO,GAER,MAED,IAAK,kBACJ/O,EAAW,CACVkO,UAAW,IAAIvQ,GACf+R,SAAU,IAAIxE,GACdyE,YAAa,IAAIzE,IAElB,MAED,IAAK,gBACJlL,EAAW,CACV0B,MAAO,IAAIwJ,GACXyD,SAAU,IAAIhR,GACdwgC,UAAW,IAAIxgC,GACfygC,WAAY,IAAIzgC,IAQnB,OAFAoD,EAAQm9B,EAAM9lB,IAAOpY,EAEdA,IAuEV,IAAIq+B,GAAc,EAElB,SAASC,GAA0BC,EAAQC,GAE1C,OAASA,EAAOC,WAAa,EAAI,IAAQF,EAAOE,WAAa,EAAI,GAIlE,SAASC,KAER,MAAM7lB,EAAQ,IAAIolB,GAEZU,EA3EP,WAEC,MAAM59B,EAAS,GAEf,MAAO,CAENzI,IAAK,SAAW4lC,GAEf,QAA4BxnC,IAAvBqK,EAAQm9B,EAAM9lB,IAElB,OAAOrX,EAAQm9B,EAAM9lB,IAItB,IAAIpY,EAEJ,OAASk+B,EAAMpoC,MAEd,IAAK,mBASL,IAAK,YACJkK,EAAW,CACVoO,WAAY,EACZC,iBAAkB,EAClBC,aAAc,EACdC,cAAe,IAAIxB,IAEpB,MAED,IAAK,aACJ/M,EAAW,CACVoO,WAAY,EACZC,iBAAkB,EAClBC,aAAc,EACdC,cAAe,IAAIxB,GACnBsC,iBAAkB,EAClBC,gBAAiB,KAUpB,OAFAvO,EAAQm9B,EAAM9lB,IAAOpY,EAEdA,IAsBW4+B,GAEdzsB,EAAQ,CAEblZ,QAAS,EAET4lC,KAAM,CACLC,mBAAqB,EACrBC,aAAe,EACfC,YAAc,EACdC,gBAAkB,EAClBC,YAAc,EAEdC,uBAAyB,EACzBC,iBAAmB,EACnBC,gBAAkB,GAGnBC,QAAS,CAAE,EAAG,EAAG,GACjBC,MAAO,GACP3D,YAAa,GACb4D,kBAAmB,GACnBhxB,qBAAsB,GACtBC,wBAAyB,GACzBqtB,KAAM,GACN2D,WAAY,GACZxwB,cAAe,GACfC,iBAAkB,GAClB6sB,SAAU,GACV2D,aAAc,KACdC,aAAc,KACd9D,MAAO,GACP+D,YAAa,GACbrwB,eAAgB,GAChBC,kBAAmB,GACnBwsB,KAAM,IAIP,IAAM,IAAIjlB,EAAI,EAAGA,EAAI,EAAGA,IAAO5E,EAAMotB,MAAMvhC,KAAM,IAAIL,IAErD,MAAMkiC,EAAU,IAAIliC,GACdmiC,EAAU,IAAIC,GACdC,EAAW,IAAID,GAsQrB,MAAO,CACN9nB,MArQD,SAAgBlX,EAAQ65B,EAASpnB,GAEhC,IAAIT,EAAI,EAAGC,EAAI,EAAG7U,EAAI,EAEtB,IAAM,IAAI4Y,EAAI,EAAGA,EAAI,EAAGA,IAAO5E,EAAMotB,MAAOxoB,GAAI7d,IAAK,EAAG,EAAG,GAE3D,IAAI4lC,EAAoB,EACpBC,EAAc,EACdC,EAAa,EACbC,EAAiB,EACjBC,EAAa,EAEbC,EAAwB,EACxBC,EAAkB,EAClBC,EAAiB,EAErB,MAAMhhB,EAAa7K,EAAO8K,mBAE1Bvd,EAAOgmB,KAAMuX,IAEb,IAAM,IAAIvnB,EAAI,EAAGyN,EAAIzjB,EAAOb,OAAQ6W,EAAIyN,EAAGzN,IAAO,CAEjD,MAAMmnB,EAAQn9B,EAAQgW,GAEhBrV,EAAQw8B,EAAMx8B,MACdu+B,EAAY/B,EAAM+B,UAClBrxB,EAAWsvB,EAAMtvB,SAEjBqtB,EAAciC,EAAMnsB,QAAUmsB,EAAMnsB,OAAO3G,IAAQ8yB,EAAMnsB,OAAO3G,IAAIgK,QAAU,KAEpF,GAAK8oB,EAAMgC,eAEVntB,GAAKrR,EAAMqR,EAAIktB,EACfjtB,GAAKtR,EAAMsR,EAAIitB,EACf9hC,GAAKuD,EAAMvD,EAAI8hC,OAET,GAAK/B,EAAMiC,aAEjB,IAAM,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAEvBjuB,EAAMotB,MAAOa,GAAIC,gBAAiBnC,EAAMoC,GAAGC,aAAcH,GAAKH,QAIzD,GAAK/B,EAAMsC,mBAAqB,CAEtC,MAAMxgC,EAAW6Y,EAAMvgB,IAAK4lC,GAQ5B,GANAl+B,EAAS0B,MAAMS,KAAM+7B,EAAMx8B,OAAQ++B,eAAgBvC,EAAM+B,WACzDjgC,EAASkO,UAAUwyB,sBAAuBxC,EAAMlpB,aAChD6qB,EAAQa,sBAAuBxC,EAAMja,OAAOjP,aAC5ChV,EAASkO,UAAUyyB,IAAKd,GACxB7/B,EAASkO,UAAU0yB,mBAAoBviB,GAElC6f,EAAMO,WAAa,CAEvB,MAAM1sB,EAASmsB,EAAMnsB,OAEf8uB,EAAiBlC,EAAYrmC,IAAK4lC,GAExC2C,EAAezyB,WAAa2D,EAAO+uB,KACnCD,EAAexyB,iBAAmB0D,EAAOgvB,WACzCF,EAAevyB,aAAeyD,EAAOivB,OACrCH,EAAetyB,cAAgBwD,EAAOkvB,QAEtC9uB,EAAMqtB,kBAAmBV,GAAsB+B,EAC/C1uB,EAAM3D,qBAAsBswB,GAAsB7C,EAClD9pB,EAAM1D,wBAAyBqwB,GAAsBZ,EAAMnsB,OAAO2D,OAElEypB,IAIDhtB,EAAMypB,YAAakD,GAAsB9+B,EAEzC8+B,SAEM,GAAKZ,EAAMgD,YAAc,CAE/B,MAAMlhC,EAAW6Y,EAAMvgB,IAAK4lC,GAiB5B,GAfAl+B,EAAS2O,SAAS+xB,sBAAuBxC,EAAMlpB,aAC/ChV,EAAS2O,SAAS8P,aAAcJ,GAEhCre,EAAS0B,MAAMS,KAAMT,GAAQ++B,eAAgBR,GAC7CjgC,EAAS4O,SAAWA,EAEpB5O,EAASkO,UAAUwyB,sBAAuBxC,EAAMlpB,aAChD6qB,EAAQa,sBAAuBxC,EAAMja,OAAOjP,aAC5ChV,EAASkO,UAAUyyB,IAAKd,GACxB7/B,EAASkO,UAAU0yB,mBAAoBviB,GAEvCre,EAAS6O,QAAU7S,KAAKmlC,IAAKjD,EAAMkD,OACnCphC,EAAS8O,YAAc9S,KAAKmlC,IAAKjD,EAAMkD,OAAU,EAAIlD,EAAMmD,WAC3DrhC,EAAS+O,MAAQmvB,EAAMnvB,MAElBmvB,EAAMO,WAAa,CAEvB,MAAM1sB,EAASmsB,EAAMnsB,OAEf8uB,EAAiBlC,EAAYrmC,IAAK4lC,GAExC2C,EAAezyB,WAAa2D,EAAO+uB,KACnCD,EAAexyB,iBAAmB0D,EAAOgvB,WACzCF,EAAevyB,aAAeyD,EAAOivB,OACrCH,EAAetyB,cAAgBwD,EAAOkvB,QAEtC9uB,EAAMstB,WAAYT,GAAe6B,EACjC1uB,EAAMlD,cAAe+vB,GAAe/C,EACpC9pB,EAAMjD,iBAAkB8vB,GAAed,EAAMnsB,OAAO2D,OAEpD2pB,IAIDltB,EAAM2pB,KAAMkD,GAAeh/B,EAE3Bg/B,SAEM,GAAKd,EAAMoD,gBAAkB,CAEnC,MAAMthC,EAAW6Y,EAAMvgB,IAAK4lC,GAM5Bl+B,EAAS0B,MAAMS,KAAMT,GAAQ++B,eAAgBR,GAE7CjgC,EAAS2O,SAAS+xB,sBAAuBxC,EAAMlpB,aAC/ChV,EAAS2O,SAAS8P,aAAcJ,GAGhC2hB,EAASuB,WACTzB,EAAQ39B,KAAM+7B,EAAMlpB,aACpB8qB,EAAQ0B,YAAanjB,GACrB2hB,EAASyB,gBAAiB3B,GAE1B9/B,EAASm+B,UAAUjlC,IAAmB,GAAdglC,EAAMvoC,MAAa,EAAK,GAChDqK,EAASo+B,WAAWllC,IAAK,EAAoB,GAAfglC,EAAMtoC,OAAc,GAElDoK,EAASm+B,UAAU1f,aAAcuhB,GACjChgC,EAASo+B,WAAW3f,aAAcuhB,GAKlC7tB,EAAM4pB,SAAUkD,GAAmBj/B,EAEnCi/B,SAEM,GAAKf,EAAMwD,aAAe,CAEhC,MAAM1hC,EAAW6Y,EAAMvgB,IAAK4lC,GAS5B,GAPAl+B,EAAS2O,SAAS+xB,sBAAuBxC,EAAMlpB,aAC/ChV,EAAS2O,SAAS8P,aAAcJ,GAEhCre,EAAS0B,MAAMS,KAAM+7B,EAAMx8B,OAAQ++B,eAAgBvC,EAAM+B,WACzDjgC,EAAS4O,SAAWsvB,EAAMtvB,SAC1B5O,EAAS+O,MAAQmvB,EAAMnvB,MAElBmvB,EAAMO,WAAa,CAEvB,MAAM1sB,EAASmsB,EAAMnsB,OAEf8uB,EAAiBlC,EAAYrmC,IAAK4lC,GAExC2C,EAAezyB,WAAa2D,EAAO+uB,KACnCD,EAAexyB,iBAAmB0D,EAAOgvB,WACzCF,EAAevyB,aAAeyD,EAAOivB,OACrCH,EAAetyB,cAAgBwD,EAAOkvB,QACtCJ,EAAexxB,iBAAmB0C,EAAOyB,OAAO0N,KAChD2f,EAAevxB,gBAAkByC,EAAOyB,OAAO2N,IAE/ChP,EAAMytB,YAAab,GAAgB8B,EACnC1uB,EAAM5C,eAAgBwvB,GAAgB9C,EACtC9pB,EAAM3C,kBAAmBuvB,GAAgBb,EAAMnsB,OAAO2D,OAEtD0pB,IAIDjtB,EAAM0pB,MAAOkD,GAAgB/+B,EAE7B++B,SAEM,GAAKb,EAAMyD,kBAAoB,CAErC,MAAM3hC,EAAW6Y,EAAMvgB,IAAK4lC,GAE5Bl+B,EAASkO,UAAUwyB,sBAAuBxC,EAAMlpB,aAChDhV,EAASkO,UAAU0yB,mBAAoBviB,GACvCre,EAASkO,UAAU0zB,YAEnB5hC,EAAS0P,SAASvN,KAAM+7B,EAAMx8B,OAAQ++B,eAAgBR,GACtDjgC,EAAS2P,YAAYxN,KAAM+7B,EAAMvuB,aAAc8wB,eAAgBR,GAE/D9tB,EAAM6pB,KAAMkD,GAAel/B,EAE3Bk/B,KAMGD,EAAiB,IAErB9sB,EAAMutB,aAAe10B,GAAY62B,MACjC1vB,EAAMwtB,aAAe30B,GAAY82B,OAIlC3vB,EAAMmtB,QAAS,GAAMvsB,EACrBZ,EAAMmtB,QAAS,GAAMtsB,EACrBb,EAAMmtB,QAAS,GAAMnhC,EAErB,MAAM0gC,EAAO1sB,EAAM0sB,KAEdA,EAAKC,oBAAsBA,GAC/BD,EAAKE,cAAgBA,GACrBF,EAAKG,aAAeA,GACpBH,EAAKI,iBAAmBA,GACxBJ,EAAKK,aAAeA,GACpBL,EAAKM,wBAA0BA,GAC/BN,EAAKO,kBAAoBA,GACzBP,EAAKQ,iBAAmBA,IAExBltB,EAAMypB,YAAY17B,OAAS4+B,EAC3B3sB,EAAM2pB,KAAK57B,OAAS8+B,EACpB7sB,EAAM4pB,SAAS77B,OAAS++B,EACxB9sB,EAAM0pB,MAAM37B,OAAS6+B,EACrB5sB,EAAM6pB,KAAK97B,OAASg/B,EAEpB/sB,EAAMqtB,kBAAkBt/B,OAASi/B,EACjChtB,EAAM3D,qBAAqBtO,OAASi/B,EACpChtB,EAAMytB,YAAY1/B,OAASk/B,EAC3BjtB,EAAM5C,eAAerP,OAASk/B,EAC9BjtB,EAAMstB,WAAWv/B,OAASm/B,EAC1BltB,EAAMlD,cAAc/O,OAASm/B,EAC7BltB,EAAM1D,wBAAwBvO,OAASi/B,EACvChtB,EAAM3C,kBAAkBtP,OAASk/B,EACjCjtB,EAAMjD,iBAAiBhP,OAASm/B,EAEhCR,EAAKC,kBAAoBA,EACzBD,EAAKE,YAAcA,EACnBF,EAAKG,WAAaA,EAClBH,EAAKI,eAAiBA,EACtBJ,EAAKK,WAAaA,EAElBL,EAAKM,sBAAwBA,EAC7BN,EAAKO,gBAAkBA,EACvBP,EAAKQ,eAAiBA,EAEtBltB,EAAMlZ,QAAUolC,OAQjBlsB,MAAOA,GC7cT,SAAS4vB,KAER,MAAMhhC,EAAS,IAAI29B,GAEbsD,EAAc,GACdC,EAAe,GAkCrB,MAAO,CACNtjB,KAjCD,WAECqjB,EAAY9hC,OAAS,EACrB+hC,EAAa/hC,OAAS,GA+BtBiS,MATa,CACb6vB,YAAaA,EACbC,aAAcA,EAEdlhC,OAAQA,GAMRmhC,YAhBD,SAAsB1uB,GAErBzS,EAAOkX,MAAO+pB,EAAaC,EAAczuB,IAgBzC2uB,UA9BD,SAAoBjE,GAEnB8D,EAAYhkC,KAAMkgC,IA6BlBkE,WAzBD,SAAqBC,GAEpBJ,EAAajkC,KAAMqkC,KA4BrB,SAASC,KAER,IAAIC,EAAe,IAAIlqC,QAqCvB,MAAO,CACNC,IApCD,SAAcib,EAAOC,GAEpB,IAAIgvB,EAuBJ,OArBmC,IAA9BD,EAAarf,IAAK3P,IAEtBivB,EAAc,IAAIT,GAClBQ,EAAarpC,IAAKqa,EAAO,IAAIlb,SAC7BkqC,EAAajqC,IAAKib,GAAQra,IAAKsa,EAAQgvB,KAIU,IAA5CD,EAAajqC,IAAKib,GAAQ2P,IAAK1P,IAEnCgvB,EAAc,IAAIT,GAClBQ,EAAajqC,IAAKib,GAAQra,IAAKsa,EAAQgvB,IAIvCA,EAAcD,EAAajqC,IAAKib,GAAQjb,IAAKkb,GAMxCgvB,GAYPtoB,QARD,WAECqoB,EAAe,IAAIlqC,UClErB,SAASqhC,GAAmB59B,GAE3ByE,GAAShK,KAAMC,MAEfA,KAAKV,KAAO,oBAEZU,KAAKmhC,aAAe8K,EAEpBjsC,KAAKyK,UAAW,EAChBzK,KAAK0K,cAAe,EAEpB1K,KAAK4U,IAAM,KAEX5U,KAAKgV,SAAW,KAEhBhV,KAAKyW,gBAAkB,KACvBzW,KAAK0W,kBAAoB,EACzB1W,KAAK2W,iBAAmB,EAExB3W,KAAKoK,WAAY,EACjBpK,KAAKqK,mBAAqB,EAE1BrK,KAAKsK,KAAM,EAEXtK,KAAKyL,UAAWnG,GCrBjB,SAAS69B,GAAsB79B,GAE9ByE,GAAShK,KAAMC,MAEfA,KAAKV,KAAO,uBAEZU,KAAKob,kBAAoB,IAAIjU,GAC7BnH,KAAKqb,aAAe,EACpBrb,KAAKsb,YAAc,IAEnBtb,KAAKyK,UAAW,EAChBzK,KAAK0K,cAAe,EAEpB1K,KAAK4U,IAAM,KAEX5U,KAAKgV,SAAW,KAEhBhV,KAAKyW,gBAAkB,KACvBzW,KAAK0W,kBAAoB,EACzB1W,KAAK2W,iBAAmB,EAExB3W,KAAKsK,KAAM,EAEXtK,KAAKyL,UAAWnG,GDEjB49B,GAAkBz+B,UAAYC,OAAOC,OAAQoF,GAAStF,WACtDy+B,GAAkBz+B,UAAUG,YAAcs+B,GAE1CA,GAAkBz+B,UAAUynC,qBAAsB,EAElDhJ,GAAkBz+B,UAAUkH,KAAO,SAAWC,GAoB7C,OAlBA7B,GAAStF,UAAUkH,KAAK5L,KAAMC,KAAM4L,GAEpC5L,KAAKmhC,aAAev1B,EAAOu1B,aAE3BnhC,KAAKyK,SAAWmB,EAAOnB,SACvBzK,KAAK0K,aAAekB,EAAOlB,aAE3B1K,KAAK4U,IAAMhJ,EAAOgJ,IAElB5U,KAAKgV,SAAWpJ,EAAOoJ,SAEvBhV,KAAKyW,gBAAkB7K,EAAO6K,gBAC9BzW,KAAK0W,kBAAoB9K,EAAO8K,kBAChC1W,KAAK2W,iBAAmB/K,EAAO+K,iBAE/B3W,KAAKoK,UAAYwB,EAAOxB,UACxBpK,KAAKqK,mBAAqBuB,EAAOvB,mBAE1BrK,MCvBRmjC,GAAqB1+B,UAAYC,OAAOC,OAAQoF,GAAStF,WACzD0+B,GAAqB1+B,UAAUG,YAAcu+B,GAE7CA,GAAqB1+B,UAAU0nC,wBAAyB,EAExDhJ,GAAqB1+B,UAAUkH,KAAO,SAAWC,GAmBhD,OAjBA7B,GAAStF,UAAUkH,KAAK5L,KAAMC,KAAM4L,GAEpC5L,KAAKob,kBAAkBzP,KAAMC,EAAOwP,mBACpCpb,KAAKqb,aAAezP,EAAOyP,aAC3Brb,KAAKsb,YAAc1P,EAAO0P,YAE1Btb,KAAKyK,SAAWmB,EAAOnB,SACvBzK,KAAK0K,aAAekB,EAAOlB,aAE3B1K,KAAK4U,IAAMhJ,EAAOgJ,IAElB5U,KAAKgV,SAAWpJ,EAAOoJ,SAEvBhV,KAAKyW,gBAAkB7K,EAAO6K,gBAC9BzW,KAAK0W,kBAAoB9K,EAAO8K,kBAChC1W,KAAK2W,iBAAmB/K,EAAO+K,iBAExB3W,MC5DR,SAASosC,GAAgBC,EAAWC,EAAU9mB,GAE7C,IAAI+mB,EAAW,IAAIC,GAEnB,MAAMC,EAAiB,IAAIl2B,GAC1Bm2B,EAAgB,IAAIn2B,GAEpBo2B,EAAY,IAAIvjB,GAEhBwjB,EAAkB,GAClBC,EAAqB,GAErBC,EAAiB,GAEZC,EAAa,CAAEC,EAAG9uB,EAAU+uB,EAAGluB,EAAWmuB,EAAGvH,GAE7CwH,EAAyB,IAAIrjC,GAAgB,CAElDE,QAAS,CACRojC,YAAa,EAAM,EACnBC,iBAAkB,EAAM,GAGzB7jC,SAAU,CACT8jC,YAAa,CAAE/rC,MAAO,MACtBgsC,WAAY,CAAEhsC,MAAO,IAAIgV,IACzBi0B,OAAQ,CAAEjpC,MAAO,IAGlB0I,aC5CuB,mED8CvBC,eE9CuB,0nCFkDlBsjC,EAA0BL,EAAuBhkC,QACvDqkC,EAAwBxjC,QAAQyjC,eAAiB,EAEjD,MAAMC,EAAgB,IAAI3oC,GAC1B2oC,EAAc1lC,aACb,WACA,IAAI2lC,GACH,IAAIvqC,aAAc,EAAI,GAAK,EAAG,GAAK,GAAK,EAAG,IAAO,EAAG,EAAG,KACxD,IAIF,MAAMwqC,EAAiB,IAAI5vB,GAAM0vB,EAAeP,GAE1C5nC,EAAQvF,KA4Id,SAAS6tC,EAAStyB,EAAQyB,GAEzB,MAAMqB,EAAWiuB,EAASjqC,OAAQurC,GAIlCT,EAAuB3jC,SAAS8jC,YAAY/rC,MAAQga,EAAO3G,IAAIgK,QAC/DuuB,EAAuB3jC,SAAS+jC,WAAWhsC,MAAQga,EAAOkvB,QAC1D0C,EAAuB3jC,SAASghC,OAAOjpC,MAAQga,EAAOivB,OACtD6B,EAAUvgB,gBAAiBvQ,EAAOuyB,SAClCzB,EAAU7uB,QACV6uB,EAAU0B,mBAAoB/wB,EAAQ,KAAMqB,EAAU8uB,EAAwBS,EAAgB,MAI9FJ,EAAwBhkC,SAAS8jC,YAAY/rC,MAAQga,EAAOuyB,QAAQlvB,QACpE4uB,EAAwBhkC,SAAS+jC,WAAWhsC,MAAQga,EAAOkvB,QAC3D+C,EAAwBhkC,SAASghC,OAAOjpC,MAAQga,EAAOivB,OACvD6B,EAAUvgB,gBAAiBvQ,EAAO3G,KAClCy3B,EAAU7uB,QACV6uB,EAAU0B,mBAAoB/wB,EAAQ,KAAMqB,EAAUmvB,EAAyBI,EAAgB,MAIhG,SAASI,EAAyBC,EAAaC,EAAaC,GAE3D,MAAMztB,EAAQutB,GAAe,EAAIC,GAAe,EAAIC,GAAiB,EAErE,IAAIxvB,EAAWiuB,EAAiBlsB,GAiBhC,YAfkBxgB,IAAbye,IAEJA,EAAW,IAAIukB,GAAmB,CAEjC/B,aAAciN,EAEd1jC,aAAcujC,EACdxjC,SAAUyjC,IAIXtB,EAAiBlsB,GAAU/B,GAIrBA,EAIR,SAAS0vB,EAA4BJ,EAAaC,EAAaC,GAE9D,MAAMztB,EAAQutB,GAAe,EAAIC,GAAe,EAAIC,GAAiB,EAErE,IAAIxvB,EAAWkuB,EAAoBnsB,GAenC,YAbkBxgB,IAAbye,IAEJA,EAAW,IAAIwkB,GAAsB,CAEpCz4B,aAAcujC,EACdxjC,SAAUyjC,IAIXrB,EAAoBnsB,GAAU/B,GAIxBA,EAIR,SAAS2vB,EAAkB7tB,EAAQpC,EAAUM,EAAU+oB,EAAO7uB,EAAkBC,EAAiBxZ,GAEhG,IAAIivC,EAAS,KAETC,EAAqBR,EACrBS,EAAiBhuB,EAAOiuB,oBAS5B,IAP4B,IAAvBhH,EAAMwD,eAEVsD,EAAqBH,EACrBI,EAAiBhuB,EAAOkuB,6BAIDzuC,IAAnBuuC,EAA+B,CAEnC,IAAIR,GAAc,GAEa,IAA1BtvB,EAASjU,eAEbujC,EAAc5vB,EAASqQ,iBAAmBrQ,EAASqQ,gBAAgBvW,UAAYkG,EAASqQ,gBAAgBvW,SAASzO,OAAS,GAI3H,IAAIwkC,GAAc,GAEY,IAAzBztB,EAAO8jB,gBAEgB,IAAtB5lB,EAASlU,WAEbyjC,GAAc,GAYhBK,EAASC,EAAoBP,EAAaC,GAFO,IAA3BztB,EAAO8B,sBAM7BgsB,EAASE,EAIV,GAAKpC,EAAUxlB,uBACY,IAAzBlI,EAASiK,aAC0B,IAAnCjK,EAAS+J,eAAehf,OAAe,CAKxC,MAAMklC,EAAOL,EAAOtiC,KAAM4iC,EAAOlwB,EAAS1S,KAE1C,IAAI6iC,EAAsBhC,EAAgB8B,QAEb1uC,IAAxB4uC,IAEJA,EAAsB,GACtBhC,EAAgB8B,GAASE,GAI1B,IAAIC,EAAiBD,EAAqBD,QAElB3uC,IAAnB6uC,IAEJA,EAAiBR,EAAOplC,QACxB2lC,EAAqBD,GAASE,GAI/BR,EAASQ,EAgCV,OA5BAR,EAAOS,QAAUrwB,EAASqwB,QAC1BT,EAAOnkC,UAAYuU,EAASvU,UAI3BmkC,EAAOtwB,KAFH3e,IAAS49B,EAE2B,OAAxBve,EAASouB,WAAwBpuB,EAASouB,WAAapuB,EAASV,KAIxC,OAAxBU,EAASouB,WAAwBpuB,EAASouB,WAAaA,EAAYpuB,EAASV,MAI7FswB,EAAO3lB,YAAcjK,EAASiK,YAC9B2lB,EAAO7lB,eAAiB/J,EAAS+J,eACjC6lB,EAAO5lB,iBAAmBhK,EAASgK,iBAEnC4lB,EAAOlkC,mBAAqBsU,EAAStU,mBACrCkkC,EAAOpkC,UAAYwU,EAASxU,WAEA,IAAvBu9B,EAAMwD,eAA2D,IAAlCqD,EAAOpC,yBAE1CoC,EAAOnzB,kBAAkB8uB,sBAAuBxC,EAAMlpB,aACtD+vB,EAAOlzB,aAAexC,EACtB01B,EAAOjzB,YAAcxC,GAIfy1B,EAIR,SAASU,EAAcxuB,EAAQzD,EAAQkyB,EAAcxH,EAAOpoC,GAE3D,IAAwB,IAAnBmhB,EAAOuuB,QAAoB,OAIhC,GAFgBvuB,EAAOuK,OAAOmkB,KAAMnyB,EAAOgO,UAEzBvK,EAAO2uB,QAAU3uB,EAAO4uB,QAAU5uB,EAAO6uB,YAEnD7uB,EAAOwnB,YAAgBxnB,EAAO8uB,eAAiBjwC,IAAS49B,MAAwBzc,EAAO+uB,eAAiBjD,EAASkD,iBAAkBhvB,IAAa,CAEtJA,EAAOivB,gBAAgBC,iBAAkBT,EAAapnB,mBAAoBrH,EAAOjC,aAEjF,MAAMH,EAAWiuB,EAASjqC,OAAQoe,GAC5B9B,EAAW8B,EAAO9B,SAExB,GAAKvV,MAAMC,QAASsV,GAAa,CAEhC,MAAMixB,EAASvxB,EAASuxB,OAExB,IAAM,IAAIC,EAAI,EAAGC,EAAKF,EAAOlmC,OAAQmmC,EAAIC,EAAID,IAAO,CAEnD,MAAM7I,EAAQ4I,EAAQC,GAChBE,EAAgBpxB,EAAUqoB,EAAMxgC,eAEtC,GAAKupC,GAAiBA,EAAcf,QAAU,CAE7C,MAAMgB,EAAgB1B,EAAkB7tB,EAAQpC,EAAU0xB,EAAerI,EAAOwH,EAAaxkB,KAAMwkB,EAAavkB,IAAKrrB,GAErH+sC,EAAU0B,mBAAoBmB,EAAc,KAAM7wB,EAAU2xB,EAAevvB,EAAQumB,UAM/E,GAAKroB,EAASqwB,QAAU,CAE9B,MAAMgB,EAAgB1B,EAAkB7tB,EAAQpC,EAAUM,EAAU+oB,EAAOwH,EAAaxkB,KAAMwkB,EAAavkB,IAAKrrB,GAEhH+sC,EAAU0B,mBAAoBmB,EAAc,KAAM7wB,EAAU2xB,EAAevvB,EAAQ,OAQtF,MAAMwvB,EAAWxvB,EAAOwvB,SAExB,IAAM,IAAI1vB,EAAI,EAAGyN,EAAIiiB,EAASvmC,OAAQ6W,EAAIyN,EAAGzN,IAE5C0uB,EAAcgB,EAAU1vB,GAAKvD,EAAQkyB,EAAcxH,EAAOpoC,GArX5DU,KAAKqoB,SAAU,EAEfroB,KAAKkwC,YAAa,EAClBlwC,KAAKO,aAAc,EAEnBP,KAAKV,KAAO09B,EAEZh9B,KAAK6c,OAAS,SAAWtS,EAAQwS,EAAOC,GAEvC,IAAuB,IAAlBzX,EAAM8iB,QAAoB,OAC/B,IAA0B,IAArB9iB,EAAM2qC,aAA8C,IAAtB3qC,EAAMhF,YAAwB,OAEjE,GAAuB,IAAlBgK,EAAOb,OAAe,OAE3B,MAAMkiB,EAAsBygB,EAAUxgB,kBAChCskB,EAAiB9D,EAAU+D,oBAC3BC,EAAoBhE,EAAUiE,uBAE9BC,EAASlE,EAAU1wB,MAGzB40B,EAAOC,YAAa5e,GACpB2e,EAAO3uC,QAAQsJ,MAAMmR,SAAU,EAAG,EAAG,EAAG,GACxCk0B,EAAO3uC,QAAQqD,MAAMwrC,SAAS,GAC9BF,EAAOG,gBAAgB,GAIvB,IAAM,IAAInwB,EAAI,EAAGK,EAAKrW,EAAOb,OAAQ6W,EAAIK,EAAIL,IAAO,CAEnD,MAAMmnB,EAAQn9B,EAAQgW,GAChBhF,EAASmsB,EAAMnsB,OAErB,IAA2B,IAAtBA,EAAO20B,aAA+C,IAAvB30B,EAAOhb,YAAwB,SAEnE,QAAgBL,IAAXqb,EAGJ,SAIDkxB,EAAe9gC,KAAM4P,EAAOkvB,SAE5B,MAAMkG,EAAqBp1B,EAAOq1B,kBA0BlC,GAxBAnE,EAAeoE,SAAUF,GAEzBjE,EAAc/gC,KAAM4P,EAAOkvB,UAEtBgC,EAAellC,EAAIie,GAAkBinB,EAAeplC,EAAIme,KAEvDinB,EAAellC,EAAIie,IAEvBknB,EAAcnlC,EAAI/B,KAAKC,MAAO+f,EAAiBmrB,EAAmBppC,GAClEklC,EAAellC,EAAImlC,EAAcnlC,EAAIopC,EAAmBppC,EACxDgU,EAAOkvB,QAAQljC,EAAImlC,EAAcnlC,GAI7BklC,EAAeplC,EAAIme,IAEvBknB,EAAcrlC,EAAI7B,KAAKC,MAAO+f,EAAiBmrB,EAAmBtpC,GAClEolC,EAAeplC,EAAIqlC,EAAcrlC,EAAIspC,EAAmBtpC,EACxDkU,EAAOkvB,QAAQpjC,EAAIqlC,EAAcrlC,IAMf,OAAfkU,EAAO3G,MAAkB2G,EAAOu1B,oBAAsB9wC,KAAKV,OAAS49B,EAAe,CAEvF,MAAM6T,EAAO,CAAEpxC,UAAW4pB,EAAc7pB,UAAW6pB,EAAclqB,OAAQoyB,GAEzElW,EAAO3G,IAAM,IAAIqU,GAAmBwjB,EAAellC,EAAGklC,EAAeplC,EAAG0pC,GACxEx1B,EAAO3G,IAAIgK,QAAQ5S,KAAO07B,EAAM17B,KAAO,aAEvCuP,EAAOuyB,QAAU,IAAI7kB,GAAmBwjB,EAAellC,EAAGklC,EAAeplC,EAAG0pC,GAE5Ex1B,EAAOyB,OAAOg0B,yBAIf,GAAoB,OAAfz1B,EAAO3G,IAAe,CAE1B,MAAMm8B,EAAO,CAAEpxC,UAAWQ,EAAeT,UAAWS,EAAed,OAAQoyB,GAE3ElW,EAAO3G,IAAM,IAAIqU,GAAmBwjB,EAAellC,EAAGklC,EAAeplC,EAAG0pC,GACxEx1B,EAAO3G,IAAIgK,QAAQ5S,KAAO07B,EAAM17B,KAAO,aAEvCuP,EAAOyB,OAAOg0B,yBAIf3E,EAAUvgB,gBAAiBvQ,EAAO3G,KAClCy3B,EAAU7uB,QAEV,MAAMyzB,EAAgB11B,EAAO21B,mBAE7B,IAAM,IAAIC,EAAK,EAAGA,EAAKF,EAAeE,IAAQ,CAE7C,MAAM7nB,EAAW/N,EAAO61B,YAAaD,GAErCxE,EAAUjqC,IACTgqC,EAAcnlC,EAAI+hB,EAAS/hB,EAC3BmlC,EAAcrlC,EAAIiiB,EAASjiB,EAC3BqlC,EAAcnlC,EAAI+hB,EAAS7hB,EAC3BilC,EAAcrlC,EAAIiiB,EAASnjB,GAG5BoqC,EAAOjnB,SAAUqjB,GAEjBpxB,EAAO81B,eAAgB3J,EAAOyJ,GAE9B5E,EAAWhxB,EAAO+1B,aAElBrC,EAAclyB,EAAOC,EAAQzB,EAAOyB,OAAQ0qB,EAAO1nC,KAAKV,MAMlDic,EAAOu1B,oBAAsB9wC,KAAKV,OAAS49B,GAEjD2Q,EAAStyB,EAAQyB,GAIlBzB,EAAOhb,aAAc,EAItBgF,EAAMhF,aAAc,EAEpB8rC,EAAUvgB,gBAAiBF,EAAqBukB,EAAgBE,IGrMlE,SAASkB,GAAY9vC,EAAImJ,EAAYlJ,GAEpC,MAAMC,EAAWD,EAAaC,SAmT9B,MAAM6vC,EAAc,IAjTpB,WAEC,IAAIC,GAAS,EAEb,MAAMvmC,EAAQ,IAAIke,GAClB,IAAIsoB,EAAmB,KACvB,MAAMC,EAAoB,IAAIvoB,GAAS,EAAG,EAAG,EAAG,GAEhD,MAAO,CAENwoB,QAAS,SAAWC,GAEdH,IAAqBG,GAAeJ,IAExChwC,EAAGowC,UAAWA,EAAWA,EAAWA,EAAWA,GAC/CH,EAAmBG,IAMrBC,UAAW,SAAWC,GAErBN,EAASM,GAIV11B,SAAU,SAAWE,EAAGC,EAAG7U,EAAGD,EAAGmU,IAEJ,IAAvBA,IAEJU,GAAK7U,EAAG8U,GAAK9U,EAAGC,GAAKD,GAItBwD,EAAMxI,IAAK6Z,EAAGC,EAAG7U,EAAGD,IAEuB,IAAtCiqC,EAAkBK,OAAQ9mC,KAE9BzJ,EAAGqa,WAAYS,EAAGC,EAAG7U,EAAGD,GACxBiqC,EAAkBhmC,KAAMT,KAM1BqW,MAAO,WAENkwB,GAAS,EAETC,EAAmB,KACnBC,EAAkBjvC,KAAO,EAAG,EAAG,EAAG,MA+P/B8mB,EAAc,IAvPpB,WAEC,IAAIioB,GAAS,EAETQ,EAAmB,KACnBC,EAAmB,KACnBC,EAAoB,KAExB,MAAO,CAEN1B,QAAS,SAAWtyB,GAEdA,EAEJi0B,EAAQ3wC,EAAG4wC,YAIXC,EAAS7wC,EAAG4wC,aAMdT,QAAS,SAAWW,GAEdN,IAAqBM,GAAed,IAExChwC,EAAG8wC,UAAWA,GACdN,EAAmBM,IAMrBC,QAAS,SAAWC,GAEnB,GAAKP,IAAqBO,EAAY,CAErC,GAAKA,EAEJ,OAASA,GAER,KAAKC,GAEJjxC,EAAGgxC,UAAWhxC,EAAGkxC,OACjB,MAED,KAAKC,GAEJnxC,EAAGgxC,UAAWhxC,EAAGoxC,QACjB,MAED,KAAKC,GAEJrxC,EAAGgxC,UAAWhxC,EAAGsxC,MACjB,MAED,KAAKC,EAEJvxC,EAAGgxC,UAAWhxC,EAAGwxC,QACjB,MAED,KAAKC,GAEJzxC,EAAGgxC,UAAWhxC,EAAG0xC,OACjB,MAED,KAAKC,GAEJ3xC,EAAGgxC,UAAWhxC,EAAG4xC,QACjB,MAED,KAAKC,GAEJ7xC,EAAGgxC,UAAWhxC,EAAG8xC,SACjB,MAED,KAAKC,GAEJ/xC,EAAGgxC,UAAWhxC,EAAGgyC,UACjB,MAED,QAEChyC,EAAGgxC,UAAWhxC,EAAGwxC,aAMnBxxC,EAAGgxC,UAAWhxC,EAAGwxC,QAIlBf,EAAmBO,IAMrBX,UAAW,SAAWC,GAErBN,EAASM,GAIV11B,SAAU,SAAWpX,GAEfktC,IAAsBltC,IAE1BxD,EAAGiyC,WAAYzuC,GACfktC,EAAoBltC,IAMtBsc,MAAO,WAENkwB,GAAS,EAETQ,EAAmB,KACnBC,EAAmB,KACnBC,EAAoB,QA4HjB1oB,EAAgB,IApHtB,WAEC,IAAIgoB,GAAS,EAETkC,EAAqB,KACrBC,EAAqB,KACrBC,EAAoB,KACpBC,EAAyB,KACzBC,EAAqB,KACrBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,KAE1B,MAAO,CAENzD,QAAS,SAAW0D,GAEZ1C,IAED0C,EAEJ/B,EAAQ3wC,EAAG2yC,cAIX9B,EAAS7wC,EAAG2yC,gBAQfxC,QAAS,SAAWyC,GAEdV,IAAuBU,GAAiB5C,IAE5ChwC,EAAG4yC,YAAaA,GAChBV,EAAqBU,IAMvB7B,QAAS,SAAW8B,EAAaC,EAAYF,GAEvCT,IAAuBU,GACvBT,IAAsBU,GACtBT,IAA2BO,IAE/B5yC,EAAG6yC,YAAaA,EAAaC,EAAYF,GAEzCT,EAAqBU,EACrBT,EAAoBU,EACpBT,EAAyBO,IAM3BG,MAAO,SAAWC,EAAaC,EAAcC,GAEvCZ,IAAuBU,GACvBT,IAAwBU,GACxBT,IAAwBU,IAE5BlzC,EAAGmzC,UAAWH,EAAaC,EAAcC,GAEzCZ,EAAqBU,EACrBT,EAAsBU,EACtBT,EAAsBU,IAMxB7C,UAAW,SAAWC,GAErBN,EAASM,GAIV11B,SAAU,SAAW0P,GAEfmoB,IAAwBnoB,IAE5BtqB,EAAGozC,aAAc9oB,GACjBmoB,EAAsBnoB,IAMxBxK,MAAO,WAENkwB,GAAS,EAETkC,EAAqB,KACrBC,EAAqB,KACrBC,EAAoB,KACpBC,EAAyB,KACzBC,EAAqB,KACrBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,QAczB,IAAIY,EAAsB,GAEtBC,EAAiB,KAEjBC,EAAyB,KACzBC,EAAkB,KAClBC,EAAuB,KACvBC,EAAkB,KAClBC,EAAkB,KAClBC,EAA4B,KAC5BC,EAAuB,KACvBC,EAAuB,KACvBC,GAA2B,EAE3BC,EAAmB,KACnBC,EAAkB,KAElBC,EAAmB,KAEnBC,EAA6B,KAC7BC,EAA4B,KAEhC,MAAMzwB,EAAc3jB,EAAG4d,aAAc5d,EAAGq0C,kCAExC,IAAIC,GAAqB,EACrBtzC,EAAU,EACd,MAAMuzC,EAAYv0C,EAAG4d,aAAc5d,EAAGw0C,UAEE,IAAnCD,EAAU9P,QAAS,UAEvBzjC,EAAUyzC,WAAY,kBAAkBve,KAAMqe,GAAa,IAC3DD,EAAuBtzC,GAAW,IAEgB,IAAvCuzC,EAAU9P,QAAS,eAE9BzjC,EAAUyzC,WAAY,uBAAuBve,KAAMqe,GAAa,IAChED,EAAuBtzC,GAAW,GAInC,IAAI0zC,EAAqB,KACrBC,EAAuB,GAE3B,MAAMC,EAAiB,IAAIjtB,GACrBktB,EAAkB,IAAIltB,GAE5B,SAASmtB,EAAej3C,EAAMmuB,EAAQrpB,GAErC,MAAMlF,EAAO,IAAI8E,WAAY,GACvB4a,EAAUnd,EAAG80C,gBAEnB90C,EAAG+0C,YAAal3C,EAAMsf,GACtBnd,EAAGg1C,cAAen3C,EAAMmC,EAAGi1C,mBAAoBj1C,EAAGk1C,SAClDl1C,EAAGg1C,cAAen3C,EAAMmC,EAAGm1C,mBAAoBn1C,EAAGk1C,SAElD,IAAM,IAAIp2B,EAAI,EAAGA,EAAInc,EAAOmc,IAE3B9e,EAAGo1C,WAAYppB,EAASlN,EAAG,EAAG9e,EAAGq1C,KAAM,EAAG,EAAG,EAAGr1C,EAAGq1C,KAAMr1C,EAAGwC,cAAe/E,GAI5E,OAAO0f,EAIR,MAAMm4B,EAAgB,GAqBtB,SAAS3E,EAAQxwB,IAEmB,IAA9BkzB,EAAqBlzB,KAEzBngB,EAAG2wC,OAAQxwB,GACXkzB,EAAqBlzB,IAAO,GAM9B,SAAS0wB,EAAS1wB,IAEkB,IAA9BkzB,EAAqBlzB,KAEzBngB,EAAG6wC,QAAS1wB,GACZkzB,EAAqBlzB,IAAO,GApC9Bm1B,EAAet1C,EAAGu1C,YAAeT,EAAe90C,EAAGu1C,WAAYv1C,EAAGu1C,WAAY,GAC9ED,EAAet1C,EAAGw1C,kBAAqBV,EAAe90C,EAAGw1C,iBAAkBx1C,EAAGy1C,4BAA6B,GAI3G1F,EAAYn1B,SAAU,EAAG,EAAG,EAAG,GAC/BmN,EAAYnN,SAAU,GACtBoN,EAAcpN,SAAU,GAExB+1B,EAAQ3wC,EAAG4wC,YACX7oB,EAAYgpB,QAASQ,GAErBmE,GAAc,GACdC,EAAaC,IACbjF,EAAQ3wC,EAAG61C,WAEX9G,EAAa5e,GA0Cb,MAAM2lB,EAAe,CACpBvyC,CAAEwyC,GAAe/1C,EAAGg2C,SACpBzyC,CAAE0yC,GAAoBj2C,EAAGk2C,cACzB3yC,CAAE4yC,GAA2Bn2C,EAAGo2C,uBAGjC,GAAKl2C,EAEJ41C,EAAcO,GAAgBr2C,EAAGs2C,IACjCR,EAAcS,GAAgBv2C,EAAGw2C,QAE3B,CAEN,MAAM14B,EAAY3U,EAAW9I,IAAK,oBAEf,OAAdyd,IAEJg4B,EAAcO,GAAgBv4B,EAAU24B,QACxCX,EAAcS,GAAgBz4B,EAAU44B,SAM1C,MAAMC,EAAa,CAClBpzC,CAAEqzC,GAAc52C,EAAG62C,KACnBtzC,CAAEuzC,GAAa92C,EAAG+2C,IAClBxzC,CAAEyzC,GAAkBh3C,EAAGi3C,UACvB1zC,CAAE2zC,GAAkBl3C,EAAGm3C,UACvB5zC,CAAE6zC,GAA0Bp3C,EAAGq3C,mBAC/B9zC,CAAE+zC,IAAkBt3C,EAAGu3C,UACvBh0C,CAAEi0C,IAAkBx3C,EAAGy3C,UACvBl0C,CAAEm0C,IAA0B13C,EAAG23C,oBAC/Bp0C,CAAEq0C,IAA0B53C,EAAG63C,oBAC/Bt0C,CAAEu0C,IAA0B93C,EAAG+3C,oBAC/Bx0C,CAAEy0C,IAA0Bh4C,EAAGi4C,qBAGhC,SAASlJ,EAAa7e,EAAUgoB,EAAeC,EAAUC,EAAUC,EAAoBC,EAAeC,EAAen+B,GAEpH,GAAK8V,IAAaC,GAoBlB,GAPOojB,IAEN5C,EAAQ3wC,EAAGw4C,OACXjF,GAAyB,GAIrBrjB,IAAauoB,GAmFlBJ,EAAqBA,GAAsBH,EAC3CI,EAAgBA,GAAiBH,EACjCI,EAAgBA,GAAiBH,EAE5BF,IAAkBzE,GAAwB4E,IAAuBzE,IAErE5zC,EAAG04C,sBAAuB5C,EAAcoC,GAAiBpC,EAAcuC,IAEvE5E,EAAuByE,EACvBtE,EAA4ByE,GAIxBF,IAAazE,GAAmB0E,IAAazE,GAAmB2E,IAAkBzE,GAAwB0E,IAAkBzE,IAEhI9zC,EAAG24C,kBAAmBhC,EAAYwB,GAAYxB,EAAYyB,GAAYzB,EAAY2B,GAAiB3B,EAAY4B,IAE/G7E,EAAkByE,EAClBxE,EAAkByE,EAClBvE,EAAuByE,EACvBxE,EAAuByE,GAIxB/E,EAAkBtjB,EAClB6jB,EAA2B,UA1G1B,GAAK7jB,IAAasjB,GAAmBp5B,IAAuB25B,EAA2B,CAWtF,GATKN,IAAyBsC,GAAenC,IAA8BmC,IAE1E/1C,EAAGk4C,cAAel4C,EAAGg2C,UAErBvC,EAAuBsC,EACvBnC,EAA4BmC,GAIxB37B,EAEJ,OAAS8V,GAER,KAAK0oB,GACJ54C,EAAG24C,kBAAmB34C,EAAG+2C,IAAK/2C,EAAG63C,oBAAqB73C,EAAG+2C,IAAK/2C,EAAG63C,qBACjE,MAED,KAAKgB,GACJ74C,EAAG84C,UAAW94C,EAAG+2C,IAAK/2C,EAAG+2C,KACzB,MAED,KAAKgC,GACJ/4C,EAAG24C,kBAAmB34C,EAAG62C,KAAM72C,EAAG62C,KAAM72C,EAAG23C,oBAAqB33C,EAAG63C,qBACnE,MAED,KAAKmB,GACJh5C,EAAG24C,kBAAmB34C,EAAG62C,KAAM72C,EAAGi3C,UAAWj3C,EAAG62C,KAAM72C,EAAGm3C,gBAW3D,OAASjnB,GAER,KAAK0oB,GACJ54C,EAAG24C,kBAAmB34C,EAAGm3C,UAAWn3C,EAAG63C,oBAAqB73C,EAAG+2C,IAAK/2C,EAAG63C,qBACvE,MAED,KAAKgB,GACJ74C,EAAG84C,UAAW94C,EAAGm3C,UAAWn3C,EAAG+2C,KAC/B,MAED,KAAKgC,GACJ/4C,EAAG84C,UAAW94C,EAAG62C,KAAM72C,EAAG23C,qBAC1B,MAED,KAAKqB,GACJh5C,EAAG84C,UAAW94C,EAAG62C,KAAM72C,EAAGi3C,WAW7BvD,EAAkB,KAClBC,EAAkB,KAClBE,EAAuB,KACvBC,EAAuB,KAEvBN,EAAkBtjB,EAClB6jB,EAA2B35B,QA3FvBm5B,IAEJ1C,EAAS7wC,EAAGw4C,OACZjF,GAAyB,GAmK5B,SAASmC,EAAc7W,GAEjBmV,IAAqBnV,IAEpBA,EAEJ7+B,EAAGi5C,UAAWj5C,EAAGk5C,IAIjBl5C,EAAGi5C,UAAWj5C,EAAGm5C,KAIlBnF,EAAmBnV,GAMrB,SAAS8W,EAAayD,GAEhBA,IAAaC,IAEjB1I,EAAQ3wC,EAAG61C,WAENuD,IAAanF,IAEZmF,IAAaxD,GAEjB51C,EAAGo5C,SAAUp5C,EAAGs5C,MAELF,IAAaG,GAExBv5C,EAAGo5C,SAAUp5C,EAAGw5C,OAIhBx5C,EAAGo5C,SAAUp5C,EAAGy5C,kBAQlB5I,EAAS7wC,EAAG61C,WAIb5B,EAAkBmF,EAgBnB,SAASM,GAAkBC,EAAeC,EAAQ7kB,GAE5C4kB,GAEJhJ,EAAQ3wC,EAAG65C,qBAEN1F,IAA+ByF,GAAUxF,IAA8Brf,IAE3E/0B,EAAG25C,cAAeC,EAAQ7kB,GAE1Bof,EAA6ByF,EAC7BxF,EAA4Brf,IAM7B8b,EAAS7wC,EAAG65C,qBAsBd,SAASC,GAAeC,QAEJt7C,IAAds7C,IAA0BA,EAAY/5C,EAAGg6C,SAAWr2B,EAAc,GAElE+wB,IAAuBqF,IAE3B/5C,EAAG85C,cAAeC,GAClBrF,EAAqBqF,GAyIvB,MAAO,CAEN55C,QAAS,CACRsJ,MAAOsmC,EACPvsC,MAAOukB,EACPuC,QAAStC,GAGV2oB,OAAQA,EACRE,QAASA,EAEToJ,WApeD,SAAqBl7B,GAEpB,OAAKu0B,IAAmBv0B,IAEvB/e,EAAGi6C,WAAYl7B,GAEfu0B,EAAiBv0B,GAEV,IA8dRgwB,YAAaA,EACbmL,YA3SD,SAAsBh9B,EAAUi9B,GAE/Bj9B,EAASV,OAAS0nB,EACf2M,EAAS7wC,EAAG61C,WACZlF,EAAQ3wC,EAAG61C,WAEd,IAAIhX,EAAc3hB,EAASV,OAASC,EAC/B09B,IAActb,GAAcA,GAEjC6W,EAAc7W,GAEZ3hB,EAASgT,WAAa0oB,KAA2C,IAAzB17B,EAASkoB,YAChD2J,EAAa5e,GACb4e,EAAa7xB,EAASgT,SAAUhT,EAASg7B,cAAeh7B,EAASi7B,SAAUj7B,EAASk7B,SAAUl7B,EAASm7B,mBAAoBn7B,EAASo7B,cAAep7B,EAASq7B,cAAer7B,EAAS9C,oBAEvL2N,EAAYgpB,QAAS7zB,EAAS8zB,WAC9BjpB,EAAYinB,QAAS9xB,EAASR,WAC9BqL,EAAYooB,QAASjzB,EAASP,YAC9BozB,EAAYI,QAASjzB,EAASk9B,YAE9B,MAAMC,EAAen9B,EAASm9B,aAC9BryB,EAAcgnB,QAASqL,GAClBA,IAEJryB,EAAcmoB,QAASjzB,EAASo9B,kBAChCtyB,EAAc+oB,QAAS7zB,EAAS21B,YAAa31B,EAAS41B,WAAY51B,EAASq9B,iBAC3EvyB,EAAc+qB,MAAO71B,EAAS81B,YAAa91B,EAAS+1B,aAAc/1B,EAASg2B,eAI5EwG,GAAkBx8B,EAASy8B,cAAez8B,EAASs9B,oBAAqBt9B,EAASu9B,qBA+QjF/E,aAAcA,EACdC,YAAaA,EAEb+E,aAtND,SAAuBh9C,GAEjBA,IAAUw2C,IAETI,GAAqBt0C,EAAG26C,UAAWj9C,GAExCw2C,EAAmBx2C,IAiNpBg8C,iBAAkBA,GAElBzK,eAtLD,SAAyBrnB,GAEnBA,EAEJ+oB,EAAQ3wC,EAAG46C,cAIX/J,EAAS7wC,EAAG46C,eAgLbd,cAAeA,GACf/E,YA5JD,SAAsB8F,EAAWC,GAEJ,OAAvBpG,GAEJoF,KAID,IAAIiB,EAAepG,EAAsBD,QAEnBj2C,IAAjBs8C,IAEJA,EAAe,CAAEl9C,UAAMY,EAAW0e,aAAS1e,GAC3Ck2C,EAAsBD,GAAuBqG,GAIzCA,EAAal9C,OAASg9C,GAAaE,EAAa59B,UAAY29B,IAEhE96C,EAAG+0C,YAAa8F,EAAWC,GAAgBxF,EAAeuF,IAE1DE,EAAal9C,KAAOg9C,EACpBE,EAAa59B,QAAU29B,IAuIxBE,cAjID,WAEC,MAAMD,EAAepG,EAAsBD,QAErBj2C,IAAjBs8C,QAAoDt8C,IAAtBs8C,EAAal9C,OAE/CmC,EAAG+0C,YAAagG,EAAal9C,KAAM,MAEnCk9C,EAAal9C,UAAOY,EACpBs8C,EAAa59B,aAAU1e,IAyHxBw8C,qBAnHD,WAEC,IAECj7C,EAAGi7C,qBAAqBC,MAAOl7C,EAAIm7C,WAElC,MAAQC,MA8GVhG,WAtGD,WAEC,IAECp1C,EAAGo1C,WAAW8F,MAAOl7C,EAAIm7C,WAExB,MAAQC,MAiGVC,WAzFD,WAEC,IAECr7C,EAAGq7C,WAAWH,MAAOl7C,EAAIm7C,WAExB,MAAQC,MAqFV1zB,QA3ED,SAAkBA,IAEyB,IAArCktB,EAAerE,OAAQ7oB,KAE3B1nB,EAAG0nB,QAASA,EAAQ5hB,EAAG4hB,EAAQ9hB,EAAG8hB,EAAQ1hB,EAAG0hB,EAAQhjB,GACrDkwC,EAAe1qC,KAAMwd,KAuEtBG,SAjED,SAAmBA,IAE0B,IAAvCgtB,EAAgBtE,OAAQ1oB,KAE5B7nB,EAAG6nB,SAAUA,EAAS/hB,EAAG+hB,EAASjiB,EAAGiiB,EAAS7hB,EAAG6hB,EAASnjB,GAC1DmwC,EAAgB3qC,KAAM2d,KA8DvB/H,MAtDD,WAECuzB,EAAsB,GAEtBqB,EAAqB,KACrBC,EAAuB,GAEvBrB,EAAiB,KAEjBE,EAAkB,KAElBQ,EAAmB,KACnBC,EAAkB,KAElBlE,EAAYjwB,QACZiI,EAAYjI,QACZkI,EAAclI,UC13BhB,SAASw7B,GAAeC,EAAKpyC,EAAY+Q,EAAOlE,EAAY/V,EAAcu7C,EAAOj5B,GAEhF,MAAMriB,EAAWD,EAAaC,SAExB+jB,GADchkB,EAAa0jB,YACV1jB,EAAagkB,gBAC9BF,EAAiB9jB,EAAa8jB,eAC9BgB,EAAa9kB,EAAa8kB,WAE1B02B,EAAiB,IAAIr7C,QAC3B,IAAIs7C,EAMAC,GAAqB,EAEzB,IAECA,EAAgD,oBAApBC,iBAC+B,OAArD,IAAIA,gBAAiB,EAAG,GAAIxgB,WAAY,MAE7C,MAAQygB,IAMV,SAASC,EAAcp+C,EAAOC,GAI7B,OAAOg+C,EACN,IAAIC,gBAAiBl+C,EAAOC,GAC5Bo+C,SAASC,gBAAiB,+BAAgC,UAI5D,SAASC,EAAaz9C,EAAO09C,EAAiBC,EAAgBC,GAE7D,IAAIpkC,EAAQ,EAYZ,IARKxZ,EAAMd,MAAQ0+C,GAAW59C,EAAMb,OAASy+C,KAE5CpkC,EAAQokC,EAAUr4C,KAAKs4C,IAAK79C,EAAMd,MAAOc,EAAMb,SAM3Cqa,EAAQ,IAAyB,IAApBkkC,EAA2B,CAI5C,GAAmC,oBAArBI,kBAAoC99C,aAAiB89C,kBACnC,oBAAtBC,mBAAqC/9C,aAAiB+9C,mBACtC,oBAAhBC,aAA+Bh+C,aAAiBg+C,YAAgB,CAEzE,MAAMx4C,EAAQk4C,EAAkBO,EAAUC,gBAAkB34C,KAAKC,MAE3DtG,EAAQsG,EAAOgU,EAAQxZ,EAAMd,OAC7BC,EAASqG,EAAOgU,EAAQxZ,EAAMb,aAEnBc,IAAZi9C,IAAwBA,EAAUI,EAAcp+C,EAAOC,IAI5D,MAAMg/C,EAASR,EAAiBL,EAAcp+C,EAAOC,GAAW+9C,EAEhEiB,EAAOj/C,MAAQA,EACfi/C,EAAOh/C,OAASA,EAOhB,OALgBg/C,EAAOvhB,WAAY,MAC3BwhB,UAAWp+C,EAAO,EAAG,EAAGd,EAAOC,GAIhCg/C,EAUP,OAAOn+C,EAMT,OAAOA,EAIR,SAASq+C,EAAcr+C,GAEtB,OAAOi+C,EAAUI,aAAcr+C,EAAMd,QAAW++C,EAAUI,aAAcr+C,EAAMb,QAa/E,SAASm/C,EAA6B3/B,EAAS4/B,GAE9C,OAAO5/B,EAAQxe,iBAAmBo+C,GACjC5/B,EAAQjf,YAAcQ,GAAiBye,EAAQjf,YAAc4pB,EAI/D,SAASk1B,EAAgBhxB,EAAQ7O,EAASzf,EAAOC,GAEhD49C,EAAIyB,eAAgBhxB,GAEMhW,EAAW3V,IAAK8c,GAGxB8/B,cAAgBl5C,KAAKo0B,IAAKp0B,KAAKs4C,IAAK3+C,EAAOC,IAAaoG,KAAKm5C,MAIhF,SAASC,EAAmBC,EAAoBC,EAAUC,GAEzD,IAAkB,IAAbp9C,EAAqB,OAAOm9C,EAEjC,GAA4B,OAAvBD,QAE+B3+C,IAA9B88C,EAAK6B,GAAqC,OAAO7B,EAAK6B,GAM5D,IAAIG,EAAiBF,EAiCrB,OA/BKA,IAAa9B,EAAIiC,MAEhBF,IAAW/B,EAAI75C,QAAQ67C,EAAiBhC,EAAIkC,MAC5CH,IAAW/B,EAAImC,aAAaH,EAAiBhC,EAAIoC,MACjDL,IAAW/B,EAAI/4C,gBAAgB+6C,EAAiBhC,EAAIqC,KAIrDP,IAAa9B,EAAIsC,MAEhBP,IAAW/B,EAAI75C,QAAQ67C,EAAiBhC,EAAIuC,QAC5CR,IAAW/B,EAAImC,aAAaH,EAAiBhC,EAAIwC,QACjDT,IAAW/B,EAAI/4C,gBAAgB+6C,EAAiBhC,EAAIyC,OAIrDX,IAAa9B,EAAIlG,OAEhBiI,IAAW/B,EAAI75C,QAAQ67C,EAAiBhC,EAAI0C,SAC5CX,IAAW/B,EAAImC,aAAaH,EAAiBhC,EAAI2C,SACjDZ,IAAW/B,EAAI/4C,gBAAgB+6C,EAAiBhC,EAAI4C,QAIrDZ,IAAmBhC,EAAIoC,MAAQJ,IAAmBhC,EAAIkC,MAC1DF,IAAmBhC,EAAI2C,SAAWX,IAAmBhC,EAAI0C,SAEzD90C,EAAW9I,IAAK,0BAIVk9C,EAMR,SAASa,EAAgBC,GAExB,OAAKA,IAAM3/C,GAAiB2/C,IAAMC,IAA8BD,IAAME,GAE9DhD,EAAIrG,QAILqG,EAAIiD,OAMZ,SAASC,EAAkB1yB,GAE1B,MAAM5O,EAAU4O,EAAMC,OAEtB7O,EAAQ+O,oBAAqB,UAAWuyB,GA4BzC,SAA4BthC,GAE3B,MAAMuhC,EAAoB1oC,EAAW3V,IAAK8c,GAE1C,QAAuC1e,IAAlCigD,EAAkBC,YAA4B,OAEnDpD,EAAIqD,cAAeF,EAAkBG,gBAErC7oC,EAAWxV,OAAQ2c,GAlCnB2hC,CAAmB3hC,GAEdA,EAAQ4hC,gBAEZtD,EAAe96C,OAAQwc,GAIxBoF,EAAK4J,OAAOuB,WAIb,SAASsxB,EAAuBjzB,GAE/B,MAAM5C,EAAe4C,EAAMC,OAE3B7C,EAAa+C,oBAAqB,UAAW8yB,GAsB9C,SAAiC71B,GAEhC,MAAM81B,EAAyBjpC,EAAW3V,IAAK8oB,GACzCu1B,EAAoB1oC,EAAW3V,IAAK8oB,EAAahM,SAEvD,IAAOgM,EAAe,YAEoB1qB,IAArCigD,EAAkBG,gBAEtBtD,EAAIqD,cAAeF,EAAkBG,gBAIjC11B,EAAalB,cAEjBkB,EAAalB,aAAahG,UAI3B,GAAKkH,EAAa/M,wBAEjB,IAAM,IAAI0C,EAAI,EAAGA,EAAI,EAAGA,IAEvBy8B,EAAI2D,kBAAmBD,EAAuBE,mBAAoBrgC,IAC7DmgC,EAAuBG,oBAAqB7D,EAAI8D,mBAAoBJ,EAAuBG,mBAAoBtgC,SAMrHy8B,EAAI2D,kBAAmBD,EAAuBE,oBACzCF,EAAuBG,oBAAqB7D,EAAI8D,mBAAoBJ,EAAuBG,oBAC3FH,EAAuBK,gCAAiC/D,EAAI2D,kBAAmBD,EAAuBK,gCACtGL,EAAuBM,0BAA2BhE,EAAI8D,mBAAoBJ,EAAuBM,0BACjGN,EAAuBO,0BAA2BjE,EAAI8D,mBAAoBJ,EAAuBO,0BAIvGxpC,EAAWxV,OAAQ2oB,EAAahM,SAChCnH,EAAWxV,OAAQ2oB,GA3DnBs2B,CAAwBt2B,GAExB5G,EAAK4J,OAAOuB,WA+Db,IAAIgyB,EAAe,EA0BnB,SAASC,EAAcxiC,EAASyiC,GAE/B,MAAMlB,EAAoB1oC,EAAW3V,IAAK8c,GAI1C,GAFKA,EAAQ4hC,gBA42Bd,SAA6B5hC,GAE5B,MAAM7d,EAAQijB,EAAKnH,OAAO9b,MAIrBm8C,EAAep7C,IAAK8c,KAAc7d,IAEtCm8C,EAAex6C,IAAKkc,EAAS7d,GAC7B6d,EAAQvc,UAr3BqBi/C,CAAoB1iC,GAE7CA,EAAQnc,QAAU,GAAK09C,EAAkBoB,YAAc3iC,EAAQnc,QAAU,CAE7E,MAAMxC,EAAQ2e,EAAQ3e,MAEtB,QAAeC,IAAVD,QAIE,IAAwB,IAAnBA,EAAMuhD,SAOjB,YADAC,EAAetB,EAAmBvhC,EAASyiC,GAO7C1lC,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAawG,EAAIhG,WAAYmJ,EAAkBG,gBAoCtD,SAASoB,EAAgB9iC,EAASyiC,GAEjC,GAA8B,IAAzBziC,EAAQ3e,MAAMyJ,OAAe,OAElC,MAAMy2C,EAAoB1oC,EAAW3V,IAAK8c,GAE1C,GAAKA,EAAQnc,QAAU,GAAK09C,EAAkBoB,YAAc3iC,EAAQnc,QAAU,CAE7Ek/C,EAAaxB,EAAmBvhC,GAEhCjD,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAawG,EAAI/F,iBAAkBkJ,EAAkBG,gBAE3DtD,EAAI4E,YAAa5E,EAAI6E,oBAAqBjjC,EAAQve,OAElD,MAAMyhD,EAAiBljC,IAAaA,EAAQmjC,qBAAuBnjC,EAAQ3e,MAAO,GAAI8hD,qBAChFl9C,EAAkB+Z,EAAQ3e,MAAO,IAAO2e,EAAQ3e,MAAO,GAAI4E,cAE3Dm9C,EAAY,GAElB,IAAM,IAAIzhC,EAAI,EAAGA,EAAI,EAAGA,IAQtByhC,EAAWzhC,GANLuhC,GAAkBj9C,EAMPA,EAAgB+Z,EAAQ3e,MAAOsgB,GAAItgB,MAAQ2e,EAAQ3e,MAAOsgB,GAJ1Dm9B,EAAa9+B,EAAQ3e,MAAOsgB,IAAK,GAAO,EAAMmF,GAUjE,MAAMzlB,EAAQ+hD,EAAW,GACxBxD,EAAeF,EAAcr+C,IAAW0B,EACxCm9C,EAAW7B,EAAMgF,QAASrjC,EAAQvf,QAClC0/C,EAAS9B,EAAMgF,QAASrjC,EAAQtf,MAChC4iD,EAAmBtD,EAAmBhgC,EAAQogC,eAAgBF,EAAUC,GAIzE,IAAIoD,EAEJ,GAJAC,EAAsBpF,EAAI/F,iBAAkBr4B,EAAS4/B,GAIhDsD,EAAe,CAEnB,IAAM,IAAIvhC,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B4hC,EAAUH,EAAWzhC,GAAI4hC,QAEzB,IAAM,IAAIvY,EAAI,EAAGA,EAAIuY,EAAQz4C,OAAQkgC,IAAO,CAE3C,MAAMyY,EAASF,EAASvY,GAEnBhrB,EAAQvf,SAAWoyB,GAAc7S,EAAQvf,SAAW+xB,EAEtC,OAAb0tB,GAEJnjC,EAAM+gC,qBAAsBM,EAAI9F,4BAA8B32B,EAAGqpB,EAAGsY,EAAkBG,EAAOljD,MAAOkjD,EAAOjjD,OAAQ,EAAGijD,EAAOnjD,MAU9Hyc,EAAMk7B,WAAYmG,EAAI9F,4BAA8B32B,EAAGqpB,EAAGsY,EAAkBG,EAAOljD,MAAOkjD,EAAOjjD,OAAQ,EAAG0/C,EAAUC,EAAQsD,EAAOnjD,OAQxIihD,EAAkBzB,cAAgByD,EAAQz4C,OAAS,MAE7C,CAENy4C,EAAUvjC,EAAQujC,QAElB,IAAM,IAAI5hC,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAK1b,EAAgB,CAEpB8W,EAAMk7B,WAAYmG,EAAI9F,4BAA8B32B,EAAG,EAAG2hC,EAAkBF,EAAWzhC,GAAIphB,MAAO6iD,EAAWzhC,GAAInhB,OAAQ,EAAG0/C,EAAUC,EAAQiD,EAAWzhC,GAAIrhB,MAE7J,IAAM,IAAI0qC,EAAI,EAAGA,EAAIuY,EAAQz4C,OAAQkgC,IAAO,CAE3C,MACM0Y,EADSH,EAASvY,GACG3pC,MAAOsgB,GAAItgB,MAEtC0b,EAAMk7B,WAAYmG,EAAI9F,4BAA8B32B,EAAGqpB,EAAI,EAAGsY,EAAkBI,EAAYnjD,MAAOmjD,EAAYljD,OAAQ,EAAG0/C,EAAUC,EAAQuD,EAAYpjD,WAInJ,CAENyc,EAAMk7B,WAAYmG,EAAI9F,4BAA8B32B,EAAG,EAAG2hC,EAAkBpD,EAAUC,EAAQiD,EAAWzhC,IAEzG,IAAM,IAAIqpB,EAAI,EAAGA,EAAIuY,EAAQz4C,OAAQkgC,IAAO,CAE3C,MAAMyY,EAASF,EAASvY,GAExBjuB,EAAMk7B,WAAYmG,EAAI9F,4BAA8B32B,EAAGqpB,EAAI,EAAGsY,EAAkBpD,EAAUC,EAAQsD,EAAOpiD,MAAOsgB,KAQnH4/B,EAAkBzB,cAAgByD,EAAQz4C,OAItC60C,EAA6B3/B,EAAS4/B,IAG1CC,EAAgBzB,EAAI/F,iBAAkBr4B,EAAS3e,EAAMd,MAAOc,EAAMb,QAInE+gD,EAAkBoB,UAAY3iC,EAAQnc,QAEjCmc,EAAQ2jC,UAAW3jC,EAAQ2jC,SAAU3jC,QAI1CjD,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAawG,EAAI/F,iBAAkBkJ,EAAkBG,gBAM7D,SAASkC,EAAuB5jC,EAASyiC,GAExC1lC,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAawG,EAAI/F,iBAAkBx/B,EAAW3V,IAAK8c,GAAU0hC,gBAIpE,MAAMmC,EAAe,CACpBz9C,CAAE09C,IAAkB1F,EAAI2F,OACxB39C,CAAEusB,GAAuByrB,EAAI4F,cAC7B59C,CAAE69C,IAA0B7F,EAAI8F,iBAG3BC,EAAa,CAClB/9C,CAAE7E,GAAiB68C,EAAIrG,QACvB3xC,CAAE+6C,IAA8B/C,EAAIgG,uBACpCh+C,CAAEg7C,IAA6BhD,EAAIiG,sBAEnCj+C,CAAEukB,GAAgByzB,EAAIiD,OACtBj7C,CAAEk+C,IAA6BlG,EAAImG,sBACnCn+C,CAAE+sB,GAA4BirB,EAAIoG,sBAGnC,SAAShB,EAAsBiB,EAAazkC,EAAS4/B,GAE/CA,GAEJxB,EAAIvG,cAAe4M,EAAarG,EAAIsG,eAAgBb,EAAc7jC,EAAQpf,QAC1Ew9C,EAAIvG,cAAe4M,EAAarG,EAAIuG,eAAgBd,EAAc7jC,EAAQnf,QAErE4jD,IAAgBrG,EAAIwG,YAAcH,IAAgBrG,EAAIyG,kBAE1DzG,EAAIvG,cAAe4M,EAAarG,EAAI0G,eAAgBjB,EAAc7jC,EAAQ0S,QAI3E0rB,EAAIvG,cAAe4M,EAAarG,EAAIpG,mBAAoBmM,EAAYnkC,EAAQlf,YAC5Es9C,EAAIvG,cAAe4M,EAAarG,EAAItG,mBAAoBqM,EAAYnkC,EAAQjf,cAI5Eq9C,EAAIvG,cAAe4M,EAAarG,EAAIsG,eAAgBtG,EAAI4F,eACxD5F,EAAIvG,cAAe4M,EAAarG,EAAIuG,eAAgBvG,EAAI4F,eAEnDS,IAAgBrG,EAAIwG,YAAcH,IAAgBrG,EAAIyG,kBAE1DzG,EAAIvG,cAAe4M,EAAarG,EAAI0G,eAAgB1G,EAAI4F,eAIpDhkC,EAAQpf,QAAU+xB,GAAuB3S,EAAQnf,MAMtDu9C,EAAIvG,cAAe4M,EAAarG,EAAIpG,mBAAoBiJ,EAAgBjhC,EAAQlf,YAChFs9C,EAAIvG,cAAe4M,EAAarG,EAAItG,mBAAoBmJ,EAAgBjhC,EAAQjf,YAE3Eif,EAAQjf,YAAcQ,GAAiBye,EAAQjf,WAQrD,MAAM4f,EAAY3U,EAAW9I,IAAK,kCAElC,GAAKyd,EAAY,CAEhB,GAAKX,EAAQtf,OAASqkD,IAA8D,OAAjD/4C,EAAW9I,IAAK,4BAAwC,OAC3F,GAAK8c,EAAQtf,OAASskD,IAAuF,QAApEjiD,GAAYiJ,EAAW9I,IAAK,kCAA+C,QAE/G8c,EAAQhf,WAAa,GAAK6X,EAAW3V,IAAK8c,GAAUilC,uBAExD7G,EAAI8G,cAAeT,EAAa9jC,EAAUwkC,2BAA4Bv+C,KAAKo/B,IAAKhmB,EAAQhf,WAAY8B,EAAa2kB,qBACjH5O,EAAW3V,IAAK8c,GAAUilC,oBAAsBjlC,EAAQhf,aAQ3D,SAAS+hD,EAAaxB,EAAmBvhC,QAED1e,IAAlCigD,EAAkBC,cAEtBD,EAAkBC,aAAc,EAEhCxhC,EAAQyP,iBAAkB,UAAW6xB,GAErCC,EAAkBG,eAAiBtD,EAAIzG,gBAEvCvyB,EAAK4J,OAAOuB,YAMd,SAASsyB,EAAetB,EAAmBvhC,EAASyiC,GAEnD,IAAIgC,EAAcrG,EAAIhG,WAEjBp4B,EAAQoT,uBAAuBqxB,EAAcrG,EAAIyG,kBACjD7kC,EAAQqT,kBAAkBoxB,EAAcrG,EAAIwG,YAEjD7B,EAAaxB,EAAmBvhC,GAEhCjD,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAa6M,EAAalD,EAAkBG,gBAElDtD,EAAI4E,YAAa5E,EAAI6E,oBAAqBjjC,EAAQve,OAClD28C,EAAI4E,YAAa5E,EAAIgH,+BAAgCplC,EAAQqlC,kBAC7DjH,EAAI4E,YAAa5E,EAAIkH,iBAAkBtlC,EAAQte,iBAE/C,MAAMq9C,EA7gBP,SAAiC/+B,GAEhC,OAAKjd,IAEIid,EAAQpf,QAAU+xB,GAAuB3S,EAAQnf,QAAU8xB,GACjE3S,EAAQjf,YAAcQ,GAAiBye,EAAQjf,YAAc4pB,GAwgBxC46B,CAAwBvlC,KAA+C,IAAlC0/B,EAAc1/B,EAAQ3e,OAC7EA,EAAQy9C,EAAa9+B,EAAQ3e,MAAO09C,GAAiB,EAAOn4B,GAE5Dg5B,EAAeF,EAAcr+C,IAAW0B,EAC7Cm9C,EAAW7B,EAAMgF,QAASrjC,EAAQvf,QAEnC,IAKIgjD,EALAtD,EAAS9B,EAAMgF,QAASrjC,EAAQtf,MACnC4iD,EAAmBtD,EAAmBhgC,EAAQogC,eAAgBF,EAAUC,GAEzEqD,EAAsBiB,EAAazkC,EAAS4/B,GAG5C,MAAM2D,EAAUvjC,EAAQujC,QAExB,GAAKvjC,EAAQwlC,eAIZlC,EAAmBlF,EAAIqH,gBAElB1iD,EAIHugD,EAFItjC,EAAQtf,OAASqkD,GAEF3G,EAAIsH,mBAEZ1lC,EAAQtf,OAASilD,GAETvH,EAAIwH,kBAEZ5lC,EAAQtf,OAASmlD,GAETzH,EAAI0H,iBAIJ1H,EAAI2H,kBAMnB/lC,EAAQtf,KAUTsf,EAAQvf,SAAWulD,IAAe1C,IAAqBlF,EAAIqH,iBAK1DzlC,EAAQtf,OAASulD,IAAqBjmC,EAAQtf,OAASilD,KAI3D3lC,EAAQtf,KAAOulD,GACf9F,EAAS9B,EAAMgF,QAASrjC,EAAQtf,OAM7Bsf,EAAQvf,SAAWylD,IAAsB5C,IAAqBlF,EAAIqH,kBAItEnC,EAAmBlF,EAAI+H,cAKlBnmC,EAAQtf,OAASmlD,KAIrB7lC,EAAQtf,KAAOmlD,GACf1F,EAAS9B,EAAMgF,QAASrjC,EAAQtf,QAQlCqc,EAAMk7B,WAAYmG,EAAIhG,WAAY,EAAGkL,EAAkBjiD,EAAMd,MAAOc,EAAMb,OAAQ,EAAG0/C,EAAUC,EAAQ,WAEjG,GAAKngC,EAAQ/Z,cAMnB,GAAKs9C,EAAQz4C,OAAS,GAAK80C,EAAe,CAEzC,IAAM,IAAIj+B,EAAI,EAAGK,EAAKuhC,EAAQz4C,OAAQ6W,EAAIK,EAAIL,IAE7C8hC,EAASF,EAAS5hC,GAClB5E,EAAMk7B,WAAYmG,EAAIhG,WAAYz2B,EAAG2hC,EAAkBG,EAAOljD,MAAOkjD,EAAOjjD,OAAQ,EAAG0/C,EAAUC,EAAQsD,EAAOnjD,MAIjH0f,EAAQxe,iBAAkB,EAC1B+/C,EAAkBzB,cAAgByD,EAAQz4C,OAAS,OAInDiS,EAAMk7B,WAAYmG,EAAIhG,WAAY,EAAGkL,EAAkBjiD,EAAMd,MAAOc,EAAMb,OAAQ,EAAG0/C,EAAUC,EAAQ9+C,EAAMf,MAC7GihD,EAAkBzB,cAAgB,OAI7B,GAAK9/B,EAAQmjC,oBAAsB,CAEzC,IAAM,IAAIxhC,EAAI,EAAGK,EAAKuhC,EAAQz4C,OAAQ6W,EAAIK,EAAIL,IAE7C8hC,EAASF,EAAS5hC,GAEb3B,EAAQvf,SAAWoyB,GAAc7S,EAAQvf,SAAW+xB,EAEtC,OAAb0tB,GAEJnjC,EAAM+gC,qBAAsBM,EAAIhG,WAAYz2B,EAAG2hC,EAAkBG,EAAOljD,MAAOkjD,EAAOjjD,OAAQ,EAAGijD,EAAOnjD,MAUzGyc,EAAMk7B,WAAYmG,EAAIhG,WAAYz2B,EAAG2hC,EAAkBG,EAAOljD,MAAOkjD,EAAOjjD,OAAQ,EAAG0/C,EAAUC,EAAQsD,EAAOnjD,MAMlHihD,EAAkBzB,cAAgByD,EAAQz4C,OAAS,OAE7C,GAAKkV,EAAQoT,qBAEnBrW,EAAMmhC,WAAYE,EAAIyG,iBAAkB,EAAGvB,EAAkBjiD,EAAMd,MAAOc,EAAMb,OAAQa,EAAMgF,MAAO,EAAG65C,EAAUC,EAAQ9+C,EAAMf,MAChIihD,EAAkBzB,cAAgB,OAE5B,GAAK9/B,EAAQqT,gBAEnBtW,EAAMmhC,WAAYE,EAAIwG,WAAY,EAAGtB,EAAkBjiD,EAAMd,MAAOc,EAAMb,OAAQa,EAAMgF,MAAO,EAAG65C,EAAUC,EAAQ9+C,EAAMf,MAC1HihD,EAAkBzB,cAAgB,OAUlC,GAAKyD,EAAQz4C,OAAS,GAAK80C,EAAe,CAEzC,IAAM,IAAIj+B,EAAI,EAAGK,EAAKuhC,EAAQz4C,OAAQ6W,EAAIK,EAAIL,IAE7C8hC,EAASF,EAAS5hC,GAClB5E,EAAMk7B,WAAYmG,EAAIhG,WAAYz2B,EAAG2hC,EAAkBpD,EAAUC,EAAQsD,GAI1EzjC,EAAQxe,iBAAkB,EAC1B+/C,EAAkBzB,cAAgByD,EAAQz4C,OAAS,OAInDiS,EAAMk7B,WAAYmG,EAAIhG,WAAY,EAAGkL,EAAkBpD,EAAUC,EAAQ9+C,GACzEkgD,EAAkBzB,cAAgB,EAM/BH,EAA6B3/B,EAAS4/B,IAE1CC,EAAgB4E,EAAazkC,EAAS3e,EAAMd,MAAOc,EAAMb,QAI1D+gD,EAAkBoB,UAAY3iC,EAAQnc,QAEjCmc,EAAQ2jC,UAAW3jC,EAAQ2jC,SAAU3jC,GAO3C,SAASomC,EAAyBC,EAAar6B,EAAcs6B,EAAYC,GAExE,MAAMrG,EAAW7B,EAAMgF,QAASr3B,EAAahM,QAAQvf,QAC/C0/C,EAAS9B,EAAMgF,QAASr3B,EAAahM,QAAQtf,MAC7C4iD,EAAmBtD,EAAmBh0B,EAAahM,QAAQogC,eAAgBF,EAAUC,GAC3FpjC,EAAMk7B,WAAYsO,EAAe,EAAGjD,EAAkBt3B,EAAazrB,MAAOyrB,EAAaxrB,OAAQ,EAAG0/C,EAAUC,EAAQ,MACpH/B,EAAIoI,gBAAiBpI,EAAIqI,YAAaJ,GACtCjI,EAAIsI,qBAAsBtI,EAAIqI,YAAaH,EAAYC,EAAe1tC,EAAW3V,IAAK8oB,EAAahM,SAAU0hC,eAAgB,GAC7HtD,EAAIoI,gBAAiBpI,EAAIqI,YAAa,MAKvC,SAASE,EAA0BC,EAAc56B,EAAc66B,GAI9D,GAFAzI,EAAI0I,iBAAkB1I,EAAI2I,aAAcH,GAEnC56B,EAAapB,cAAiBoB,EAAanB,cAAgB,CAE/D,IAAIy4B,EAAmBlF,EAAI2H,kBAE3B,GAAKc,EAAgB,CAEpB,MAAM/7B,EAAekB,EAAalB,aAE7BA,GAAgBA,EAAa06B,iBAE5B16B,EAAapqB,OAASqkD,GAE1BzB,EAAmBlF,EAAIsH,mBAEZ56B,EAAapqB,OAASilD,KAEjCrC,EAAmBlF,EAAIwH,oBAMzB,MAAMoB,EAAUC,EAAwBj7B,GAExCoyB,EAAI8I,+BAAgC9I,EAAI2I,aAAcC,EAAS1D,EAAkBt3B,EAAazrB,MAAOyrB,EAAaxrB,aAIlH49C,EAAI+I,oBAAqB/I,EAAI2I,aAAczD,EAAkBt3B,EAAazrB,MAAOyrB,EAAaxrB,QAI/F49C,EAAIgJ,wBAAyBhJ,EAAIqI,YAAarI,EAAIiJ,iBAAkBjJ,EAAI2I,aAAcH,QAEhF,GAAK56B,EAAapB,aAAeoB,EAAanB,cAAgB,CAEpE,GAAKg8B,EAAgB,CAEpB,MAAMG,EAAUC,EAAwBj7B,GAExCoyB,EAAI8I,+BAAgC9I,EAAI2I,aAAcC,EAAS5I,EAAI0H,iBAAkB95B,EAAazrB,MAAOyrB,EAAaxrB,aAItH49C,EAAI+I,oBAAqB/I,EAAI2I,aAAc3I,EAAI+H,cAAen6B,EAAazrB,MAAOyrB,EAAaxrB,QAKhG49C,EAAIgJ,wBAAyBhJ,EAAIqI,YAAarI,EAAIkJ,yBAA0BlJ,EAAI2I,aAAcH,OAExF,CAEN,MAAM1G,EAAW7B,EAAMgF,QAASr3B,EAAahM,QAAQvf,QAC/C0/C,EAAS9B,EAAMgF,QAASr3B,EAAahM,QAAQtf,MAC7C4iD,EAAmBtD,EAAmBh0B,EAAahM,QAAQogC,eAAgBF,EAAUC,GAE3F,GAAK0G,EAAgB,CAEpB,MAAMG,EAAUC,EAAwBj7B,GAExCoyB,EAAI8I,+BAAgC9I,EAAI2I,aAAcC,EAAS1D,EAAkBt3B,EAAazrB,MAAOyrB,EAAaxrB,aAIlH49C,EAAI+I,oBAAqB/I,EAAI2I,aAAczD,EAAkBt3B,EAAazrB,MAAOyrB,EAAaxrB,QAMhG49C,EAAI0I,iBAAkB1I,EAAI2I,aAAc,MAkDzC,SAASQ,EAAwBv7B,GAEhC,MAAM81B,EAAyBjpC,EAAW3V,IAAK8oB,GAEzCw7B,GAAoD,IAAzCx7B,EAAa/M,wBAE9B,GAAK+M,EAAalB,aAAe,CAEhC,GAAK08B,EAAS,MAAM,IAAIpqB,MAAO,6DArDjC,SAA4BipB,EAAar6B,GAGxC,GADiBA,GAAgBA,EAAa/M,wBAChC,MAAM,IAAIme,MAAO,2DAI/B,GAFAghB,EAAIoI,gBAAiBpI,EAAIqI,YAAaJ,IAE7Br6B,EAAalB,eAAgBkB,EAAalB,aAAa06B,eAE/D,MAAM,IAAIpoB,MAAO,uEAKXvkB,EAAW3V,IAAK8oB,EAAalB,cAAe42B,gBACjD11B,EAAalB,aAAazpB,MAAMd,QAAUyrB,EAAazrB,OACvDyrB,EAAalB,aAAazpB,MAAMb,SAAWwrB,EAAaxrB,SAEzDwrB,EAAalB,aAAazpB,MAAMd,MAAQyrB,EAAazrB,MACrDyrB,EAAalB,aAAazpB,MAAMb,OAASwrB,EAAaxrB,OACtDwrB,EAAalB,aAAanpB,aAAc,GAIzC6gD,EAAcx2B,EAAalB,aAAc,GAEzC,MAAM28B,EAAoB5uC,EAAW3V,IAAK8oB,EAAalB,cAAe42B,eAEtE,GAAK11B,EAAalB,aAAarqB,SAAWulD,GAEzC5H,EAAIsI,qBAAsBtI,EAAIqI,YAAarI,EAAIiJ,iBAAkBjJ,EAAIhG,WAAYqP,EAAmB,OAE9F,CAAA,GAAKz7B,EAAalB,aAAarqB,SAAWylD,GAMhD,MAAM,IAAI9oB,MAAO,+BAJjBghB,EAAIsI,qBAAsBtI,EAAIqI,YAAarI,EAAIkJ,yBAA0BlJ,EAAIhG,WAAYqP,EAAmB,IAqB5GC,CAAmB5F,EAAuBE,mBAAoBh2B,QAI9D,GAAKw7B,EAAS,CAEb1F,EAAuBG,mBAAqB,GAE5C,IAAM,IAAItgC,EAAI,EAAGA,EAAI,EAAGA,IAEvBy8B,EAAIoI,gBAAiBpI,EAAIqI,YAAa3E,EAAuBE,mBAAoBrgC,IACjFmgC,EAAuBG,mBAAoBtgC,GAAMy8B,EAAIuJ,qBACrDhB,EAA0B7E,EAAuBG,mBAAoBtgC,GAAKqK,GAAc,QAMzFoyB,EAAIoI,gBAAiBpI,EAAIqI,YAAa3E,EAAuBE,oBAC7DF,EAAuBG,mBAAqB7D,EAAIuJ,qBAChDhB,EAA0B7E,EAAuBG,mBAAoBj2B,GAAc,GAMrFoyB,EAAIoI,gBAAiBpI,EAAIqI,YAAa,MAsLvC,SAASQ,EAAwBj7B,GAEhC,OAASjpB,GAAYipB,EAAa47B,+BACjChhD,KAAKo/B,IAAKpe,EAAYoE,EAAag7B,SAAY,EA+EjD5lD,KAAKmzB,oBA78BL,WAEC,MAAMszB,EAActF,EAUpB,OAFAA,GAAgB,EAETsF,GAk8BRzmD,KAAK0mD,kBAp9BL,WAECvF,EAAe,GAo9BhBnhD,KAAKohD,aAAeA,EACpBphD,KAAK40B,kBA/5BL,SAA4BhW,EAASyiC,GAEpC,MAAMlB,EAAoB1oC,EAAW3V,IAAK8c,GAErCA,EAAQnc,QAAU,GAAK09C,EAAkBoB,YAAc3iC,EAAQnc,QAEnEg/C,EAAetB,EAAmBvhC,EAASyiC,IAK5C1lC,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAawG,EAAIyG,iBAAkBtD,EAAkBG,kBAo5B5DtgD,KAAK80B,aAh5BL,SAAuBlW,EAASyiC,GAE/B,MAAMlB,EAAoB1oC,EAAW3V,IAAK8c,GAErCA,EAAQnc,QAAU,GAAK09C,EAAkBoB,YAAc3iC,EAAQnc,QAEnEg/C,EAAetB,EAAmBvhC,EAASyiC,IAK5C1lC,EAAM4/B,cAAeyB,EAAIvB,SAAW4F,GACpC1lC,EAAM66B,YAAawG,EAAIwG,WAAYrD,EAAkBG,kBAq4BtDtgD,KAAK0hD,eAAiBA,EACtB1hD,KAAKwiD,sBAAwBA,EAC7BxiD,KAAK2mD,kBA3QL,SAA4B/7B,GAE3B,MAAM81B,EAAyBjpC,EAAW3V,IAAK8oB,GACzCu1B,EAAoB1oC,EAAW3V,IAAK8oB,EAAahM,SAEvDgM,EAAayD,iBAAkB,UAAWoyB,GAE1CN,EAAkBG,eAAiBtD,EAAIzG,gBAEvCvyB,EAAK4J,OAAOuB,WAEZ,MAAMi3B,GAAoD,IAAzCx7B,EAAa/M,wBACxB4nC,GAAkE,IAAhD76B,EAAa47B,+BAC/BhI,EAAeF,EAAc1zB,IAAkBjpB,EAcrD,IAVKA,GAAYipB,EAAahM,QAAQvf,SAAW+xB,GAAexG,EAAahM,QAAQtf,OAASqkD,IAAa/4B,EAAahM,QAAQtf,OAASskD,KAExIh5B,EAAahM,QAAQvf,OAASoyB,GAQ1B20B,EAAS,CAEb1F,EAAuBE,mBAAqB,GAE5C,IAAM,IAAIrgC,EAAI,EAAGA,EAAI,EAAGA,IAEvBmgC,EAAuBE,mBAAoBrgC,GAAMy8B,EAAI4J,yBAQtD,GAFAlG,EAAuBE,mBAAqB5D,EAAI4J,oBAE3CnB,GAEC9jD,EAAW,CAEf++C,EAAuBK,+BAAiC/D,EAAI4J,oBAC5DlG,EAAuBM,yBAA2BhE,EAAIuJ,qBAEtDvJ,EAAI0I,iBAAkB1I,EAAI2I,aAAcjF,EAAuBM,0BAE/D,MAAMlC,EAAW7B,EAAMgF,QAASr3B,EAAahM,QAAQvf,QAC/C0/C,EAAS9B,EAAMgF,QAASr3B,EAAahM,QAAQtf,MAC7C4iD,EAAmBtD,EAAmBh0B,EAAahM,QAAQogC,eAAgBF,EAAUC,GACrF6G,EAAUC,EAAwBj7B,GACxCoyB,EAAI8I,+BAAgC9I,EAAI2I,aAAcC,EAAS1D,EAAkBt3B,EAAazrB,MAAOyrB,EAAaxrB,QAElH49C,EAAIoI,gBAAiBpI,EAAIqI,YAAa3E,EAAuBK,gCAC7D/D,EAAIgJ,wBAAyBhJ,EAAIqI,YAAarI,EAAI6J,kBAAmB7J,EAAI2I,aAAcjF,EAAuBM,0BAC9GhE,EAAI0I,iBAAkB1I,EAAI2I,aAAc,MAEnC/6B,EAAapB,cAEjBk3B,EAAuBO,yBAA2BjE,EAAIuJ,qBACtDhB,EAA0B7E,EAAuBO,yBAA0Br2B,GAAc,IAI1FoyB,EAAIoI,gBAAiBpI,EAAIqI,YAAa,MAezC,GAAKe,EAAS,CAEbzqC,EAAM66B,YAAawG,EAAI/F,iBAAkBkJ,EAAkBG,gBAC3D8B,EAAsBpF,EAAI/F,iBAAkBrsB,EAAahM,QAAS4/B,GAElE,IAAM,IAAIj+B,EAAI,EAAGA,EAAI,EAAGA,IAEvBykC,EAAyBtE,EAAuBE,mBAAoBrgC,GAAKqK,EAAcoyB,EAAI6J,kBAAmB7J,EAAI9F,4BAA8B32B,GAI5Ig+B,EAA6B3zB,EAAahM,QAAS4/B,IAEvDC,EAAgBzB,EAAI/F,iBAAkBrsB,EAAahM,QAASgM,EAAazrB,MAAOyrB,EAAaxrB,QAI9Fuc,EAAM66B,YAAawG,EAAI/F,iBAAkB,WAIzCt7B,EAAM66B,YAAawG,EAAIhG,WAAYmJ,EAAkBG,gBACrD8B,EAAsBpF,EAAIhG,WAAYpsB,EAAahM,QAAS4/B,GAC5DwG,EAAyBtE,EAAuBE,mBAAoBh2B,EAAcoyB,EAAI6J,kBAAmB7J,EAAIhG,YAExGuH,EAA6B3zB,EAAahM,QAAS4/B,IAEvDC,EAAgBzB,EAAIhG,WAAYpsB,EAAahM,QAASgM,EAAazrB,MAAOyrB,EAAaxrB,QAIxFuc,EAAM66B,YAAawG,EAAIhG,WAAY,MAM/BpsB,EAAapB,aAEjB28B,EAAwBv7B,IAmJ1B5qB,KAAK8mD,yBA7IL,SAAmCl8B,GAElC,MAAMhM,EAAUgM,EAAahM,QAG7B,GAAK2/B,EAA6B3/B,EAFb0/B,EAAc1zB,IAAkBjpB,GAEO,CAE3D,MAAM8rB,EAAS7C,EAAa/M,wBAA0Bm/B,EAAI/F,iBAAmB+F,EAAIhG,WAC3EuF,EAAe9kC,EAAW3V,IAAK8c,GAAU0hC,eAE/C3kC,EAAM66B,YAAa/oB,EAAQ8uB,GAC3BkC,EAAgBhxB,EAAQ7O,EAASgM,EAAazrB,MAAOyrB,EAAaxrB,QAClEuc,EAAM66B,YAAa/oB,EAAQ,QAkI7BztB,KAAK+mD,8BA5HL,SAAwCn8B,GAEvC,GAAKA,EAAa47B,gCAEZ7kD,EAAW,CAEf,MAAM++C,EAAyBjpC,EAAW3V,IAAK8oB,GAE/CoyB,EAAIoI,gBAAiBpI,EAAIgK,iBAAkBtG,EAAuBK,gCAClE/D,EAAIoI,gBAAiBpI,EAAIiK,iBAAkBvG,EAAuBE,oBAElE,MAAMzhD,EAAQyrB,EAAazrB,MACrBC,EAASwrB,EAAaxrB,OAC5B,IAAI8nD,EAAOlK,EAAImK,iBAEVv8B,EAAapB,cAAc09B,GAAQlK,EAAIoK,kBACvCx8B,EAAanB,gBAAgBy9B,GAAQlK,EAAIqK,oBAE9CrK,EAAIsK,gBAAiB,EAAG,EAAGnoD,EAAOC,EAAQ,EAAG,EAAGD,EAAOC,EAAQ8nD,EAAMlK,EAAIrG,SAEzEqG,EAAIoI,gBAAiBpI,EAAIqI,YAAa3E,EAAuBK,kCA0GhE/gD,KAAK00B,iBAnEL,SAA2B9V,EAASyiC,GAE9BziC,GAAWA,EAAQ0L,sBASvB1L,EAAUA,EAAQA,SAInBwiC,EAAcxiC,EAASyiC,IAqDxBrhD,KAAKg1B,mBAjDL,SAA6BpW,EAASyiC,GAEhCziC,GAAWA,EAAQf,0BASvBe,EAAUA,EAAQA,SAMZA,GAAWA,EAAQhB,eACvBxU,MAAMC,QAASuV,EAAQ3e,QAAoC,IAAzB2e,EAAQ3e,MAAMyJ,OAKlDg4C,EAAgB9iC,EAASyiC,GAKzBmB,EAAuB5jC,EAASyiC,IC5uCnC,SAASkG,GAAY9lD,EAAImJ,EAAYlJ,GAEpC,MAAMC,EAAWD,EAAaC,SA2L9B,MAAO,CAAEsgD,QAzLT,SAAkBv5C,GAEjB,IAAI6W,EAEJ,GAAK7W,IAAM8+C,GAAmB,OAAO/lD,EAAGwC,cACxC,GAAKyE,IAAM++C,GAAwB,OAAOhmD,EAAGimD,uBAC7C,GAAKh/C,IAAMi/C,GAAwB,OAAOlmD,EAAGmmD,uBAC7C,GAAKl/C,IAAMm/C,GAAuB,OAAOpmD,EAAGqmD,qBAE5C,GAAKp/C,IAAMq/C,GAAW,OAAOtmD,EAAGsC,KAChC,GAAK2E,IAAMs/C,GAAY,OAAOvmD,EAAGgC,MACjC,GAAKiF,IAAMm8C,GAAoB,OAAOpjD,EAAG8B,eACzC,GAAKmF,IAAMu/C,GAAU,OAAOxmD,EAAGoC,IAC/B,GAAK6E,IAAM67C,GAAkB,OAAO9iD,EAAGkC,aACvC,GAAK+E,IAAMi7C,GAAY,OAAOliD,EAAG0B,MAEjC,GAAKuF,IAAMk7C,GAEV,OAAKjiD,EAAkBF,EAAG09C,YAE1B5/B,EAAY3U,EAAW9I,IAAK,0BAET,OAAdyd,EAEGA,EAAU2oC,eAIV,MAMT,GAAKx/C,IAAMy/C,GAAc,OAAO1mD,EAAG2mD,MACnC,GAAK1/C,IAAM0oB,EAAY,OAAO3vB,EAAG69C,IACjC,GAAK52C,IAAM+oB,EAAa,OAAOhwB,EAAGq1C,KAClC,GAAKpuC,IAAM2/C,GAAkB,OAAO5mD,EAAG6mD,UACvC,GAAK5/C,IAAM6/C,GAAuB,OAAO9mD,EAAG+mD,gBAC5C,GAAK9/C,IAAMk8C,GAAc,OAAOnjD,EAAG4iD,gBACnC,GAAK37C,IAAMo8C,GAAqB,OAAOrjD,EAAGsjD,cAC1C,GAAKr8C,IAAM+/C,GAAY,OAAOhnD,EAAGw9C,IAIjC,GAAKv2C,IAAMggD,GAAmB,OAAOjnD,EAAGknD,YACxC,GAAKjgD,IAAMkgD,GAAW,OAAOnnD,EAAGonD,GAChC,GAAKngD,IAAMogD,GAAkB,OAAOrnD,EAAGsnD,WACvC,GAAKrgD,IAAMsgD,GAAmB,OAAOvnD,EAAGwnD,YACxC,GAAKvgD,IAAMwgD,GAAoB,OAAOznD,EAAG0nD,aAEzC,GAAKzgD,IAAM0gD,IAAwB1gD,IAAM2gD,IACxC3gD,IAAM4gD,IAAyB5gD,IAAM6gD,GAAwB,CAI7D,GAFAhqC,EAAY3U,EAAW9I,IAAK,iCAET,OAAdyd,EASJ,OAAO,KAPP,GAAK7W,IAAM0gD,GAAuB,OAAO7pC,EAAUiqC,6BACnD,GAAK9gD,IAAM2gD,GAAwB,OAAO9pC,EAAUkqC,8BACpD,GAAK/gD,IAAM4gD,GAAwB,OAAO/pC,EAAUmqC,8BACpD,GAAKhhD,IAAM6gD,GAAwB,OAAOhqC,EAAUoqC,8BAUtD,GAAKjhD,IAAMkhD,IAA2BlhD,IAAMmhD,IAC3CnhD,IAAMohD,IAA4BphD,IAAMqhD,GAA2B,CAInE,GAFAxqC,EAAY3U,EAAW9I,IAAK,kCAET,OAAdyd,EASJ,OAAO,KAPP,GAAK7W,IAAMkhD,GAA0B,OAAOrqC,EAAUyqC,gCACtD,GAAKthD,IAAMmhD,GAA0B,OAAOtqC,EAAU0qC,gCACtD,GAAKvhD,IAAMohD,GAA2B,OAAOvqC,EAAU2qC,iCACvD,GAAKxhD,IAAMqhD,GAA2B,OAAOxqC,EAAU4qC,iCAUzD,GAAKzhD,IAAM0hD,GAIV,OAFA7qC,EAAY3U,EAAW9I,IAAK,iCAET,OAAdyd,EAEGA,EAAU8qC,0BAIV,KAMT,IAAK3hD,IAAM4hD,IAAmB5hD,IAAM6hD,MAEnChrC,EAAY3U,EAAW9I,IAAK,gCAET,OAAdyd,GAAqB,CAEzB,GAAK7W,IAAM4hD,GAAkB,OAAO/qC,EAAUirC,qBAC9C,GAAK9hD,IAAM6hD,GAAuB,OAAOhrC,EAAUkrC,0BAMrD,OAAK/hD,IAAMgiD,IAAwBhiD,IAAMiiD,IAAwBjiD,IAAMkiD,IACtEliD,IAAMmiD,IAAwBniD,IAAMoiD,IAAwBpiD,IAAMqiD,IAClEriD,IAAMsiD,IAAwBtiD,IAAMuiD,IAAwBviD,IAAMwiD,IAClExiD,IAAMyiD,IAAyBziD,IAAM0iD,IAAyB1iD,IAAM2iD,IACpE3iD,IAAM4iD,IAA0B5iD,IAAM6iD,IACtC7iD,IAAM8iD,IAAgC9iD,IAAM+iD,IAAgC/iD,IAAMgjD,IAClFhjD,IAAMijD,IAAgCjjD,IAAMkjD,IAAgCljD,IAAMmjD,IAClFnjD,IAAMojD,IAAgCpjD,IAAMqjD,IAAgCrjD,IAAMsjD,IAClFtjD,IAAMujD,IAAiCvjD,IAAMwjD,IAAiCxjD,IAAMyjD,IACpFzjD,IAAM0jD,IAAkC1jD,IAAM2jD,IAE9C9sC,EAAY3U,EAAW9I,IAAK,iCAET,OAAdyd,EAIG7W,EAIA,MAMJA,IAAM4jD,IAEV/sC,EAAY3U,EAAW9I,IAAK,gCAET,OAAdyd,EAIG7W,EAIA,MAMJA,IAAM+7C,GAEL9iD,EAAkBF,EAAG8qD,mBAE1BhtC,EAAY3U,EAAW9I,IAAK,uBAET,OAAdyd,EAEGA,EAAUitC,wBAIV,WAZT,ICzKF,SAASC,GAAa5pD,GAErBkoB,GAAkBhrB,KAAMC,MAExBA,KAAKunC,QAAU1kC,GAAS,GCJzB,SAAS6pD,KAER1sD,KAAK2sD,WAAa,KAClB3sD,KAAK4sD,MAAQ,KACb5sD,KAAK6sD,MAAQ,KCEd,SAASC,GAAcrxC,EAAUha,GAEhC,MAAM8D,EAAQvF,KAEd,IAAIod,EAAU,KAEV2vC,EAAyB,EAEzBC,EAAiB,KACjBC,EAAqB,cAErBC,EAAO,KAEX,MAAMC,EAAc,GACdC,EAAkB,IAAIC,IAItBC,EAAU,IAAIviC,GACpBuiC,EAAQtiC,OAAOonB,OAAQ,GACvBkb,EAAQhkC,SAAW,IAAIF,GAEvB,MAAMmkC,EAAU,IAAIxiC,GACpBwiC,EAAQviC,OAAOonB,OAAQ,GACvBmb,EAAQjkC,SAAW,IAAIF,GAEvB,MAAMme,EAAU,CAAE+lB,EAASC,GAErBC,EAAW,IAAIf,GACrBe,EAASxiC,OAAOonB,OAAQ,GACxBob,EAASxiC,OAAOonB,OAAQ,GAExB,IAAIqb,EAAoB,KACpBC,EAAmB,KAuDvB,SAASC,EAAgBngC,GAExB,MAAMogC,EAAaR,EAAgBtrD,IAAK0rB,EAAMqgC,aAEzCD,GAEJA,EAAWpjC,cAAe,CAAElrB,KAAMkuB,EAAMluB,OAM1C,SAASwuD,IAERV,EAAgBW,SAAS,SAAWH,EAAYC,GAE/CD,EAAWI,WAAYH,MAIxBT,EAAgB5vC,QAIhB/B,EAASwyC,eAAgB,MACzBxyC,EAASqQ,gBAAiBrQ,EAASoQ,mBACnCqiC,EAAUhtD,OAEVqE,EAAM4oD,cAAe,EAErB5oD,EAAMilB,cAAe,CAAElrB,KAAM,eAI9B,SAAS8uD,EAAyB7sD,GAEjCyrD,EAAiBzrD,EAEjB2sD,EAAU5sD,WAAY8b,GACtB8wC,EAAUjtD,QAEVsE,EAAM4oD,cAAe,EAErB5oD,EAAMilB,cAAe,CAAElrB,KAAM,iBAqF9B,SAAS+uD,EAAoB7gC,GAE5B,MAAM8gC,EAAelxC,EAAQkxC,aAI7B,IAAM,IAAI/tC,EAAI,EAAGA,EAAI4sC,EAAYzjD,OAAQ6W,IAExC6sC,EAAgB1qD,IAAK4rD,EAAc/tC,GAAK4sC,EAAa5sC,IAMtD,IAAM,IAAIA,EAAI,EAAGA,EAAIiN,EAAM+gC,QAAQ7kD,OAAQ6W,IAAO,CAEjD,MAAMstC,EAAcrgC,EAAM+gC,QAAShuC,GAC7BqtC,EAAaR,EAAgBtrD,IAAK+rD,GAEnCD,IAEJA,EAAWpjC,cAAe,CAAElrB,KAAM,eAAgBJ,KAAM2uD,IACxDT,EAAgBhrD,OAAQyrD,IAQ1B,IAAM,IAAIttC,EAAI,EAAGA,EAAIiN,EAAMghC,MAAM9kD,OAAQ6W,IAAO,CAE/C,MAAMstC,EAAcrgC,EAAMghC,MAAOjuC,GAC3BqtC,EAAaR,EAAgBtrD,IAAK+rD,GAEnCD,GAEJA,EAAWpjC,cAAe,CAAElrB,KAAM,YAAaJ,KAAM2uD,KAxNxD7tD,KAAKqoB,SAAU,EAEfroB,KAAKmuD,cAAe,EAEpBnuD,KAAKyuD,cAAgB,SAAW/tC,GAE/B,IAAIktC,EAAaT,EAAazsC,GAS9B,YAPoBxgB,IAAf0tD,IAEJA,EAAa,IAAIlB,GACjBS,EAAazsC,GAAUktC,GAIjBA,EAAWc,qBAInB1uD,KAAK2uD,kBAAoB,SAAWjuC,GAEnC,IAAIktC,EAAaT,EAAazsC,GAS9B,YAPoBxgB,IAAf0tD,IAEJA,EAAa,IAAIlB,GACjBS,EAAazsC,GAAUktC,GAIjBA,EAAWgB,gBAInB5uD,KAAK6uD,QAAU,SAAWnuC,GAEzB,IAAIktC,EAAaT,EAAazsC,GAS9B,YAPoBxgB,IAAf0tD,IAEJA,EAAa,IAAIlB,GACjBS,EAAazsC,GAAUktC,GAIjBA,EAAWkB,gBAqDnB9uD,KAAK+uD,0BAA4B,SAAWxtD,GAE3CwrD,EAAyBxrD,EAEpBgE,EAAM4oD,cAQZnuD,KAAKgvD,sBAAwB,SAAWztD,GAEvC0rD,EAAqB1rD,EAEhBgE,EAAM4oD,cAQZnuD,KAAKivD,kBAAoB,WAExB,OAAOjC,GAIRhtD,KAAKqd,WAAa,WAEjB,OAAOD,GAIRpd,KAAKkvD,WAAa,SAAW3tD,GAI5B,GAFA6b,EAAU7b,EAEO,OAAZ6b,EAAmB,CAEvBA,EAAQiR,iBAAkB,SAAUs/B,GACpCvwC,EAAQiR,iBAAkB,cAAes/B,GACzCvwC,EAAQiR,iBAAkB,YAAas/B,GACvCvwC,EAAQiR,iBAAkB,UAAWs/B,GACrCvwC,EAAQiR,iBAAkB,eAAgBs/B,GAC1CvwC,EAAQiR,iBAAkB,aAAcs/B,GACxCvwC,EAAQiR,iBAAkB,MAAOy/B,GAEjC,MAAMtiD,EAAa/J,EAAG0tD,wBAEW,IAA5B3jD,EAAW4jD,cAEf3tD,EAAG4tD,mBAIJ,MAAMC,EAAY,CACjBC,UAAW/jD,EAAW+jD,UACtBjzC,MAAO9Q,EAAW8Q,MAClBrX,MAAOuG,EAAWvG,MAClB8mB,QAASvgB,EAAWugB,QACpBghC,uBAAwBA,GAInByC,EAAY,IAAIC,aAAcryC,EAAS3b,EAAI6tD,GAEjDlyC,EAAQsyC,kBAAmB,CAAEF,UAAWA,IAExCpyC,EAAQuyC,sBAAuB1C,GAAqB2C,KAAMxB,GAI1DhxC,EAAQiR,iBAAkB,qBAAsBggC,KAqDlD,MAAMwB,EAAa,IAAI1oD,GACjB2oD,EAAa,IAAI3oD,GAyDvB,SAAS4oD,EAAc/yC,EAAQyO,GAEd,OAAXA,EAEJzO,EAAOwB,YAAY7S,KAAMqR,EAAOkC,QAIhClC,EAAOwB,YAAYmxB,iBAAkBlkB,EAAOjN,YAAaxB,EAAOkC,QAIjElC,EAAO8K,mBAAmBkoC,WAAYhzC,EAAOwB,aAI9Cxe,KAAKiwD,UAAY,SAAWjzC,GAE3BwwC,EAAS9iC,KAAO6iC,EAAQ7iC,KAAO4iC,EAAQ5iC,KAAO1N,EAAO0N,KACrD8iC,EAAS7iC,IAAM4iC,EAAQ5iC,IAAM2iC,EAAQ3iC,IAAM3N,EAAO2N,IAE7C8iC,IAAsBD,EAAS9iC,MAAQgjC,IAAqBF,EAAS7iC,MAIzEvN,EAAQsyC,kBAAmB,CAC1BQ,UAAW1C,EAAS9iC,KACpBylC,SAAU3C,EAAS7iC,MAGpB8iC,EAAoBD,EAAS9iC,KAC7BgjC,EAAmBF,EAAS7iC,KAI7B,MAAMc,EAASzO,EAAOyO,OAChB8b,EAAUimB,EAASjmB,QAEzBwoB,EAAcvC,EAAU/hC,GAExB,IAAM,IAAIlL,EAAI,EAAGA,EAAIgnB,EAAQ79B,OAAQ6W,IAEpCwvC,EAAcxoB,EAAShnB,GAAKkL,GAM7BzO,EAAOwB,YAAY7S,KAAM6hD,EAAShvC,aAElC,MAAMyxB,EAAWjzB,EAAOizB,SAExB,IAAM,IAAI1vB,EAAI,EAAGyN,EAAIiiB,EAASvmC,OAAQ6W,EAAIyN,EAAGzN,IAE5C0vB,EAAU1vB,GAAImL,mBAAmB,GAkBlC,OAZwB,IAAnB6b,EAAQ79B,OA7Gd,SAAiCsT,EAAQswC,EAASC,GAEjDsC,EAAW3lB,sBAAuBojB,EAAQ9uC,aAC1CsxC,EAAW5lB,sBAAuBqjB,EAAQ/uC,aAE1C,MAAM4xC,EAAMP,EAAWQ,WAAYP,GAE7BQ,EAAQhD,EAAQiD,iBAAiBt8B,SACjCu8B,EAAQjD,EAAQgD,iBAAiBt8B,SAKjCvJ,EAAO4lC,EAAO,KAASA,EAAO,IAAO,GACrC3lC,EAAM2lC,EAAO,KAASA,EAAO,IAAO,GACpCG,GAAWH,EAAO,GAAM,GAAMA,EAAO,GACrCI,GAAcJ,EAAO,GAAM,GAAMA,EAAO,GAExCK,GAAYL,EAAO,GAAM,GAAMA,EAAO,GACtCM,GAAaJ,EAAO,GAAM,GAAMA,EAAO,GACvCK,EAAOnmC,EAAOimC,EACdG,EAAQpmC,EAAOkmC,EAIfG,EAAUX,IAAUO,EAAUC,GAC9BI,EAAUD,GAAYJ,EAG5BrD,EAAQ9uC,YAAYyyC,UAAWj0C,EAAO7E,SAAU6E,EAAOk0C,WAAYl0C,EAAOvD,OAC1EuD,EAAOm0C,WAAYH,GACnBh0C,EAAOo0C,WAAYL,GACnB/zC,EAAOwB,YAAY6yC,QAASr0C,EAAO7E,SAAU6E,EAAOk0C,WAAYl0C,EAAOvD,OACvEuD,EAAO8K,mBAAmBkoC,WAAYhzC,EAAOwB,aAK7C,MAAM8yC,EAAQ5mC,EAAOqmC,EACfQ,EAAO5mC,EAAMomC,EACbS,EAAQX,EAAOG,EACfS,EAASX,GAAUV,EAAMY,GACzBU,EAAOjB,EAAS9lC,EAAM4mC,EAAOD,EAC7BK,EAAUjB,EAAY/lC,EAAM4mC,EAAOD,EAEzCt0C,EAAOuzC,iBAAiBqB,gBAAiBJ,EAAOC,EAAQC,EAAMC,EAASL,EAAOC,GAkE7EM,CAAwBrE,EAAUF,EAASC,GAM3CC,EAAS+C,iBAAiB5kD,KAAM2hD,EAAQiD,kBAIlC/C,GAMR,IAAIsE,EAA2B,KAmE/B,MAAM5D,EAAY,IAAI1tD,GACtB0tD,EAAU9sD,kBAlEV,SAA2BN,EAAMC,GAIhC,GAFAmsD,EAAOnsD,EAAMgxD,cAAe/E,GAEd,OAATE,EAAgB,CAEpB,MAAM8E,EAAQ9E,EAAK8E,MACbxC,EAAYpyC,EAAQ4uB,YAAYwjB,UAEtC/zC,EAASwyC,eAAgBuB,EAAUvK,aAEnC,IAAIgN,GAAsB,EAIrBD,EAAMtoD,SAAW8jD,EAASjmB,QAAQ79B,SAEtC8jD,EAASjmB,QAAQ79B,OAAS,EAC1BuoD,GAAsB,GAIvB,IAAM,IAAI1xC,EAAI,EAAGA,EAAIyxC,EAAMtoD,OAAQ6W,IAAO,CAEzC,MAAM2xC,EAAOF,EAAOzxC,GACd+I,EAAWkmC,EAAUpe,YAAa8gB,GAElCl1C,EAASuqB,EAAShnB,GACxBvD,EAAOkC,OAAOizC,UAAWD,EAAKE,UAAUlzC,QACxClC,EAAOuzC,iBAAiB4B,UAAWD,EAAK3B,kBACxCvzC,EAAOsM,SAAS5mB,IAAK4mB,EAAS/hB,EAAG+hB,EAASjiB,EAAGiiB,EAASnqB,MAAOmqB,EAASlqB,QAE3D,IAANmhB,GAEJitC,EAAStuC,OAAOvT,KAAMqR,EAAOkC,SAID,IAAxB+yC,GAEJzE,EAASjmB,QAAQ//B,KAAMwV,IAU1B,MAAMsxC,EAAelxC,EAAQkxC,aAE7B,IAAM,IAAI/tC,EAAI,EAAGA,EAAI4sC,EAAYzjD,OAAQ6W,IAAO,CAE/C,MAAMqtC,EAAaT,EAAa5sC,GAC1BstC,EAAcS,EAAc/tC,GAElCqtC,EAAWvrD,OAAQwrD,EAAa9sD,EAAOisD,GAInC8E,GAA2BA,EAA0BhxD,EAAMC,MAOjEf,KAAKoB,iBAAmB,SAAWC,GAElCywD,EAA2BzwD,GAI5BrB,KAAK0jB,QAAU,aCjehB,SAAS2uC,GAAgB56C,GAyGxB,SAAS66C,EAAuB9oD,EAAUmV,GAEzCnV,EAASmL,QAAQpT,MAAQod,EAAShK,QAE7BgK,EAASzT,OAEb1B,EAASiL,QAAQlT,MAAMoK,KAAMgT,EAASzT,OAIlCyT,EAAS3E,UAEbxQ,EAASwQ,SAASzY,MAAMoK,KAAMgT,EAAS3E,UAAWiwB,eAAgBtrB,EAAS4zC,mBAIvE5zC,EAAS/J,MAEbpL,EAASoL,IAAIrT,MAAQod,EAAS/J,KAI1B+J,EAAS3J,WAEbxL,EAASwL,SAASzT,MAAQod,EAAS3J,UAI/B2J,EAASzJ,cAEb1L,EAAS0L,YAAY3T,MAAQod,EAASzJ,aAIvC,MAAME,EAASqC,EAAW3V,IAAK6c,GAAWvJ,OAE1C,GAAKA,EAAS,CAEb5L,EAAS4L,OAAO7T,MAAQ6T,EAExB5L,EAAS6L,WAAW9T,MAAQ6T,EAAOwI,eAAkB,EAAI,EAEzDpU,EAAS8L,aAAa/T,MAAQod,EAASrJ,aACvC9L,EAAS+L,gBAAgBhU,MAAQod,EAASpJ,gBAE1C,MAAMC,EAAciC,EAAW3V,IAAKsT,GAASspC,mBAExBx+C,IAAhBsV,IAEJhM,EAASgM,YAAYjU,MAAQiU,GAkC/B,IAAIg9C,EA2EAC,EAvGC9zC,EAAS9I,WAEbrM,EAASqM,SAAStU,MAAQod,EAAS9I,SACnCrM,EAASsM,kBAAkBvU,MAAQod,EAAS7I,mBAIxC6I,EAASjJ,QAEblM,EAASkM,MAAMnU,MAAQod,EAASjJ,MAChClM,EAASmM,eAAepU,MAAQod,EAAShJ,gBAoBrCgJ,EAAS/J,IAEb49C,EAAa7zC,EAAS/J,IAEX+J,EAASzJ,YAEpBs9C,EAAa7zC,EAASzJ,YAEXyJ,EAASlI,gBAEpB+7C,EAAa7zC,EAASlI,gBAEXkI,EAAStI,UAEpBm8C,EAAa7zC,EAAStI,UAEXsI,EAASzI,QAEpBs8C,EAAa7zC,EAASzI,QAEXyI,EAAS9H,aAEpB27C,EAAa7zC,EAAS9H,aAEX8H,EAAS5H,aAEpBy7C,EAAa7zC,EAAS5H,aAEX4H,EAAS3J,SAEpBw9C,EAAa7zC,EAAS3J,SAEX2J,EAAS3I,YAEpBw8C,EAAa7zC,EAAS3I,YAEX2I,EAASkL,aAEpB2oC,EAAa7zC,EAASkL,aAEXlL,EAASsL,mBAEpBuoC,EAAa7zC,EAASsL,mBAEXtL,EAASoL,wBAEpByoC,EAAa7zC,EAASoL,4BAIH7pB,IAAfsyD,IAGCA,EAAWloC,sBAEfkoC,EAAaA,EAAW5zC,UAIY,IAAhC4zC,EAAWxzC,kBAEfwzC,EAAWvzC,eAIZzV,EAASqL,YAAYtT,MAAMoK,KAAM6mD,EAAWtzC,SAUxCP,EAASjJ,MAEb+8C,EAAc9zC,EAASjJ,MAEZiJ,EAAS9I,WAEpB48C,EAAc9zC,EAAS9I,eAIH3V,IAAhBuyD,IAGCA,EAAYnoC,sBAEhBmoC,EAAcA,EAAY7zC,UAIW,IAAjC6zC,EAAYzzC,kBAEhByzC,EAAYxzC,eAIbzV,EAASuL,aAAaxT,MAAMoK,KAAM8mD,EAAYvzC,SA6MhD,SAASwzC,EAAyBlpD,EAAUmV,GAE3CnV,EAAS6Q,UAAU9Y,MAAQod,EAAStE,UACpC7Q,EAAS8Q,UAAU/Y,MAAQod,EAASrE,UAE/BqE,EAAS9H,eAEbrN,EAASqN,aAAatV,MAAQod,EAAS9H,cAInC8H,EAAS5H,eAEbvN,EAASuN,aAAaxV,MAAQod,EAAS5H,cAInC4H,EAAS3I,cAEbxM,EAASwM,YAAYzU,MAAQod,EAAS3I,aAIlC2I,EAASzI,UAEb1M,EAAS0M,QAAQ3U,MAAQod,EAASzI,QAClC1M,EAAS2M,UAAU5U,MAAQod,EAASxI,UAC/BwI,EAASV,OAASC,IAAW1U,EAAS2M,UAAU5U,QAAW,IAI5Dod,EAAStI,YAEb7M,EAAS6M,UAAU9U,MAAQod,EAAStI,UACpC7M,EAAS8M,YAAY/U,MAAMoK,KAAMgT,EAASrI,aACrCqI,EAASV,OAASC,GAAW1U,EAAS8M,YAAY/U,MAAMoxD,UAIzDh0C,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBAI7Bc,EAAW3V,IAAK6c,GAAWvJ,SAKzC5L,EAAS+Q,gBAAgBhZ,MAAQod,EAASpE,iBA6I5C,MAAO,CACNq4C,mBA/qBD,SAA6BppD,EAAUc,GAEtCd,EAAS6N,SAAS9V,MAAMoK,KAAMrB,EAAIY,OAE7BZ,EAAIuoD,OAERrpD,EAAS2N,QAAQ5V,MAAQ+I,EAAIogB,KAC7BlhB,EAAS4N,OAAO7V,MAAQ+I,EAAIqgB,KAEjBrgB,EAAI26B,YAEfz7B,EAAS0N,WAAW3V,MAAQ+I,EAAIwoD,UAqqBjCC,wBA/pBD,SAAkCvpD,EAAUmV,EAAUq0C,EAAY5zD,GAE5Duf,EAASs0C,oBAEbX,EAAuB9oD,EAAUmV,GAEtBA,EAASu0C,uBAEpBZ,EAAuB9oD,EAAUmV,GA6XnC,SAAiCnV,EAAUmV,GAErCA,EAAS3I,cAEbxM,EAASwM,YAAYzU,MAAQod,EAAS3I,aAhYtCm9C,CAAwB3pD,EAAUmV,IAEvBA,EAASy0C,oBAEpBd,EAAuB9oD,EAAUmV,GAuanC,SAA8BnV,EAAUmV,GAElCA,EAAS1H,cAEbzN,EAASyN,YAAY1V,MAAQod,EAAS1H,aAIlC0H,EAAS3I,cAEbxM,EAASwM,YAAYzU,MAAQod,EAAS3I,aAIlC2I,EAASzI,UAEb1M,EAAS0M,QAAQ3U,MAAQod,EAASzI,QAClC1M,EAAS2M,UAAU5U,MAAQod,EAASxI,UAC/BwI,EAASV,OAASC,IAAW1U,EAAS2M,UAAU5U,QAAW,IAI5Dod,EAAStI,YAEb7M,EAAS6M,UAAU9U,MAAQod,EAAStI,UACpC7M,EAAS8M,YAAY/U,MAAMoK,KAAMgT,EAASrI,aACrCqI,EAASV,OAASC,GAAW1U,EAAS8M,YAAY/U,MAAMoxD,UAIzDh0C,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBAxc3C08C,CAAqB7pD,EAAUmV,IAEpBA,EAAS20C,qBAEpBhB,EAAuB9oD,EAAUmV,GA6XnC,SAA+BnV,EAAUmV,GAExCnV,EAAS0Q,SAAS3Y,MAAMoK,KAAMgT,EAASzE,UACvC1Q,EAAS2Q,UAAU5Y,MAAQiE,KAAKs4C,IAAKn/B,EAASxE,UAAW,MAEpDwE,EAAS3I,cAEbxM,EAASwM,YAAYzU,MAAQod,EAAS3I,aAIlC2I,EAASzI,UAEb1M,EAAS0M,QAAQ3U,MAAQod,EAASzI,QAClC1M,EAAS2M,UAAU5U,MAAQod,EAASxI,UAC/BwI,EAASV,OAASC,IAAW1U,EAAS2M,UAAU5U,QAAW,IAI5Dod,EAAStI,YAEb7M,EAAS6M,UAAU9U,MAAQod,EAAStI,UACpC7M,EAAS8M,YAAY/U,MAAMoK,KAAMgT,EAASrI,aACrCqI,EAASV,OAASC,GAAW1U,EAAS8M,YAAY/U,MAAMoxD,UAIzDh0C,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBA3Z3C48C,CAAsB/pD,EAAUmV,IAErBA,EAAS2lB,wBAEpBguB,EAAuB9oD,EAAUmV,GAE5BA,EAAS60C,uBA6fhB,SAAkChqD,EAAUmV,GAE3C+zC,EAAyBlpD,EAAUmV,GAEnCnV,EAAS8L,aAAa/T,MAAQod,EAASrJ,aAEvC9L,EAASogB,UAAUroB,MAAQod,EAASiL,UACpCpgB,EAASsgB,mBAAmBvoB,MAAQod,EAASmL,mBACxCnL,EAASuL,OAAQ1gB,EAAS0gB,MAAM3oB,MAAMoK,KAAMgT,EAASuL,OAErDvL,EAASkL,eAEbrgB,EAASqgB,aAAatoB,MAAQod,EAASkL,cAInClL,EAASoL,wBAEbvgB,EAASugB,sBAAsBxoB,MAAQod,EAASoL,uBAI5CpL,EAASsL,qBAEbzgB,EAASwgB,qBAAqBzoB,MAAMoK,KAAMgT,EAASqL,sBACnDxgB,EAASygB,mBAAmB1oB,MAAQod,EAASsL,mBAExCtL,EAASV,OAASC,GAEtB1U,EAASwgB,qBAAqBzoB,MAAMoxD,UAMtCnpD,EAAS2gB,aAAa5oB,MAAQod,EAASwL,aAElCxL,EAASyL,kBAEb5gB,EAAS4gB,gBAAgB7oB,MAAQod,EAASyL,iBAliBzCqpC,CAAyBjqD,EAAUmV,GAInC+zC,EAAyBlpD,EAAUmV,IAIzBA,EAAS+0C,sBAEpBpB,EAAuB9oD,EAAUmV,GA8hBnC,SAAgCnV,EAAUmV,GAEpCA,EAASlE,SAEbjR,EAASiR,OAAOlZ,MAAQod,EAASlE,QAI7BkE,EAASzI,UAEb1M,EAAS0M,QAAQ3U,MAAQod,EAASzI,QAClC1M,EAAS2M,UAAU5U,MAAQod,EAASxI,UAC/BwI,EAASV,OAASC,IAAW1U,EAAS2M,UAAU5U,QAAW,IAI5Dod,EAAStI,YAEb7M,EAAS6M,UAAU9U,MAAQod,EAAStI,UACpC7M,EAAS8M,YAAY/U,MAAMoK,KAAMgT,EAASrI,aACrCqI,EAASV,OAASC,GAAW1U,EAAS8M,YAAY/U,MAAMoxD,UAIzDh0C,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBAzjB3Cg9C,CAAuBnqD,EAAUmV,IAEtBA,EAASutB,qBAEpBomB,EAAuB9oD,EAAUmV,GA2jBnC,SAA+BnV,EAAUmV,GAEnCA,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBAhkB3Ci9C,CAAsBpqD,EAAUmV,IAErBA,EAASwtB,wBAEpBmmB,EAAuB9oD,EAAUmV,GAkkBnC,SAAkCnV,EAAUmV,GAEtCA,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBAI5CnN,EAAS4R,kBAAkB7Z,MAAMoK,KAAMgT,EAASvD,mBAChD5R,EAAS6R,aAAa9Z,MAAQod,EAAStD,aACvC7R,EAAS8R,YAAY/Z,MAAQod,EAASrD,YA7kBrCu4C,CAAyBrqD,EAAUmV,IAExBA,EAASm1C,sBAEpBxB,EAAuB9oD,EAAUmV,GA6kBnC,SAAgCnV,EAAUmV,GAEpCA,EAASzI,UAEb1M,EAAS0M,QAAQ3U,MAAQod,EAASzI,QAClC1M,EAAS2M,UAAU5U,MAAQod,EAASxI,UAC/BwI,EAASV,OAASC,IAAW1U,EAAS2M,UAAU5U,QAAW,IAI5Dod,EAAStI,YAEb7M,EAAS6M,UAAU9U,MAAQod,EAAStI,UACpC7M,EAAS8M,YAAY/U,MAAMoK,KAAMgT,EAASrI,aACrCqI,EAASV,OAASC,GAAW1U,EAAS8M,YAAY/U,MAAMoxD,UAIzDh0C,EAASlI,kBAEbjN,EAASiN,gBAAgBlV,MAAQod,EAASlI,gBAC1CjN,EAASkN,kBAAkBnV,MAAQod,EAASjI,kBAC5ClN,EAASmN,iBAAiBpV,MAAQod,EAAShI,kBAlmB3Co9C,CAAuBvqD,EAAUmV,IAEtBA,EAASq1C,qBA8NtB,SAA8BxqD,EAAUmV,GAEvCnV,EAASiL,QAAQlT,MAAMoK,KAAMgT,EAASzT,OACtC1B,EAASmL,QAAQpT,MAAQod,EAAShK,QA/NjCs/C,CAAqBzqD,EAAUmV,GAE1BA,EAASu1C,sBAiOhB,SAA8B1qD,EAAUmV,GAEvCnV,EAASmR,SAASpZ,MAAQod,EAAShE,SACnCnR,EAASoR,UAAUrZ,MAAQod,EAAShE,SAAWgE,EAASw1C,QACxD3qD,EAASiQ,MAAMlY,MAAQod,EAASlF,MAnO9B26C,CAAqB5qD,EAAUmV,IAIrBA,EAAS01C,iBAmOtB,SAAgC7qD,EAAUmV,EAAUq0C,EAAY5zD,GAE/DoK,EAASiL,QAAQlT,MAAMoK,KAAMgT,EAASzT,OACtC1B,EAASmL,QAAQpT,MAAQod,EAAShK,QAClCnL,EAASgQ,KAAKjY,MAAQod,EAASnF,KAAOw5C,EACtCxpD,EAASiQ,MAAMlY,MAAiB,GAATnC,EAElBuf,EAAS/J,MAEbpL,EAASoL,IAAIrT,MAAQod,EAAS/J,KAI1B+J,EAAS3J,WAEbxL,EAASwL,SAASzT,MAAQod,EAAS3J,UAQpC,IAAIw9C,EAEC7zC,EAAS/J,IAEb49C,EAAa7zC,EAAS/J,IAEX+J,EAAS3J,WAEpBw9C,EAAa7zC,EAAS3J,eAIH9U,IAAfsyD,KAEiC,IAAhCA,EAAWxzC,kBAEfwzC,EAAWvzC,eAIZzV,EAASqL,YAAYtT,MAAMoK,KAAM6mD,EAAWtzC,SA5Q5Co1C,CAAuB9qD,EAAUmV,EAAUq0C,EAAY5zD,GAE5Cuf,EAAS41C,iBAgRtB,SAAiC/qD,EAAUmV,GAE1CnV,EAASiL,QAAQlT,MAAMoK,KAAMgT,EAASzT,OACtC1B,EAASmL,QAAQpT,MAAQod,EAAShK,QAClCnL,EAASoQ,SAASrY,MAAQod,EAAS/E,SAE9B+E,EAAS/J,MAEbpL,EAASoL,IAAIrT,MAAQod,EAAS/J,KAI1B+J,EAAS3J,WAEbxL,EAASwL,SAASzT,MAAQod,EAAS3J,UAQpC,IAAIw9C,EAEC7zC,EAAS/J,IAEb49C,EAAa7zC,EAAS/J,IAEX+J,EAAS3J,WAEpBw9C,EAAa7zC,EAAS3J,eAIH9U,IAAfsyD,KAEiC,IAAhCA,EAAWxzC,kBAEfwzC,EAAWvzC,eAIZzV,EAASqL,YAAYtT,MAAMoK,KAAM6mD,EAAWtzC,SAxT5Cs1C,CAAwBhrD,EAAUmV,GAEvBA,EAAS81C,kBAEpBjrD,EAAS0B,MAAM3J,MAAMoK,KAAMgT,EAASzT,OACpC1B,EAASmL,QAAQpT,MAAQod,EAAShK,SAEvBgK,EAASjT,mBAEpBiT,EAASrT,oBAAqB,KC5DjC,SAASopD,GAAepvD,GAIvB,MAAM63C,OAAgCj9C,KAFtCoF,EAAaA,GAAc,IAEA84C,OAAuB94C,EAAW84C,OAASZ,SAASC,gBAAiB,+BAAgC,UAC/HkX,OAAkCz0D,IAAvBoF,EAAW7E,QAAwB6E,EAAW7E,QAAU,KAEnEm0D,OAA8B10D,IAArBoF,EAAWgX,OAAsBhX,EAAWgX,MACrDu4C,OAA8B30D,IAArBoF,EAAWL,OAAsBK,EAAWL,MACrD6vD,OAAkC50D,IAAvBoF,EAAWymB,SAAwBzmB,EAAWymB,QACzDgpC,OAAsC70D,IAAzBoF,EAAWiqD,WAA0BjqD,EAAWiqD,UAC7DyF,OAAwD90D,IAAlCoF,EAAWuW,oBAAmCvW,EAAWuW,mBAC/Eo5C,OAA8D/0D,IAArCoF,EAAW4vD,uBAAsC5vD,EAAW4vD,sBACrFC,OAAkDj1D,IAA/BoF,EAAW8vD,gBAAgC9vD,EAAW8vD,gBAAkB,UAC3FC,OAA4En1D,IAA5CoF,EAAWgwD,8BAA6ChwD,EAAWgwD,6BAEpG,IAAI3oC,EAAoB,KACpBE,EAAqB,KAIzB7sB,KAAKu1D,WAAapY,EAGlBn9C,KAAK4hC,MAAQ,CAMZC,mBAAmB,GAKpB7hC,KAAKud,WAAY,EACjBvd,KAAKyd,gBAAiB,EACtBzd,KAAK0d,gBAAiB,EACtB1d,KAAK2d,kBAAmB,EAIxB3d,KAAKw1D,aAAc,EAInBx1D,KAAK0oB,eAAiB,GACtB1oB,KAAK6mB,sBAAuB,EAI5B7mB,KAAKi+B,YAAc,EACnBj+B,KAAKkhC,eAAiBlI,EAItBh5B,KAAK0gC,yBAA0B,EAI/B1gC,KAAK6e,YAAc8hB,EACnB3gC,KAAKy1D,oBAAsB,EAI3Bz1D,KAAKklC,gBAAkB,EACvBllC,KAAKmlC,gBAAkB,EAIvB,MAAMuwB,EAAQ11D,KAEd,IAAI21D,GAAiB,EAIjBC,EAAe,KAEfC,EAAyB,EACzBC,EAA4B,EAC5BC,EAAuB,KACvBC,EAAsB,KACtBC,GAAuB,EAEvBC,EAAiB,KACjBC,EAAsB,KAE1B,MAAMC,EAAmB,IAAIhtC,GACvBitC,EAAkB,IAAIjtC,GAC5B,IAAIktC,EAAsB,KAItBC,EAASpZ,EAAQh+C,MACjBq3D,EAAUrZ,EAAQ/9C,OAElBq3D,EAAc,EACdC,EAAc,KACdC,EAAmB,KAEvB,MAAMhqB,EAAY,IAAIvjB,GAAS,EAAG,EAAGmtC,EAAQC,GACvCI,EAAW,IAAIxtC,GAAS,EAAG,EAAGmtC,EAAQC,GAC5C,IAAIK,GAAe,EAInB,MAAMtqB,EAAW,IAAIC,GAIrB,IAAIsqB,GAAmB,EACnBC,GAAwB,EAI5B,MAAMC,EAAoB,IAAIztB,GAExB0tB,EAAW,IAAI9vD,GAEf+vD,EAAc,CAAEp8C,WAAY,KAAMxQ,IAAK,KAAM+5B,YAAa,KAAM8yB,iBAAkB,KAAMj6C,SAAS,GAEvG,SAASk6C,IAER,OAAgC,OAAzBrB,EAAgCU,EAAc,EAMtD,IAiFI7rD,EAAYlJ,EAAcia,EAAOqI,EACjCvM,EAAY0X,EAAUzT,EAAUlQ,EAAY6hB,EAAYzR,GACxDy7C,GAAcC,GAAWC,GAAaxrB,GAAcvhC,GAEpDsQ,GAAY08C,GAAcC,GAAgBC,GAE1Cza,GAAOx9B,GAvFPu9B,GAAM2X,EAEV,SAAS93B,GAAY86B,EAAcC,GAElC,IAAM,IAAIr3C,EAAI,EAAGA,EAAIo3C,EAAajuD,OAAQ6W,IAAO,CAEhD,MAAMs3C,EAAcF,EAAcp3C,GAC5B9f,EAAU08C,EAAQtgB,WAAYg7B,EAAaD,GACjD,GAAiB,OAAZn3D,EAAmB,OAAOA,EAIhC,OAAO,KAIR,IAEC,MAAMm3D,EAAoB,CACzBt7C,MAAOs4C,EACP3vD,MAAO4vD,EACP9oC,QAAS+oC,EACTvF,UAAWwF,EACXl5C,mBAAoBm5C,EACpBE,sBAAuBD,EACvBG,gBAAiBD,EACjBG,6BAA8BD,GAQ/B,GAHAlY,EAAQ9uB,iBAAkB,mBAAoBypC,IAAe,GAC7D3a,EAAQ9uB,iBAAkB,uBAAwB0pC,IAAkB,GAEvD,OAAR/a,GAAe,CAEnB,MAAM2a,EAAe,CAAE,SAAU,QAAS,sBAU1C,IARgC,IAA3BjC,EAAMsC,kBAEVL,EAAaM,QAIdjb,GAAMngB,GAAY86B,EAAcC,GAEnB,OAAR5a,GAEJ,MAAKngB,GAAY86B,GAEV,IAAI37B,MAAO,+DAIX,IAAIA,MAAO,sCAUkB97B,IAAjC88C,GAAIr4B,2BAERq4B,GAAIr4B,yBAA2B,WAE9B,MAAO,CAAEuzC,SAAY,EAAGC,SAAY,EAAGzzC,UAAa,KAMrD,MAAQm4B,GAGT,MAAMA,EAYP,SAASub,KAERxtD,EAAa,IAAIsiB,GAAiB8vB,IAElCt7C,EAAe,IAAI6iB,GAAmBy4B,GAAKpyC,EAAYtF,IAExB,IAA1B5D,EAAaC,WAEjBiJ,EAAW9I,IAAK,uBAChB8I,EAAW9I,IAAK,qBAChB8I,EAAW9I,IAAK,0BAChB8I,EAAW9I,IAAK,iCAChB8I,EAAW9I,IAAK,4BAChB8I,EAAW9I,IAAK,0BAChB8I,EAAW9I,IAAK,2BAChB8I,EAAW9I,IAAK,2BAIjB8I,EAAW9I,IAAK,4BAEhBm7C,GAAQ,IAAIsK,GAAYvK,GAAKpyC,EAAYlJ,GAEzCia,EAAQ,IAAI41B,GAAYyL,GAAKpyC,EAAYlJ,GACzCia,EAAMwN,QAASktC,EAAgB1qD,KAAMirD,GAAW3sB,eAAgBwsB,GAAchxD,SAC9EkW,EAAM2N,SAAU8sC,EAAiBzqD,KAAMghC,GAAY1C,eAAgBwsB,GAAchxD,SAEjFue,EAAO,IAAI+K,GAAWiuB,IACtBvlC,EAAa,IAAI2uB,GACjBjX,EAAW,IAAI4tB,GAAeC,GAAKpyC,EAAY+Q,EAAOlE,EAAY/V,EAAcu7C,GAAOj5B,GACvFtI,EAAW,IAAI0Q,GAAespC,GAC9BlqD,EAAa,IAAIhK,GAAiBw7C,GAAKt7C,GACvC+d,GAAgB,IAAIN,GAAoB69B,GAAKpyC,EAAYY,EAAY9J,GACrE2rB,EAAa,IAAID,GAAiB4vB,GAAKxxC,EAAYwY,EAAMvE,IACzD7D,GAAU,IAAImV,GAAcisB,GAAK3vB,EAAY7hB,EAAYwY,GACzDwzC,GAAe,IAAIznC,GAAmBitB,IACtCxyC,GAAW,IAAIkc,GAAejP,GAC9B4/C,GAAe,IAAIr0B,GAAe0yB,EAAOh6C,EAAU9Q,EAAYlJ,EAAc+d,GAAejV,IAC5F8sD,GAAY,IAAIjF,GAAgB56C,GAChC8/C,GAAc,IAAIlwB,GAAkB5vB,GACpCs0B,GAAe,IAAID,GACnBhxB,GAAa,IAAIU,GAAiBk6C,EAAOh6C,EAAUC,EAAOC,GAASo5C,GAEnEyC,GAAiB,IAAI1zC,GAAqBi5B,GAAKpyC,EAAYoZ,EAAMtiB,GACjEg2D,GAAwB,IAAI7oC,GAA4BmuB,GAAKpyC,EAAYoZ,EAAMtiB,GAE/EsiB,EAAKoL,SAAWioC,GAAajoC,SAE7BsmC,EAAMh0D,aAAeA,EACrBg0D,EAAM9qD,WAAaA,EACnB8qD,EAAMj+C,WAAaA,EACnBi+C,EAAM6B,YAAcA,GACpB7B,EAAM/5C,MAAQA,EACd+5C,EAAM1xC,KAAOA,EAIdo0C,KAIA,MAAMj7C,GAAK,IAAI2vC,GAAc4I,EAAO1Y,IAEpCh9C,KAAKmd,GAAKA,GAIV,MAAMsoB,GAAY,IAAI2G,GAAgBspB,EAAO95C,GAASla,EAAa8jB,gBAoRnE,SAASsyC,GAAetqC,GAEvBA,EAAM6qC,iBAIN1C,GAAiB,EAIlB,SAASoC,KAIRpC,GAAiB,EAEjByC,KAID,SAASE,GAAmB9qC,GAE3B,MAAM7O,EAAW6O,EAAMC,OAEvB9O,EAASgP,oBAAqB,UAAW2qC,IAQ1C,SAA6B35C,GAE5B45C,GAAiC55C,GAEjClH,EAAWxV,OAAQ0c,GAVnB65C,CAAoB75C,GAerB,SAAS45C,GAAiC55C,GAEzC,MAAM85C,EAAchhD,EAAW3V,IAAK6c,GAAW6B,aAE1BtgB,IAAhBu4D,GAEJpB,GAAapxB,eAAgBwyB,GAjU/Bz4D,KAAKylC,UAAYA,GAIjBzlC,KAAK68B,WAAa,WAEjB,OAAOmgB,IAIRh9C,KAAKmvD,qBAAuB,WAE3B,OAAOnS,GAAImS,wBAIZnvD,KAAK04D,iBAAmB,WAEvB,MAAMn5C,EAAY3U,EAAW9I,IAAK,sBAC7Byd,GAAYA,EAAUo5C,eAI5B34D,KAAK44D,oBAAsB,WAE1B,MAAMr5C,EAAY3U,EAAW9I,IAAK,sBAC7Byd,GAAYA,EAAUs5C,kBAI5B74D,KAAK84D,cAAgB,WAEpB,OAAOrC,GAIRz2D,KAAK+4D,cAAgB,SAAWx3D,QAEhBrB,IAAVqB,IAELk1D,EAAcl1D,EAEdvB,KAAKuqB,QAASgsC,EAAQC,GAAS,KAIhCx2D,KAAKg5D,QAAU,SAAWvrC,GAUzB,YARgBvtB,IAAXutB,IAIJA,EAAS,IAAIlX,IAIPkX,EAAO/qB,IAAK6zD,EAAQC,IAI5Bx2D,KAAKuqB,QAAU,SAAWprB,EAAOC,EAAQ65D,GAEnC97C,GAAGgxC,eAORoI,EAASp3D,EACTq3D,EAAUp3D,EAEV+9C,EAAQh+C,MAAQqG,KAAKC,MAAOtG,EAAQs3D,GACpCtZ,EAAQ/9C,OAASoG,KAAKC,MAAOrG,EAASq3D,IAEjB,IAAhBwC,IAEJ9b,EAAQ+b,MAAM/5D,MAAQA,EAAQ,KAC9Bg+C,EAAQ+b,MAAM95D,OAASA,EAAS,MAIjCY,KAAKm5D,YAAa,EAAG,EAAGh6D,EAAOC,KAIhCY,KAAKo5D,qBAAuB,SAAW3rC,GAUtC,YARgBvtB,IAAXutB,IAIJA,EAAS,IAAIlX,IAIPkX,EAAO/qB,IAAK6zD,EAASE,EAAaD,EAAUC,GAAchxD,SAIlEzF,KAAKq5D,qBAAuB,SAAWl6D,EAAOC,EAAQ4zD,GAErDuD,EAASp3D,EACTq3D,EAAUp3D,EAEVq3D,EAAczD,EAEd7V,EAAQh+C,MAAQqG,KAAKC,MAAOtG,EAAQ6zD,GACpC7V,EAAQ/9C,OAASoG,KAAKC,MAAOrG,EAAS4zD,GAEtChzD,KAAKm5D,YAAa,EAAG,EAAGh6D,EAAOC,IAIhCY,KAAKs5D,mBAAqB,SAAW7rC,GAUpC,YARgBvtB,IAAXutB,IAIJA,EAAS,IAAIrE,IAIPqE,EAAO9hB,KAAMyqD,IAIrBp2D,KAAKoxC,YAAc,SAAW3jB,GAE7B,OAAOA,EAAO9hB,KAAMghC,IAIrB3sC,KAAKm5D,YAAc,SAAW5xD,EAAGF,EAAGlI,EAAOC,GAErCmI,EAAE0B,UAEN0jC,EAAUjqC,IAAK6E,EAAEA,EAAGA,EAAEF,EAAGE,EAAEE,EAAGF,EAAEpB,GAIhCwmC,EAAUjqC,IAAK6E,EAAGF,EAAGlI,EAAOC,GAI7Buc,EAAM2N,SAAU8sC,EAAiBzqD,KAAMghC,GAAY1C,eAAgBwsB,GAAchxD,UAIlFzF,KAAKu5D,WAAa,SAAW9rC,GAE5B,OAAOA,EAAO9hB,KAAMirD,IAIrB52D,KAAKw5D,WAAa,SAAWjyD,EAAGF,EAAGlI,EAAOC,GAEpCmI,EAAE0B,UAEN2tD,EAASl0D,IAAK6E,EAAEA,EAAGA,EAAEF,EAAGE,EAAEE,EAAGF,EAAEpB,GAI/BywD,EAASl0D,IAAK6E,EAAGF,EAAGlI,EAAOC,GAI5Buc,EAAMwN,QAASktC,EAAgB1qD,KAAMirD,GAAW3sB,eAAgBwsB,GAAchxD,UAI/EzF,KAAKy5D,eAAiB,WAErB,OAAO5C,GAIR72D,KAAK0wC,eAAiB,SAAWgpB,GAEhC/9C,EAAM+0B,eAAgBmmB,EAAe6C,IAItC15D,KAAK25D,cAAgB,SAAWC,GAE/BlD,EAAckD,GAIf55D,KAAK65D,mBAAqB,SAAWD,GAEpCjD,EAAmBiD,GAMpB55D,KAAKyc,cAAgB,WAEpB,OAAO3B,GAAW2B,iBAInBzc,KAAK0c,cAAgB,WAEpB5B,GAAW4B,cAAcigC,MAAO7hC,GAAY8hC,YAI7C58C,KAAK2c,cAAgB,WAEpB,OAAO7B,GAAW6B,iBAInB3c,KAAK4c,cAAgB,WAEpB9B,GAAW8B,cAAc+/B,MAAO7hC,GAAY8hC,YAI7C58C,KAAKwd,MAAQ,SAAWtS,EAAOjG,EAAO8mB,GAErC,IAAI+tC,EAAO,QAEI55D,IAAVgL,GAAuBA,KAAQ4uD,GAAQ9c,GAAImK,wBACjCjnD,IAAV+E,GAAuBA,KAAQ60D,GAAQ9c,GAAIoK,wBAC/BlnD,IAAZ6rB,GAAyBA,KAAU+tC,GAAQ9c,GAAIqK,oBAEpDrK,GAAIx/B,MAAOs8C,IAIZ95D,KAAK8b,WAAa,WAEjB9b,KAAKwd,OAAO,GAAM,GAAO,IAI1Bxd,KAAK0zC,WAAa,WAEjB1zC,KAAKwd,OAAO,GAAO,GAAM,IAI1Bxd,KAAK60C,aAAe,WAEnB70C,KAAKwd,OAAO,GAAO,GAAO,IAM3Bxd,KAAK0jB,QAAU,WAEdy5B,EAAQxvB,oBAAqB,mBAAoBmqC,IAAe,GAChE3a,EAAQxvB,oBAAqB,uBAAwBoqC,IAAkB,GAEvER,GAAY7zC,UACZqoB,GAAaroB,UACbjM,EAAWiM,UACXhI,EAASgI,UACT9H,GAAQ8H,UACRjE,GAAciE,UAEdvG,GAAGuG,UAEHwqC,GAAUhtD,QAuEXlB,KAAK+5D,sBAAwB,SAAWt5C,EAAQD,GAE/Cf,GAAckB,iBAEd,MAAM/e,EAAU6V,EAAW3V,IAAK2e,GAE3BA,EAAOu5C,eAAkBp4D,EAAQuW,WAAWvW,EAAQuW,SAAW6kC,GAAIj6C,gBACnE0d,EAAOw5C,aAAgBr4D,EAAQiZ,SAASjZ,EAAQiZ,OAASmiC,GAAIj6C,gBAC7D0d,EAAOy5C,SAAYt4D,EAAQuJ,KAAKvJ,EAAQuJ,GAAK6xC,GAAIj6C,gBACjD0d,EAAO05C,YAAev4D,EAAQsJ,QAAQtJ,EAAQsJ,MAAQ8xC,GAAIj6C,gBAE/D,MAAM2f,EAAoBlC,EAAQmC,gBAE7BlC,EAAOu5C,eAEXhd,GAAIh6C,WAAYg6C,GAAI/5B,aAAcrhB,EAAQuW,UAC1C6kC,GAAI/5C,WAAY+5C,GAAI/5B,aAAcxC,EAAO25C,cAAepd,GAAIqd,cAE5D56C,GAAcoB,gBAAiB6B,EAAkBvK,UACjD6kC,GAAI77B,oBAAqBuB,EAAkBvK,SAAU,EAAG6kC,GAAI75C,OAAO,EAAO,EAAG,IAIzEsd,EAAOw5C,aAEXjd,GAAIh6C,WAAYg6C,GAAI/5B,aAAcrhB,EAAQiZ,QAC1CmiC,GAAI/5C,WAAY+5C,GAAI/5B,aAAcxC,EAAO65C,YAAatd,GAAIqd,cAE1D56C,GAAcoB,gBAAiB6B,EAAkB7H,QACjDmiC,GAAI77B,oBAAqBuB,EAAkB7H,OAAQ,EAAGmiC,GAAI75C,OAAO,EAAO,EAAG,IAIvEsd,EAAOy5C,SAEXld,GAAIh6C,WAAYg6C,GAAI/5B,aAAcrhB,EAAQuJ,IAC1C6xC,GAAI/5C,WAAY+5C,GAAI/5B,aAAcxC,EAAO85C,QAASvd,GAAIqd,cAEtD56C,GAAcoB,gBAAiB6B,EAAkBvX,IACjD6xC,GAAI77B,oBAAqBuB,EAAkBvX,GAAI,EAAG6xC,GAAI75C,OAAO,EAAO,EAAG,IAInEsd,EAAO05C,YAEXnd,GAAIh6C,WAAYg6C,GAAI/5B,aAAcrhB,EAAQsJ,OAC1C8xC,GAAI/5C,WAAY+5C,GAAI/5B,aAAcxC,EAAO+5C,WAAYxd,GAAIqd,cAEzD56C,GAAcoB,gBAAiB6B,EAAkBxX,OACjD8xC,GAAI77B,oBAAqBuB,EAAkBxX,MAAO,EAAG8xC,GAAI75C,OAAO,EAAO,EAAG,IAI3Esc,GAAcwB,0BAEd+7B,GAAI74B,WAAY64B,GAAIztB,UAAW,EAAG9O,EAAOrc,OAEzCqc,EAAOrc,MAAQ,GAIhBpE,KAAK+tC,mBAAqB,SAAW/wB,EAAQD,EAAOsB,EAAUM,EAAU8B,EAAQumB,GAEhE,OAAVjqB,IAAiBA,EAAQm6C,GAE9B,MAAMtb,EAAgBn7B,EAAO2uB,QAAU3uB,EAAOjC,YAAYi8C,cAAgB,EAEpEj6C,EAAUk6C,GAAY19C,EAAQD,EAAO4B,EAAU8B,GAErD9E,EAAMggC,YAAah9B,EAAUi9B,GAI7B,IAAIl7B,EAAQrC,EAASqC,MACrB,MAAMvI,EAAWkG,EAAS7S,WAAW2M,SAIrC,GAAe,OAAVuI,GAEJ,QAAkBxgB,IAAbiY,GAA6C,IAAnBA,EAAS/T,MAAc,YAEhD,GAAqB,IAAhBsc,EAAMtc,MAEjB,OAMD,IAiBIrC,EAjBA44D,EAAc,GAEU,IAAvBh8C,EAASvU,YAEbsW,EAAQ2M,EAAWsB,sBAAuBtQ,GAC1Cs8C,EAAc,IAIVh8C,EAASjU,cAAgBiU,EAAShU,eAEtC6sD,GAAan1D,OAAQoe,EAAQpC,EAAUM,EAAU6B,GAIlDf,GAAcgC,MAAOhB,EAAQ9B,EAAU6B,EAASnC,EAAUqC,GAG1D,IAAIjF,EAAWg8C,GAEA,OAAV/2C,IAEJ3e,EAAYyJ,EAAW1J,IAAK4e,GAE5BjF,EAAWi8C,GACXj8C,EAAS1T,SAAUhG,IAMpB,MAAM64D,EAAwB,OAAVl6C,EAAmBA,EAAMtc,MAAQ+T,EAAS/T,MAExDy2D,EAAax8C,EAASy8C,UAAU75D,MAAQ05D,EACxCI,EAAa18C,EAASy8C,UAAU12D,MAAQu2D,EAExC50D,EAAuB,OAAVihC,EAAiBA,EAAM/lC,MAAQ05D,EAAc,EAC1D1zD,EAAuB,OAAV+/B,EAAiBA,EAAM5iC,MAAQu2D,EAAcK,EAAAA,EAE1DC,EAAYz1D,KAAKs4C,IAAK+c,EAAY90D,GAClCm1D,EAAU11D,KAAKo/B,IAAKg2B,EAAWC,EAAaE,EAAYh1D,EAAakB,GAAe,EAEpFk0D,EAAY31D,KAAKs4C,IAAK,EAAGod,EAAUD,EAAY,GAErD,GAAmB,IAAdE,EAAL,CAIA,GAAK16C,EAAO2uB,QAEiB,IAAvBzwB,EAASvU,WAEbuR,EAAMwgC,aAAcx9B,EAAStU,mBAAqB+sD,KAClD37C,EAASyI,QAAS84B,GAAIxtB,QAItB/T,EAASyI,QAAS84B,GAAIztB,gBAIjB,GAAK9O,EAAO4uB,OAAS,CAE3B,IAAI+M,EAAYz9B,EAASxU,eAENjK,IAAdk8C,IAA0BA,EAAY,GAE3CzgC,EAAMwgC,aAAcC,EAAYgb,KAE3B32C,EAAO26C,eAEX3/C,EAASyI,QAAS84B,GAAIxtB,OAEX/O,EAAO46C,WAElB5/C,EAASyI,QAAS84B,GAAIttB,WAItBjU,EAASyI,QAAS84B,GAAIvtB,iBAIZhP,EAAO6uB,SAElB7zB,EAASyI,QAAS84B,GAAIrtB,QAEXlP,EAAO66C,UAElB7/C,EAASyI,QAAS84B,GAAIztB,WAIvB,GAAK9O,EAAO8B,gBAEX9G,EAAS2I,gBAAiB62C,EAAWE,EAAW16C,EAAOrc,YAEjD,GAAKia,EAASoE,0BAA4B,CAEhD,MAAM6M,EAAgB9pB,KAAKo/B,IAAKvmB,EAASiR,cAAejR,EAAS2E,mBAEjEvH,EAAS2I,gBAAiB62C,EAAWE,EAAW7rC,QAIhD7T,EAASoB,OAAQo+C,EAAWE,KAQ9Bn7D,KAAKu7D,QAAU,SAAWx+C,EAAOC,GAEhC6P,EAAqBkf,GAAajqC,IAAKib,EAAOC,GAC9C6P,EAAmB1E,OAEnBpL,EAAMy+C,UAAU,SAAW/6C,GAErBA,EAAOg7C,UAEX5uC,EAAmB8e,UAAWlrB,GAEzBA,EAAOwnB,YAEXpb,EAAmB+e,WAAYnrB,OAQlCoM,EAAmB6e,YAAa1uB,GAEhC,MAAM0+C,EAAW,IAAI75D,QAErBkb,EAAMy+C,UAAU,SAAW/6C,GAE1B,MAAM9B,EAAW8B,EAAO9B,SAExB,GAAKA,EAEJ,GAAKvV,MAAMC,QAASsV,GAEnB,IAAM,IAAI4B,EAAI,EAAGA,EAAI5B,EAASjV,OAAQ6W,IAAO,CAE5C,MAAMo7C,EAAYh9C,EAAU4B,IAEO,IAA9Bm7C,EAAShvC,IAAKivC,KAElBC,GAAcD,EAAW5+C,EAAO0D,GAChCi7C,EAASh5D,IAAKi5D,SAMwB,IAA7BD,EAAShvC,IAAK/N,KAEzBi9C,GAAcj9C,EAAU5B,EAAO0D,GAC/Bi7C,EAASh5D,IAAKic,QAYlB,IAAImzC,GAA2B,KAS/B,MAAM5D,GAAY,IAAI1tD,GA2JtB,SAASq7D,GAAep7C,EAAQzD,EAAQspB,EAAYkvB,GAEnD,IAAwB,IAAnB/0C,EAAOuuB,QAAoB,OAIhC,GAFgBvuB,EAAOuK,OAAOmkB,KAAMnyB,EAAOgO,QAI1C,GAAKvK,EAAOq7C,QAEXx1B,EAAa7lB,EAAO8lB,iBAEd,GAAK9lB,EAAOs7C,OAES,IAAtBt7C,EAAOyvB,YAAsBzvB,EAAOpe,OAAQ2a,QAE3C,GAAKyD,EAAOg7C,QAElB5uC,EAAmB8e,UAAWlrB,GAEzBA,EAAOwnB,YAEXpb,EAAmB+e,WAAYnrB,QAI1B,GAAKA,EAAO66C,UAElB,IAAO76C,EAAO+uB,eAAiBjD,EAASyvB,iBAAkBv7C,GAAW,CAE/D+0C,GAEJyB,EAAS/sB,sBAAuBzpB,EAAOjC,aACrCyJ,aAAc+uC,GAIjB,MAAM34C,EAAWzC,GAAQvZ,OAAQoe,GAC3B9B,EAAW8B,EAAO9B,SAEnBA,EAASqwB,SAEbriB,EAAkBnlB,KAAMiZ,EAAQpC,EAAUM,EAAU2nB,EAAY2wB,EAASxvD,EAAG,YAMxE,GAAKgZ,EAAOw7C,wBAEbzG,GAEJyB,EAAS/sB,sBAAuBzpB,EAAOjC,aACrCyJ,aAAc+uC,GAIjBrqC,EAAkBnlB,KAAMiZ,EAAQ,KAAMA,EAAO9B,SAAU2nB,EAAY2wB,EAASxvD,EAAG,WAEzE,IAAKgZ,EAAO2uB,QAAU3uB,EAAO4uB,QAAU5uB,EAAO6uB,YAE/C7uB,EAAO8jB,eAIN9jB,EAAOgkB,SAAS1jC,QAAUijB,EAAKnH,OAAO9b,QAE1C0f,EAAOgkB,SAASpiC,SAChBoe,EAAOgkB,SAAS1jC,MAAQijB,EAAKnH,OAAO9b,QAM/B0f,EAAO+uB,eAAiBjD,EAASkD,iBAAkBhvB,IAAW,CAE/D+0C,GAEJyB,EAAS/sB,sBAAuBzpB,EAAOjC,aACrCyJ,aAAc+uC,GAIjB,MAAM34C,EAAWzC,GAAQvZ,OAAQoe,GAC3B9B,EAAW8B,EAAO9B,SAExB,GAAKvV,MAAMC,QAASsV,GAAa,CAEhC,MAAMixB,EAASvxB,EAASuxB,OAExB,IAAM,IAAIrvB,EAAI,EAAGyN,EAAI4hB,EAAOlmC,OAAQ6W,EAAIyN,EAAGzN,IAAO,CAEjD,MAAMymB,EAAQ4I,EAAQrvB,GAChBwvB,EAAgBpxB,EAAUqoB,EAAMxgC,eAEjCupC,GAAiBA,EAAcf,SAEnCriB,EAAkBnlB,KAAMiZ,EAAQpC,EAAU0xB,EAAezJ,EAAY2wB,EAASxvD,EAAGu/B,SAMxEroB,EAASqwB,SAEpBriB,EAAkBnlB,KAAMiZ,EAAQpC,EAAUM,EAAU2nB,EAAY2wB,EAASxvD,EAAG,MAUhF,MAAMwoC,EAAWxvB,EAAOwvB,SAExB,IAAM,IAAI1vB,EAAI,EAAGyN,EAAIiiB,EAASvmC,OAAQ6W,EAAIyN,EAAGzN,IAE5Cs7C,GAAe5rB,EAAU1vB,GAAKvD,EAAQspB,EAAYkvB,GAMpD,SAAS0G,GAAep/C,EAAYC,EAAOC,GAE1C,MAAMm6C,GAAqC,IAAlBp6C,EAAMG,QAAmBH,EAAMo6C,iBAAmB,KAE3E,IAAM,IAAI52C,EAAI,EAAGyN,EAAIlR,EAAWpT,OAAQ6W,EAAIyN,EAAGzN,IAAO,CAErD,MAAM0mB,EAAanqB,EAAYyD,GAEzBE,EAASwmB,EAAWxmB,OACpBpC,EAAW4oB,EAAW5oB,SACtBM,EAAgC,OAArBw4C,EAA4BlwB,EAAWtoB,SAAWw4C,EAC7DnwB,EAAQC,EAAWD,MAEzB,GAAKhqB,EAAOm/C,cAAgB,CAE3BhG,EAAsBn5C,EAEtB,MAAMuqB,EAAUvqB,EAAOuqB,QAEvB,IAAM,IAAIqC,EAAI,EAAGwyB,EAAK70B,EAAQ79B,OAAQkgC,EAAIwyB,EAAIxyB,IAAO,CAEpD,MAAMyyB,EAAU90B,EAASqC,GAEpBnpB,EAAOuK,OAAOmkB,KAAMktB,EAAQrxC,UAEhCrP,EAAM2N,SAAU8sC,EAAiBzqD,KAAM0wD,EAAQ/yC,WAE/CuD,EAAmB6e,YAAa2wB,GAEhCptB,GAAcxuB,EAAQ1D,EAAOs/C,EAASh+C,EAAUM,EAAUqoB,UAQ5DmvB,EAAsB,KAEtBlnB,GAAcxuB,EAAQ1D,EAAOC,EAAQqB,EAAUM,EAAUqoB,IAQ5D,SAASiI,GAAcxuB,EAAQ1D,EAAOC,EAAQqB,EAAUM,EAAUqoB,GAQjE,GANAvmB,EAAOlC,eAAgBm3C,EAAO34C,EAAOC,EAAQqB,EAAUM,EAAUqoB,GACjEna,EAAqBkf,GAAajqC,IAAKib,EAAOo5C,GAAuBn5C,GAErEyD,EAAOivB,gBAAgBC,iBAAkB3yB,EAAO8K,mBAAoBrH,EAAOjC,aAC3EiC,EAAO67C,aAAav0C,gBAAiBtH,EAAOivB,iBAEvCjvB,EAAOw7C,wBAA0B,CAErC,MAAMz7C,EAAUk6C,GAAY19C,EAAQD,EAAO4B,EAAU8B,GAErD9E,EAAMggC,YAAah9B,GAEnBc,GAAc8B,QAhnBhB,SAAgCd,EAAQD,GAEvCC,EAAO5D,QAAQ,SAAW4D,GAEzBi1C,EAAMqE,sBAAuBt5C,EAAQD,MA8mBrC+7C,CAAuB97C,EAAQD,QAI/Bk1C,EAAM3nB,mBAAoB/wB,EAAQD,EAAOsB,EAAUM,EAAU8B,EAAQumB,GAItEvmB,EAAO+7C,cAAe9G,EAAO34C,EAAOC,EAAQqB,EAAUM,EAAUqoB,GAChEna,EAAqBkf,GAAajqC,IAAKib,EAAOo5C,GAAuBn5C,GAItE,SAAS4+C,GAAcj9C,EAAU5B,EAAO0D,IAEhB,IAAlB1D,EAAMG,UAAmBH,EAAQm6C,GAEtC,MAAMruC,EAAqBpR,EAAW3V,IAAK6c,GAErCpU,EAASsiB,EAAmBlR,MAAMpR,OAClCkhC,EAAe5e,EAAmBlR,MAAM8vB,aAExCgxB,EAAqBlyD,EAAOoR,MAAMlZ,QAElC6C,EAAa+xD,GAAalzB,cAAexlB,EAAUpU,EAAOoR,MAAO8vB,EAAc1uB,EAAO0D,GACtFi8C,EAAkBrF,GAAaxxB,mBAAoBvgC,GAEzD,IAAIkb,EAAUqI,EAAmBrI,QAC7Bm8C,GAAgB,EAEpB,QAAiBz8D,IAAZsgB,EAGJ7B,EAAS0P,iBAAkB,UAAWiqC,SAEhC,GAAK93C,EAAQoc,WAAa8/B,EAGhCnE,GAAiC55C,QAE3B,GAAKkK,EAAmB4zC,qBAAuBA,EAErDE,GAAgB,MAEV,CAAA,QAA6Bz8D,IAAxBoF,EAAWi5B,SAAyB,CAI/C,MAAM8F,EAAc1lB,EAAS2lB,uBAAyBvnB,EAAMsnB,YAAc,KAG1E,YAFAxb,EAAmBzT,OAASsG,EAAS5Z,IAAK6c,EAASvJ,QAAUivB,IAO7Ds4B,GAAgB,EAIZA,IAEJr3D,EAAWkE,SAAW6tD,GAAaxmC,YAAalS,GAEhDA,EAASi+C,gBAAiBt3D,EAAYowD,GAEtCl1C,EAAU62C,GAAavxB,eAAgBxgC,EAAYo3D,GAEnD7zC,EAAmBrI,QAAUA,EAC7BqI,EAAmBrf,SAAWlE,EAAWkE,SACzCqf,EAAmBqY,eAAiB57B,EAAW47B,gBAIhD,MAAM13B,EAAWqf,EAAmBrf,UAE7BmV,EAASjT,kBACbiT,EAAS4gB,uBACW,IAAtB5gB,EAASnU,WAETqe,EAAmB6S,kBAAoBlxB,GAAS4c,UAChDyB,EAAmBxB,gBAAkB7c,GAAS6c,gBAC9C7d,EAASkf,eAAiBle,GAAS0c,SAIpC2B,EAAmBwb,YAAc1lB,EAAS2lB,uBAAyBvnB,EAAMsnB,YAAc,KACvFxb,EAAmBve,IAAMyS,EAAMzS,IAC/Bue,EAAmBzT,OAASsG,EAAS5Z,IAAK6c,EAASvJ,QAAUyT,EAAmBwb,aAIhFxb,EAAmBg0C,YA+UpB,SAA8Bl+C,GAE7B,OAAOA,EAASu0C,uBAAyBv0C,EAASy0C,oBAAsBz0C,EAAS20C,qBAChF30C,EAAS2lB,wBAA0B3lB,EAAS81C,kBAC1C91C,EAASjT,mBAAwC,IAApBiT,EAASpU,OAnVRuyD,CAAqBn+C,GACtDkK,EAAmB4zC,mBAAqBA,EAEnC5zC,EAAmBg0C,cAIvBrzD,EAAS8N,kBAAkB/V,MAAQgJ,EAAOoR,MAAMmtB,QAChDt/B,EAAS+N,WAAWhW,MAAQgJ,EAAOoR,MAAMotB,MACzCv/B,EAASgO,kBAAkBjW,MAAQgJ,EAAOoR,MAAMypB,YAChD57B,EAASmO,wBAAwBpW,MAAQgJ,EAAOoR,MAAMqtB,kBACtDx/B,EAAS0O,WAAW3W,MAAQgJ,EAAOoR,MAAM2pB,KACzC97B,EAASgP,iBAAiBjX,MAAQgJ,EAAOoR,MAAMstB,WAC/Cz/B,EAAS4P,eAAe7X,MAAQgJ,EAAOoR,MAAM4pB,SAC7C/7B,EAAS6P,MAAM9X,MAAQgJ,EAAOoR,MAAMutB,aACpC1/B,EAAS8P,MAAM/X,MAAQgJ,EAAOoR,MAAMwtB,aACpC3/B,EAASmP,YAAYpX,MAAQgJ,EAAOoR,MAAM0pB,MAC1C77B,EAASoP,kBAAkBrX,MAAQgJ,EAAOoR,MAAMytB,YAChD5/B,EAASyP,iBAAiB1X,MAAQgJ,EAAOoR,MAAM6pB,KAE/Ch8B,EAASwO,qBAAqBzW,MAAQgJ,EAAOoR,MAAM3D,qBACnDxO,EAASyO,wBAAwB1W,MAAQgJ,EAAOoR,MAAM1D,wBACtDzO,EAASiP,cAAclX,MAAQgJ,EAAOoR,MAAMlD,cAC5CjP,EAASkP,iBAAiBnX,MAAQgJ,EAAOoR,MAAMjD,iBAC/ClP,EAASuP,eAAexX,MAAQgJ,EAAOoR,MAAM5C,eAC7CvP,EAASwP,kBAAkBzX,MAAQgJ,EAAOoR,MAAM3C,mBAKjD,MAAM+jD,EAAel0C,EAAmBrI,QAAQqQ,cAC1CmsC,EAAehlC,GAAca,aAAckkC,EAAa/lC,IAAKxtB,GAEnEqf,EAAmBm0C,aAAeA,EAInC,SAAStC,GAAY19C,EAAQD,EAAO4B,EAAU8B,IAEtB,IAAlB1D,EAAMG,UAAmBH,EAAQm6C,GAEtC/nC,EAASu3B,oBAET,MAAMp8C,EAAMyS,EAAMzS,IACZ+5B,EAAc1lB,EAAS2lB,uBAAyBvnB,EAAMsnB,YAAc,KACpExkC,EAAsC,OAAzBk2D,EAAkCL,EAAMx0B,eAAiB60B,EAAqBn3C,QAAQ/e,SACnGuV,EAASsG,EAAS5Z,IAAK6c,EAASvJ,QAAUivB,GAE1Cxb,EAAqBpR,EAAW3V,IAAK6c,GACrCpU,EAASsiB,EAAmBlR,MAAMpR,OAExC,IAA0B,IAArBusD,KAE2B,IAA1BC,GAAkC/5C,IAAWk5C,GAAiB,CAElE,MAAMztC,EACLzL,IAAWk5C,GACXv3C,EAASiD,KAAOq0C,EAKjBzrD,GAASge,SAAU7J,EAAU3B,EAAQyL,GAMlC9J,EAASlc,UAAYomB,EAAmB04B,UAEvC5iC,EAASrU,KAAOue,EAAmBve,MAAQA,GAIpCue,EAAmBwb,cAAgBA,GAInCxb,EAAmBg0C,aAAiBh0C,EAAmB4zC,qBAAuBlyD,EAAOoR,MAAMlZ,QANtGm5D,GAAcj9C,EAAU5B,EAAO0D,QAUqBvgB,IAAzC2oB,EAAmB6S,mBAC5B7S,EAAmB6S,oBAAsBlxB,GAAS4c,WACpDyB,EAAmBxB,kBAAoB7c,GAAS6c,iBAIrCwB,EAAmBqY,iBAAmBrhC,GAItCgpB,EAAmBzT,SAAWA,IAFzCwmD,GAAcj9C,EAAU5B,EAAO0D,GAJ/Bm7C,GAAcj9C,EAAU5B,EAAO0D,IAchCm7C,GAAcj9C,EAAU5B,EAAO0D,GAC/BoI,EAAmB04B,UAAY5iC,EAASlc,SAIzC,IAAIw6D,GAAiB,EACjBC,GAAkB,EAClBC,GAAgB,EAEpB,MAAM38C,EAAUqI,EAAmBrI,QAClC48C,EAAa58C,EAAQqQ,cACrBwsC,EAAax0C,EAAmBrf,SAkBjC,GAhBKmS,EAAM+/B,WAAYl7B,EAAQA,WAE9By8C,GAAiB,EACjBC,GAAkB,EAClBC,GAAgB,GAIZx+C,EAASiD,KAAOq0C,IAEpBA,EAAqBt3C,EAASiD,GAE9Bs7C,GAAkB,GAIdD,GAAkB/G,IAAmBl5C,EAAS,CA2BlD,GAzBAogD,EAAWtsC,SAAUksB,GAAK,mBAAoBhgC,EAAOuzC,kBAEhD7uD,EAAayjB,wBAEjBi4C,EAAWtsC,SAAUksB,GAAK,gBACzB,GAAQx3C,KAAKo0B,IAAK5c,EAAO2N,IAAM,GAAQnlB,KAAK83D,MAIzCpH,IAAmBl5C,IAEvBk5C,EAAiBl5C,EAMjBkgD,GAAkB,EAClBC,GAAgB,GAOZx+C,EAASjT,kBACbiT,EAAS20C,qBACT30C,EAASy0C,oBACTz0C,EAAS2lB,wBACT3lB,EAASvJ,OAAS,CAElB,MAAMmoD,EAAUH,EAAWxoD,IAAI4oD,oBAEdt9D,IAAZq9D,GAEJA,EAAQzsC,SAAUksB,GACjBia,EAAS/sB,sBAAuBltB,EAAOwB,eAMrCG,EAAS20C,qBACb30C,EAASy0C,oBACTz0C,EAASu0C,uBACTv0C,EAASs0C,qBACTt0C,EAAS2lB,wBACT3lB,EAASjT,mBAET0xD,EAAWtsC,SAAUksB,GAAK,kBAAkD,IAAhChgC,EAAOygD,uBAI/C9+C,EAAS20C,qBACb30C,EAASy0C,oBACTz0C,EAASu0C,uBACTv0C,EAASs0C,qBACTt0C,EAAS2lB,wBACT3lB,EAASjT,kBACTiT,EAAS81C,kBACT91C,EAASlU,WAET2yD,EAAWtsC,SAAUksB,GAAK,aAAchgC,EAAO8K,oBAUjD,GAAKnJ,EAASlU,SAAW,CAExB2yD,EAAW1kC,YAAaskB,GAAKv8B,EAAQ,cACrC28C,EAAW1kC,YAAaskB,GAAKv8B,EAAQ,qBAErC,MAAMgkB,EAAWhkB,EAAOgkB,SAExB,GAAKA,EAAW,CAEf,MAAMD,EAAQC,EAASD,MAEvB,GAAK9iC,EAAa6kB,oBAAsB,CAEvC,QAA8BrmB,IAAzBukC,EAASi5B,YAA4B,CAUzC,IAAIlkD,EAAOhU,KAAKm4D,KAAqB,EAAfn5B,EAAM96B,QAC5B8P,EAAO0kC,EAAU0f,eAAgBpkD,GACjCA,EAAOhU,KAAKs4C,IAAKtkC,EAAM,GAEvB,MAAMqkD,EAAe,IAAIz6D,aAAcoW,EAAOA,EAAO,GACrDqkD,EAAan7D,IAAK+hC,EAASo5B,cAE3B,MAAMH,EAAc,IAAIz+D,GAAa4+D,EAAcrkD,EAAMA,EAAMiY,EAAYkyB,IAE3Elf,EAASo5B,aAAeA,EACxBp5B,EAASi5B,YAAcA,EACvBj5B,EAASq5B,gBAAkBtkD,EAI5B4jD,EAAWtsC,SAAUksB,GAAK,cAAevY,EAASi5B,YAAavuC,GAC/DiuC,EAAWtsC,SAAUksB,GAAK,kBAAmBvY,EAASq5B,sBAItDV,EAAW1kC,YAAaskB,GAAKvY,EAAU,iBAyE3C,IAAwCj7B,EAAUjI,EANjD,OA3DK27D,GAAmBr0C,EAAmB0mB,gBAAkB9uB,EAAO8uB,iBAEnE1mB,EAAmB0mB,cAAgB9uB,EAAO8uB,cAC1C6tB,EAAWtsC,SAAUksB,GAAK,gBAAiBv8B,EAAO8uB,gBAI9C2tB,IAEJE,EAAWtsC,SAAUksB,GAAK,sBAAuB0Y,EAAMD,qBAElD5sC,EAAmBg0C,cAsDwBt7D,EA3CJ47D,GA2CN3zD,EA3CN6zD,GA6CxB/lD,kBAAkB/W,YAAcgB,EACzCiI,EAAS+N,WAAWhX,YAAcgB,EAElCiI,EAASgO,kBAAkBjX,YAAcgB,EACzCiI,EAASmO,wBAAwBpX,YAAcgB,EAC/CiI,EAASmP,YAAYpY,YAAcgB,EACnCiI,EAASoP,kBAAkBrY,YAAcgB,EACzCiI,EAAS0O,WAAW3X,YAAcgB,EAClCiI,EAASgP,iBAAiBjY,YAAcgB,EACxCiI,EAAS4P,eAAe7Y,YAAcgB,EACtCiI,EAASyP,iBAAiB1Y,YAAcgB,GAjDlC+I,GAAOqU,EAASrU,KAEpBgtD,GAAU1E,mBAAoByK,EAAY/yD,GAI3CgtD,GAAUvE,wBAAyBsK,EAAY1+C,EAAU83C,EAAaD,GAEtEx+B,GAAcW,OAAQqkB,GAAKn0B,EAAmBm0C,aAAcK,EAAYluC,IAIpExQ,EAASjT,mBAAoD,IAAhCiT,EAASrT,qBAE1C0sB,GAAcW,OAAQqkB,GAAKn0B,EAAmBm0C,aAAcK,EAAYluC,GACxExQ,EAASrT,oBAAqB,GAI1BqT,EAAS41C,kBAEb6I,EAAWtsC,SAAUksB,GAAK,SAAUv8B,EAAO9G,QAM5CyjD,EAAWtsC,SAAUksB,GAAK,kBAAmBv8B,EAAOivB,iBACpD0tB,EAAWtsC,SAAUksB,GAAK,eAAgBv8B,EAAO67C,cACjDc,EAAWtsC,SAAUksB,GAAK,cAAev8B,EAAOjC,aAEzCgC,EA3uBR0tC,GAAU9sD,kBARV,SAA2BN,GAErBqc,GAAGgxC,cACH2D,IAA2BA,GAA0BhxD,MAOpC,oBAAXi9D,QAAyB7P,GAAU5sD,WAAYy8D,QAE3D/9D,KAAKoB,iBAAmB,SAAWC,GAElCywD,GAA2BzwD,EAC3B8b,GAAG/b,iBAAkBC,GAEN,OAAbA,EAAsB6sD,GAAUhtD,OAASgtD,GAAUjtD,SAMtDjB,KAAK6c,OAAS,SAAWE,EAAOC,GAE/B,IAAI4N,EAAc3N,EAgBlB,QAdwB/c,IAAnB08C,UAAW,KAGfhyB,EAAegyB,UAAW,SAIH18C,IAAnB08C,UAAW,KAGf3/B,EAAa2/B,UAAW,SAIT18C,IAAX8c,IAA4C,IAApBA,EAAOghD,SAGnC,OAID,IAAwB,IAAnBrI,EAA0B,OAI/Bl2C,GAAc+B,oBACdy0C,GAAuB,EACvBC,EAAiB,MAIS,IAArBn5C,EAAMmzB,YAAsBnzB,EAAM2O,oBAIhB,OAAlB1O,EAAOyO,QAAkBzO,EAAO0O,qBAEjB,IAAfvO,GAAGkL,UAAwC,IAApBlL,GAAGgxC,eAE9BnxC,EAASG,GAAG8yC,UAAWjzC,KAKD,IAAlBD,EAAMG,SAAmBH,EAAMwB,eAAgBm3C,EAAO34C,EAAOC,EAAQ4N,GAAgBmrC,GAE1FlpC,EAAqBkf,GAAajqC,IAAKib,EAAOC,GAC9C6P,EAAmB1E,OAEnB6uC,EAAkBrnB,iBAAkB3yB,EAAOuzC,iBAAkBvzC,EAAO8K,oBACpEykB,EAAS0xB,wBAAyBjH,GAElCD,EAAwB/2D,KAAK6mB,qBAC7BiwC,EAAmBtsD,GAAS2d,KAAMnoB,KAAK0oB,eAAgBquC,EAAuB/5C,GAE9E2P,EAAoB4qC,GAAYz1D,IAAKib,EAAOC,GAC5C2P,EAAkBxE,OAElB0zC,GAAe9+C,EAAOC,EAAQ,EAAG04C,EAAMF,aAEvC7oC,EAAkBua,UAES,IAAtBwuB,EAAMF,aAEV7oC,EAAkB4D,KAAMmmC,EAAaC,IAMZ,IAArBG,GAA4BtsD,GAAS8d,eAE1C,MAAMmjB,EAAe5e,EAAmBlR,MAAM8vB,aAE9ChG,GAAU5oB,OAAQ4uB,EAAc1uB,EAAOC,GAEvC6P,EAAmB6e,YAAa1uB,IAEN,IAArB85C,GAA4BtsD,GAAS+d,cAIb,IAAxBvoB,KAAKgkB,KAAKqL,WAAqBrvB,KAAKgkB,KAAKzC,aAExBrhB,IAAjB0qB,GAEJ5qB,KAAK8rB,gBAAiBlB,GAMvB9P,GAAW+B,OAAQ8P,EAAmB5P,EAAOC,EAAQC,GAIrD,MAAMihD,EAAgBvxC,EAAkBia,OAClCu3B,EAAqBxxC,EAAkBka,YAExCq3B,EAAcx0D,OAAS,GAAIwyD,GAAegC,EAAenhD,EAAOC,GAChEmhD,EAAmBz0D,OAAS,GAAIwyD,GAAeiC,EAAoBphD,EAAOC,IAIxD,IAAlBD,EAAMG,SAAmBH,EAAMy/C,cAAe9G,EAAO34C,EAAOC,GAInC,OAAzB+4C,IAIJ5mC,EAAS23B,yBAA0BiP,GAInC5mC,EAAS43B,8BAA+BgP,IAMzCp6C,EAAM/Z,QAAQqD,MAAMwrC,SAAS,GAC7B90B,EAAM/Z,QAAQqD,MAAM2sC,SAAS,GAC7Bj2B,EAAM/Z,QAAQsJ,MAAM0mC,SAAS,GAE7Bj2B,EAAMw/B,kBAAkB,GAIxBxuB,EAAoB,KACpBE,EAAqB,MAonBtB7sB,KAAKiuD,eAAiB,SAAW1sD,GAE3Bq0D,IAAiBr0D,GAAkC,OAAzBw0D,GAAgC/Y,GAAIoI,gBAAiBpI,GAAIqI,YAAa9jD,GAErGq0D,EAAer0D,GAIhBvB,KAAKowC,kBAAoB,WAExB,OAAOylB,GAIR71D,KAAKswC,qBAAuB,WAE3B,OAAOwlB,GAIR91D,KAAK4sB,cAAgB,WAEpB,OAAOD,GAIR3sB,KAAKgtB,cAAgB,SAAWlQ,GAE/B6P,EAAoB7P,GAIrB9c,KAAK8sB,eAAiB,WAErB,OAAOD,GAIR7sB,KAAKitB,eAAiB,SAAW+e,GAEhCnf,EAAqBmf,GAItBhsC,KAAK6rB,gBAAkB,WAEtB,OAAOkqC,GAIR/1D,KAAK8rB,gBAAkB,SAAWlB,EAAculB,EAAiB,EAAGE,EAAoB,GAEvF0lB,EAAuBnrC,EACvBirC,EAAyB1lB,EACzB2lB,EAA4BzlB,EAEvBzlB,QAAsE1qB,IAAtDuX,EAAW3V,IAAK8oB,GAAeg2B,oBAEnDzxB,EAASw3B,kBAAmB/7B,GAI7B,IAAIq6B,EAAc2Q,EACdxP,GAAS,EAEb,GAAKx7B,EAAe,CAEnB,MAAMg2B,EAAqBnpC,EAAW3V,IAAK8oB,GAAeg2B,mBAErDh2B,EAAa/M,yBAEjBonC,EAAcrE,EAAoBzQ,GAClCiW,GAAS,GAITnB,EAFWr6B,EAAa47B,+BAEV/uC,EAAW3V,IAAK8oB,GAAem2B,+BAI/BH,EAIfwV,EAAiBzqD,KAAMif,EAAatB,UACpC+sC,EAAgB1qD,KAAMif,EAAazB,SACnCmtC,EAAsB1rC,EAAavB,iBAInC+sC,EAAiBzqD,KAAMghC,GAAY1C,eAAgBwsB,GAAchxD,QACjE4wD,EAAgB1qD,KAAMirD,GAAW3sB,eAAgBwsB,GAAchxD,QAC/D6wD,EAAsBO,EAevB,GAXKb,IAAwB/Q,IAE5BjI,GAAIoI,gBAAiBpI,GAAIqI,YAAaJ,GACtC+Q,EAAsB/Q,GAIvBtpC,EAAM2N,SAAU8sC,GAChBz6C,EAAMwN,QAASktC,GACf16C,EAAM+0B,eAAgB4lB,GAEjBlQ,EAAS,CAEb,MAAMjG,EAAoB1oC,EAAW3V,IAAK8oB,EAAahM,SACvDo+B,GAAIsI,qBAAsBtI,GAAIqI,YAAarI,GAAI6J,kBAAmB7J,GAAI9F,4BAA8B/G,EAAgBgQ,EAAkBG,eAAgBjQ,KAMxJrwC,KAAKo+D,uBAAyB,SAAWxzC,EAAcrjB,EAAGF,EAAGlI,EAAOC,EAAQ+C,EAAQk8D,GAEnF,IAASzzC,IAAgBA,EAAaN,oBAGrC,OAID,IAAI26B,EAAcxtC,EAAW3V,IAAK8oB,GAAeg2B,mBAQjD,GANKh2B,EAAa/M,8BAAmD3d,IAAxBm+D,IAE5CpZ,EAAcA,EAAaoZ,IAIvBpZ,EAAc,CAElB,IAAIqZ,GAAU,EAETrZ,IAAgB+Q,IAEpBhZ,GAAIoI,gBAAiBpI,GAAIqI,YAAaJ,GAEtCqZ,GAAU,GAIX,IAEC,MAAM1/C,EAAUgM,EAAahM,QACvB2/C,EAAgB3/C,EAAQvf,OACxBgkD,EAAczkC,EAAQtf,KAE5B,GAAKi/D,IAAkB9sC,GAAcwrB,GAAMgF,QAASsc,KAAoBvhB,GAAI39B,aAAc29B,GAAIwhB,kCAG7F,OAID,KAAKnb,IAAgBmE,IAAoBvK,GAAMgF,QAASoB,KAAkBrG,GAAI39B,aAAc29B,GAAIyhB,iCAC3Fpb,IAAgBM,KAAejiD,EAAaC,UAAYiJ,EAAW9I,IAAK,sBAAyB8I,EAAW9I,IAAK,8BACjHuhD,IAAgBO,KAAmBliD,EAAaC,SAAWiJ,EAAW9I,IAAK,0BAA6B8I,EAAW9I,IAAK,iCAG5H,OAIIk7C,GAAI0hB,uBAAwB1hB,GAAIqI,eAAkBrI,GAAI2hB,sBAInDp3D,GAAK,GAAKA,GAAOqjB,EAAazrB,MAAQA,GAAekI,GAAK,GAAKA,GAAOujB,EAAaxrB,OAASA,GAElG49C,GAAI4hB,WAAYr3D,EAAGF,EAAGlI,EAAOC,EAAQ69C,GAAMgF,QAASsc,GAAiBthB,GAAMgF,QAASoB,GAAelhD,WAYhGm8D,GAEJthB,GAAIoI,gBAAiBpI,GAAIqI,YAAa2Q,MAU1Ch2D,KAAK6+D,yBAA2B,SAAW1mD,EAAUyG,EAASkgD,QAE9C5+D,IAAV4+D,IAAsBA,EAAQ,GAEnC,MAAMC,EAAav5D,KAAKw5D,IAAK,GAAKF,GAC5B3/D,EAAQqG,KAAKC,MAAOmZ,EAAQ3e,MAAMd,MAAQ4/D,GAC1C3/D,EAASoG,KAAKC,MAAOmZ,EAAQ3e,MAAMb,OAAS2/D,GAC5CjgB,EAAW7B,GAAMgF,QAASrjC,EAAQvf,QAExC8vB,EAASiyB,aAAcxiC,EAAS,GAEhCo+B,GAAIiiB,eAAgBjiB,GAAIhG,WAAY8nB,EAAOhgB,EAAU3mC,EAAS5Q,EAAG4Q,EAAS9Q,EAAGlI,EAAOC,EAAQ,GAE5Fuc,EAAM8gC,iBAIPz8C,KAAKk/D,qBAAuB,SAAW/mD,EAAUgnD,EAAYC,EAAYN,QAEzD5+D,IAAV4+D,IAAsBA,EAAQ,GAEnC,MAAM3/D,EAAQggE,EAAWl/D,MAAMd,MACzBC,EAAS+/D,EAAWl/D,MAAMb,OAC1B0/C,EAAW7B,GAAMgF,QAASmd,EAAW//D,QACrC0/C,EAAS9B,GAAMgF,QAASmd,EAAW9/D,MAEzC6vB,EAASiyB,aAAcge,EAAY,GAInCpiB,GAAI4E,YAAa5E,GAAI6E,oBAAqBud,EAAW/+D,OACrD28C,GAAI4E,YAAa5E,GAAIgH,+BAAgCob,EAAWnb,kBAChEjH,GAAI4E,YAAa5E,GAAIkH,iBAAkBkb,EAAW9+D,iBAE7C6+D,EAAWt6D,cAEfm4C,GAAIqiB,cAAeriB,GAAIhG,WAAY8nB,EAAO3mD,EAAS5Q,EAAG4Q,EAAS9Q,EAAGlI,EAAOC,EAAQ0/C,EAAUC,EAAQogB,EAAWl/D,MAAMf,MAI/GigE,EAAWpd,oBAEf/E,GAAIsiB,wBAAyBtiB,GAAIhG,WAAY8nB,EAAO3mD,EAAS5Q,EAAG4Q,EAAS9Q,EAAG83D,EAAWhd,QAAS,GAAIhjD,MAAOggE,EAAWhd,QAAS,GAAI/iD,OAAQ0/C,EAAUqgB,EAAWhd,QAAS,GAAIjjD,MAI7K89C,GAAIqiB,cAAeriB,GAAIhG,WAAY8nB,EAAO3mD,EAAS5Q,EAAG4Q,EAAS9Q,EAAGy3C,EAAUC,EAAQogB,EAAWl/D,OAOlF,IAAV6+D,GAAeM,EAAWh/D,iBAAkB48C,GAAIyB,eAAgBzB,GAAIhG,YAEzEr7B,EAAM8gC,iBAIPz8C,KAAK2hD,YAAc,SAAW/iC,GAE7BuQ,EAASiyB,aAAcxiC,EAAS,GAEhCjD,EAAM8gC,iBAI4B,oBAAvB8iB,oBAEXA,mBAAmB/0C,cAAe,IAAIg1C,YAAa,UAAW,CAAEC,OAAQz/D,QJv7D1EysD,GAAYhoD,UAAYC,OAAOmH,OAAQnH,OAAOC,OAAQomB,GAAkBtmB,WAAa,CAEpFG,YAAa6nD,GAEb0P,eAAe,ICJhBz3D,OAAOmH,OAAQ6gD,GAAgBjoD,UAAW,CAEzCG,YAAa8nD,GAEboC,aAAc,WAEb,GAAoB,OAAf9uD,KAAK6sD,QAET7sD,KAAK6sD,MAAQ,IAAI6S,GACjB1/D,KAAK6sD,MAAM7tC,kBAAmB,EAC9Bhf,KAAK6sD,MAAM7d,SAAU,EAErBhvC,KAAK6sD,MAAM8S,OAAS,GACpB3/D,KAAK6sD,MAAM+S,WAAa,CAAEC,UAAU,GAE/B9B,OAAO+B,QAEX,IAAM,IAAIv/C,EAAI,EAAGA,GAAKw9C,OAAO+B,OAAOC,mBAAoBx/C,IAAO,CAG9D,MAAMy/C,EAAQ,IAAIN,GAClBM,EAAMhhD,kBAAmB,EACzBghD,EAAMhxB,SAAU,EAChBhvC,KAAK6sD,MAAM8S,OAAOn4D,KAAMw4D,GAExBhgE,KAAK6sD,MAAM1hC,IAAK60C,GAQnB,OAAOhgE,KAAK6sD,OAIb6B,kBAAmB,WAUlB,OARyB,OAApB1uD,KAAK2sD,aAET3sD,KAAK2sD,WAAa,IAAI+S,GACtB1/D,KAAK2sD,WAAW3tC,kBAAmB,EACnChf,KAAK2sD,WAAW3d,SAAU,GAIpBhvC,KAAK2sD,YAIbiC,aAAc,WAUb,OARoB,OAAf5uD,KAAK4sD,QAET5sD,KAAK4sD,MAAQ,IAAI8S,GACjB1/D,KAAK4sD,MAAM5tC,kBAAmB,EAC9Bhf,KAAK4sD,MAAM5d,SAAU,GAIfhvC,KAAK4sD,OAIbpiC,cAAe,SAAWgD,GAoBzB,OAlByB,OAApBxtB,KAAK2sD,YAET3sD,KAAK2sD,WAAWniC,cAAegD,GAIZ,OAAfxtB,KAAK4sD,OAET5sD,KAAK4sD,MAAMpiC,cAAegD,GAIP,OAAfxtB,KAAK6sD,OAET7sD,KAAK6sD,MAAMriC,cAAegD,GAIpBxtB,MAIRguD,WAAY,SAAWH,GAsBtB,OApBA7tD,KAAKwqB,cAAe,CAAElrB,KAAM,eAAgBJ,KAAM2uD,IAEzB,OAApB7tD,KAAK2sD,aAET3sD,KAAK2sD,WAAW3d,SAAU,GAIP,OAAfhvC,KAAK4sD,QAET5sD,KAAK4sD,MAAM5d,SAAU,GAIF,OAAfhvC,KAAK6sD,QAET7sD,KAAK6sD,MAAM7d,SAAU,GAIfhvC,MAIRqC,OAAQ,SAAWwrD,EAAa9sD,EAAOisD,GAEtC,IAAIiT,EAAY,KACZC,EAAW,KACXC,EAAW,KAEf,MAAMC,EAAYpgE,KAAK2sD,WACjB0T,EAAOrgE,KAAK4sD,MACZ0T,EAAOtgE,KAAK6sD,MAElB,GAAKgB,EAEJ,GAAKyS,GAAQzS,EAAYyS,KAAO,CAE/BH,GAAW,EAEX,IAAM,IAAI5/C,EAAI,EAAGA,GAAKw9C,OAAO+B,OAAOC,mBAAoBx/C,IAEvD,GAAKstC,EAAYyS,KAAM//C,GAAM,CAG5B,MAAMggD,EAAYx/D,EAAMy/D,aAAc3S,EAAYyS,KAAM//C,GAAKysC,GACvDgT,EAAQM,EAAKX,OAAQp/C,GAER,OAAdggD,IAEJP,EAAM9gD,OAAOizC,UAAWoO,EAAUnO,UAAUlzC,QAC5C8gD,EAAM9gD,OAAO+xC,UAAW+O,EAAM7nD,SAAU6nD,EAAMpmD,SAAUomD,EAAMvmD,OAC9DumD,EAAMS,YAAcF,EAAU/1B,QAI/Bw1B,EAAMhxB,QAAwB,OAAduxB,EAKhB,MAAMG,EAAWJ,EAAKX,OAAQ5B,OAAO+B,OAAOa,mBACtCC,EAAWN,EAAKX,OAAQ5B,OAAO+B,OAAOe,mBACtCzoD,EAAWsoD,EAASvoD,SAASk4C,WAAYuQ,EAASzoD,UAElD2oD,EAAkB,IAClBC,EAAY,KAEbT,EAAKV,WAAWC,UAAYznD,EAAW0oD,EAAkBC,GAE7DT,EAAKV,WAAWC,UAAW,EAC3B7/D,KAAKwqB,cAAe,CACnBlrB,KAAM,WACN0hE,WAAYnT,EAAYmT,WACxBvzC,OAAQztB,SAGIsgE,EAAKV,WAAWC,UAAYznD,GAAY0oD,EAAkBC,IAEvET,EAAKV,WAAWC,UAAW,EAC3B7/D,KAAKwqB,cAAe,CACnBlrB,KAAM,aACN0hE,WAAYnT,EAAYmT,WACxBvzC,OAAQztB,cAWO,OAAdogE,IAEJH,EAAYl/D,EAAMkgE,QAASpT,EAAYqT,eAAgBlU,GAEpC,OAAdiT,IAEJG,EAAUlhD,OAAOizC,UAAW8N,EAAU7N,UAAUlzC,QAChDkhD,EAAUlhD,OAAO+xC,UAAWmP,EAAUjoD,SAAUioD,EAAUxmD,SAAUwmD,EAAU3mD,SAMlE,OAAT4mD,GAAiBxS,EAAYsT,YAEjCjB,EAAWn/D,EAAMkgE,QAASpT,EAAYsT,UAAWnU,GAE/B,OAAbkT,IAEJG,EAAKnhD,OAAOizC,UAAW+N,EAAS9N,UAAUlzC,QAC1CmhD,EAAKnhD,OAAO+xC,UAAWoP,EAAKloD,SAAUkoD,EAAKzmD,SAAUymD,EAAK5mD,SA4B9D,OAlBmB,OAAd2mD,IAEJA,EAAUpxB,QAA0B,OAAdixB,GAIT,OAATI,IAEJA,EAAKrxB,QAAyB,OAAbkxB,GAIJ,OAATI,IAEJA,EAAKtxB,QAAyB,OAAbmxB,GAIXngE,QCoPT0E,OAAOmH,OAAQihD,GAAaroD,UAAW4lB,EAAgB5lB"}
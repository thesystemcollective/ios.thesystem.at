{"version":3,"file":"Camera.js","sources":["../../node_modules/three/src/cameras/Camera.js"],"sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\nexport { Camera };\n"],"names":["Camera","Object3D","call","this","type","matrixWorldInverse","Matrix4","projectionMatrix","projectionMatrixInverse","prototype","Object","assign","create","constructor","isCamera","copy","source","recursive","getWorldDirection","target","undefined","Vector3","updateMatrixWorld","e","matrixWorld","elements","set","normalize","force","getInverse","updateWorldMatrix","updateParents","updateChildren","clone"],"mappings":"gDAIA,SAASA,IAERC,EAASC,KAAMC,MAEfA,KAAKC,KAAO,SAEZD,KAAKE,mBAAqB,IAAIC,EAE9BH,KAAKI,iBAAmB,IAAID,EAC5BH,KAAKK,wBAA0B,IAAIF,EAIpCN,EAAOS,UAAYC,OAAOC,OAAQD,OAAOE,OAAQX,EAASQ,WAAa,CAEtEI,YAAab,EAEbc,UAAU,EAEVC,KAAM,SAAWC,EAAQC,GASxB,OAPAhB,EAASQ,UAAUM,KAAKb,KAAMC,KAAMa,EAAQC,GAE5Cd,KAAKE,mBAAmBU,KAAMC,EAAOX,oBAErCF,KAAKI,iBAAiBQ,KAAMC,EAAOT,kBACnCJ,KAAKK,wBAAwBO,KAAMC,EAAOR,yBAEnCL,MAIRe,kBAAmB,SAAWC,QAEbC,IAAXD,IAGJA,EAAS,IAAIE,GAIdlB,KAAKmB,mBAAmB,GAExB,MAAMC,EAAIpB,KAAKqB,YAAYC,SAE3B,OAAON,EAAOO,KAAOH,EAAG,IAAOA,EAAG,IAAOA,EAAG,KAAOI,aAIpDL,kBAAmB,SAAWM,GAE7B3B,EAASQ,UAAUa,kBAAkBpB,KAAMC,KAAMyB,GAEjDzB,KAAKE,mBAAmBwB,WAAY1B,KAAKqB,cAI1CM,kBAAmB,SAAWC,EAAeC,GAE5C/B,EAASQ,UAAUqB,kBAAkB5B,KAAMC,KAAM4B,EAAeC,GAEhE7B,KAAKE,mBAAmBwB,WAAY1B,KAAKqB,cAI1CS,MAAO,WAEN,OAAO,IAAI9B,KAAKU,aAAcE,KAAMZ"}
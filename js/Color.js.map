{"version":3,"file":"Color.js","sources":["../../node_modules/three/src/math/Color.js"],"sourcesContent":["import { MathUtils } from './MathUtils.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tObject.defineProperty( this, 'isColor', { value: true } );\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n\nexport { Color };\n"],"names":["_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","h","s","l","_hslB","hue2rgb","p","q","t","SRGBToLinear","c","Math","pow","LinearToSRGB","Color","[object Object]","r","g","b","Object","defineProperty","this","value","undefined","set","setRGB","isColor","copy","setHex","setStyle","scalar","hex","floor","MathUtils","euclideanModulo","clamp","style","m","exec","color","name","components","min","parseInt","parseFloat","setHSL","size","length","charAt","setColorName","constructor","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","getHex","toString","slice","target","max","hue","saturation","lightness","delta","getHSL","color1","color2","alpha","lerp","array","offset","attribute","index","getX","getY","getZ","normalized","NAMES","prototype"],"mappings":"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"}
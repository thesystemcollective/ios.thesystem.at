import{O as t,V as n}from"./Object3D.js";import{S as e}from"./BufferGeometry.js";import{P as o}from"./Triangle.js";function r(){t.call(this),this.type="Group"}r.prototype=Object.assign(Object.create(t.prototype),{constructor:r,isGroup:!0});const s=new e,i=new n;function c(t,n,e,r,s,i){this.planes=[void 0!==t?t:new o,void 0!==n?n:new o,void 0!==e?e:new o,void 0!==r?r:new o,void 0!==s?s:new o,void 0!==i?i:new o]}Object.assign(c.prototype,{set:function(t,n,e,o,r,s){const i=this.planes;return i[0].copy(t),i[1].copy(n),i[2].copy(e),i[3].copy(o),i[4].copy(r),i[5].copy(s),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){const n=this.planes;for(let e=0;e<6;e++)n[e].copy(t.planes[e]);return this},setFromProjectionMatrix:function(t){const n=this.planes,e=t.elements,o=e[0],r=e[1],s=e[2],i=e[3],c=e[4],p=e[5],a=e[6],u=e[7],m=e[8],l=e[9],f=e[10],h=e[11],y=e[12],d=e[13],x=e[14],z=e[15];return n[0].setComponents(i-o,u-c,h-m,z-y).normalize(),n[1].setComponents(i+o,u+c,h+m,z+y).normalize(),n[2].setComponents(i+r,u+p,h+l,z+d).normalize(),n[3].setComponents(i-r,u-p,h-l,z-d).normalize(),n[4].setComponents(i-s,u-a,h-f,z-x).normalize(),n[5].setComponents(i+s,u+a,h+f,z+x).normalize(),this},intersectsObject:function(t){const n=t.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),s.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(s)},intersectsSprite:function(t){return s.center.set(0,0,0),s.radius=.7071067811865476,s.applyMatrix4(t.matrixWorld),this.intersectsSphere(s)},intersectsSphere:function(t){const n=this.planes,e=t.center,o=-t.radius;for(let t=0;t<6;t++){if(n[t].distanceToPoint(e)<o)return!1}return!0},intersectsBox:function(t){const n=this.planes;for(let e=0;e<6;e++){const o=n[e];if(i.x=o.normal.x>0?t.max.x:t.min.x,i.y=o.normal.y>0?t.max.y:t.min.y,i.z=o.normal.z>0?t.max.z:t.min.z,o.distanceToPoint(i)<0)return!1}return!0},containsPoint:function(t){const n=this.planes;for(let e=0;e<6;e++)if(n[e].distanceToPoint(t)<0)return!1;return!0}});export{c as F,r as G};
//# sourceMappingURL=Frustum.js.map

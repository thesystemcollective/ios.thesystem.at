{"version":3,"file":"Quaternion.js","sources":["../../node_modules/three/src/math/Quaternion.js"],"sourcesContent":["import { MathUtils } from './MathUtils.js';\n\nfunction Quaternion( x = 0, y = 0, z = 0, w = 1 ) {\n\n\tthis._x = x;\n\tthis._y = y;\n\tthis._z = z;\n\tthis._w = w;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t},\n\n\tmultiplyQuaternionsFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tconst EPS = 0.000001;\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };\n"],"names":["Quaternion","x","y","z","w","this","_x","_y","_z","_w","Object","assign","slerp","qa","qb","qm","t","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","s","cos","dir","sqrSin","Number","EPSILON","sin","Math","sqrt","len","atan2","tDir","f","multiplyQuaternionsFlat","defineProperties","prototype","get","set","value","_onChangeCallback","isQuaternion","clone","constructor","quaternion","setFromEuler","euler","update","isEuler","Error","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","r","dot","abs","normalize","angleTo","q","acos","MathUtils","clamp","rotateTowards","step","min","identity","inverse","conjugate","v","lengthSq","length","l","multiply","p","undefined","multiplyQuaternions","premultiply","a","b","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","getW","_onChange","callback"],"mappings":"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"}
{"version":3,"file":"Texture.js","sources":["../../node_modules/three/src/objects/Group.js","../../node_modules/three/src/math/Frustum.js","../../node_modules/three/src/extras/ImageUtils.js","../../node_modules/three/src/textures/Texture.js"],"sourcesContent":["import { Object3D } from '../core/Object3D.js';\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n\nexport { Group };\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\nconst _sphere = new Sphere();\nconst _vector = new Vector3();\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromProjectionMatrix: function ( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function ( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t},\n\n\tintersectsSprite: function ( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n\nexport { Frustum };\n","let _canvas;\n\nconst ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\nexport { ImageUtils };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\n\nlet textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.internalFormat = null;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n\nexport { Texture };\n"],"names":["Group","Object3D","call","this","type","prototype","Object","assign","create","constructor","isGroup","_sphere","Sphere","_vector","Vector3","Frustum","p0","p1","p2","p3","p4","p5","planes","undefined","Plane","_canvas","set","copy","clone","frustum","i","setFromProjectionMatrix","m","me","elements","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","normalize","intersectsObject","object","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","matrixWorld","intersectsSphere","intersectsSprite","sprite","center","radius","sphere","negRadius","distanceToPoint","intersectsBox","box","plane","x","normal","max","min","y","z","containsPoint","point","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","value","uuid","MathUtils","generateUUID","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipmapLinearFilter","RGBAFormat","internalFormat","UnsignedByteType","offset","Vector2","repeat","rotation","matrixAutoUpdate","matrix","Matrix3","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","version","onUpdate","UVMapping","EventDispatcher","isTexture","updateMatrix","setUvTransform","source","slice","toJSON","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","l","length","push","dispose","dispatchEvent","transformUv","uv","applyMatrix3","RepeatWrapping","Math","floor","MirroredRepeatWrapping","abs","ceil"],"mappings":"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"}